{
  "openapi": "3.0.2",
  "servers": [],
  "info": {
    "description": "Honeybee model schema.",
    "version": "1.59.1",
    "title": "Honeybee Model Schema",
    "contact": {
      "name": "Ladybug Tools",
      "email": "info@ladybug.tools",
      "url": "https://github.com/ladybug-tools/honeybee-schema"
    },
    "x-logo": {
      "url": "https://www.ladybug.tools/assets/img/honeybee-large.png",
      "altText": "Honeybee logo"
    },
    "license": {
      "name": "BSD",
      "url": "https://github.com/ladybug-tools-in2/honeybee-schema/blob/master/LICENSE"
    }
  },
  "externalDocs": {
    "description": "OpenAPI Specification with Inheritance",
    "url": "./model_inheritance.json"
  },
  "tags": [
    {
      "name": "afncrack_model",
      "x-displayName": "AFNCrack",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/AFNCrack\" />\n"
    },
    {
      "name": "adiabatic_model",
      "x-displayName": "Adiabatic",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Adiabatic\" />\n"
    },
    {
      "name": "airboundaryconstruction_model",
      "x-displayName": "AirBoundaryConstruction",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/AirBoundaryConstruction\" />\n"
    },
    {
      "name": "airboundaryconstructionabridged_model",
      "x-displayName": "AirBoundaryConstructionAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/AirBoundaryConstructionAbridged\" />\n"
    },
    {
      "name": "allaireconomizertype_model",
      "x-displayName": "AllAirEconomizerType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/AllAirEconomizerType\" />\n"
    },
    {
      "name": "aperture_model",
      "x-displayName": "Aperture",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Aperture\" />\n"
    },
    {
      "name": "apertureconstructionset_model",
      "x-displayName": "ApertureConstructionSet",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ApertureConstructionSet\" />\n"
    },
    {
      "name": "apertureconstructionsetabridged_model",
      "x-displayName": "ApertureConstructionSetAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ApertureConstructionSetAbridged\" />\n"
    },
    {
      "name": "apertureenergypropertiesabridged_model",
      "x-displayName": "ApertureEnergyPropertiesAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ApertureEnergyPropertiesAbridged\" />\n"
    },
    {
      "name": "aperturemodifierset_model",
      "x-displayName": "ApertureModifierSet",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ApertureModifierSet\" />\n"
    },
    {
      "name": "aperturemodifiersetabridged_model",
      "x-displayName": "ApertureModifierSetAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ApertureModifierSetAbridged\" />\n"
    },
    {
      "name": "aperturepropertiesabridged_model",
      "x-displayName": "AperturePropertiesAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/AperturePropertiesAbridged\" />\n"
    },
    {
      "name": "apertureradiancepropertiesabridged_model",
      "x-displayName": "ApertureRadiancePropertiesAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ApertureRadiancePropertiesAbridged\" />\n"
    },
    {
      "name": "autocalculate_model",
      "x-displayName": "Autocalculate",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Autocalculate\" />\n"
    },
    {
      "name": "autosize_model",
      "x-displayName": "Autosize",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Autosize\" />\n"
    },
    {
      "name": "bsdf_model",
      "x-displayName": "BSDF",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/BSDF\" />\n"
    },
    {
      "name": "baseboard_model",
      "x-displayName": "Baseboard",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Baseboard\" />\n"
    },
    {
      "name": "baseboardequipmenttype_model",
      "x-displayName": "BaseboardEquipmentType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/BaseboardEquipmentType\" />\n"
    },
    {
      "name": "buildingtype_model",
      "x-displayName": "BuildingType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/BuildingType\" />\n"
    },
    {
      "name": "color_model",
      "x-displayName": "Color",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Color\" />\n"
    },
    {
      "name": "constructionset_model",
      "x-displayName": "ConstructionSet",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ConstructionSet\" />\n"
    },
    {
      "name": "constructionsetabridged_model",
      "x-displayName": "ConstructionSetAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ConstructionSetAbridged\" />\n"
    },
    {
      "name": "controltype_model",
      "x-displayName": "ControlType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ControlType\" />\n"
    },
    {
      "name": "daylightingcontrol_model",
      "x-displayName": "DaylightingControl",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/DaylightingControl\" />\n"
    },
    {
      "name": "detailedhvac_model",
      "x-displayName": "DetailedHVAC",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/DetailedHVAC\" />\n"
    },
    {
      "name": "door_model",
      "x-displayName": "Door",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Door\" />\n"
    },
    {
      "name": "doorconstructionset_model",
      "x-displayName": "DoorConstructionSet",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/DoorConstructionSet\" />\n"
    },
    {
      "name": "doorconstructionsetabridged_model",
      "x-displayName": "DoorConstructionSetAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/DoorConstructionSetAbridged\" />\n"
    },
    {
      "name": "doorenergypropertiesabridged_model",
      "x-displayName": "DoorEnergyPropertiesAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/DoorEnergyPropertiesAbridged\" />\n"
    },
    {
      "name": "doormodifierset_model",
      "x-displayName": "DoorModifierSet",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/DoorModifierSet\" />\n"
    },
    {
      "name": "doormodifiersetabridged_model",
      "x-displayName": "DoorModifierSetAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/DoorModifierSetAbridged\" />\n"
    },
    {
      "name": "doorpropertiesabridged_model",
      "x-displayName": "DoorPropertiesAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/DoorPropertiesAbridged\" />\n"
    },
    {
      "name": "doorradiancepropertiesabridged_model",
      "x-displayName": "DoorRadiancePropertiesAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/DoorRadiancePropertiesAbridged\" />\n"
    },
    {
      "name": "economizertype_model",
      "x-displayName": "EconomizerType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EconomizerType\" />\n"
    },
    {
      "name": "electricequipment_model",
      "x-displayName": "ElectricEquipment",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ElectricEquipment\" />\n"
    },
    {
      "name": "electricequipmentabridged_model",
      "x-displayName": "ElectricEquipmentAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ElectricEquipmentAbridged\" />\n"
    },
    {
      "name": "electricloadcenter_model",
      "x-displayName": "ElectricLoadCenter",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ElectricLoadCenter\" />\n"
    },
    {
      "name": "energymaterial_model",
      "x-displayName": "EnergyMaterial",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyMaterial\" />\n"
    },
    {
      "name": "energymaterialnomass_model",
      "x-displayName": "EnergyMaterialNoMass",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyMaterialNoMass\" />\n"
    },
    {
      "name": "energymaterialvegetation_model",
      "x-displayName": "EnergyMaterialVegetation",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyMaterialVegetation\" />\n"
    },
    {
      "name": "energywindowframe_model",
      "x-displayName": "EnergyWindowFrame",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyWindowFrame\" />\n"
    },
    {
      "name": "energywindowmaterialblind_model",
      "x-displayName": "EnergyWindowMaterialBlind",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyWindowMaterialBlind\" />\n"
    },
    {
      "name": "energywindowmaterialgas_model",
      "x-displayName": "EnergyWindowMaterialGas",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyWindowMaterialGas\" />\n"
    },
    {
      "name": "energywindowmaterialgascustom_model",
      "x-displayName": "EnergyWindowMaterialGasCustom",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyWindowMaterialGasCustom\" />\n"
    },
    {
      "name": "energywindowmaterialgasmixture_model",
      "x-displayName": "EnergyWindowMaterialGasMixture",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyWindowMaterialGasMixture\" />\n"
    },
    {
      "name": "energywindowmaterialglazing_model",
      "x-displayName": "EnergyWindowMaterialGlazing",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyWindowMaterialGlazing\" />\n"
    },
    {
      "name": "energywindowmaterialshade_model",
      "x-displayName": "EnergyWindowMaterialShade",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyWindowMaterialShade\" />\n"
    },
    {
      "name": "energywindowmaterialsimpleglazsys_model",
      "x-displayName": "EnergyWindowMaterialSimpleGlazSys",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyWindowMaterialSimpleGlazSys\" />\n"
    },
    {
      "name": "evaporativecooler_model",
      "x-displayName": "EvaporativeCooler",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EvaporativeCooler\" />\n"
    },
    {
      "name": "evaporativecoolerequipmenttype_model",
      "x-displayName": "EvaporativeCoolerEquipmentType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EvaporativeCoolerEquipmentType\" />\n"
    },
    {
      "name": "fcu_model",
      "x-displayName": "FCU",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/FCU\" />\n"
    },
    {
      "name": "fcuequipmenttype_model",
      "x-displayName": "FCUEquipmentType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/FCUEquipmentType\" />\n"
    },
    {
      "name": "fcuwithdoasabridged_model",
      "x-displayName": "FCUwithDOASAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/FCUwithDOASAbridged\" />\n"
    },
    {
      "name": "fcuwithdoasequipmenttype_model",
      "x-displayName": "FCUwithDOASEquipmentType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/FCUwithDOASEquipmentType\" />\n"
    },
    {
      "name": "face_model",
      "x-displayName": "Face",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Face\" />\n"
    },
    {
      "name": "face3d_model",
      "x-displayName": "Face3D",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Face3D\" />\n"
    },
    {
      "name": "faceenergypropertiesabridged_model",
      "x-displayName": "FaceEnergyPropertiesAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/FaceEnergyPropertiesAbridged\" />\n"
    },
    {
      "name": "facepropertiesabridged_model",
      "x-displayName": "FacePropertiesAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/FacePropertiesAbridged\" />\n"
    },
    {
      "name": "faceradiancepropertiesabridged_model",
      "x-displayName": "FaceRadiancePropertiesAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/FaceRadiancePropertiesAbridged\" />\n"
    },
    {
      "name": "facetype_model",
      "x-displayName": "FaceType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/FaceType\" />\n"
    },
    {
      "name": "floorconstructionset_model",
      "x-displayName": "FloorConstructionSet",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/FloorConstructionSet\" />\n"
    },
    {
      "name": "floorconstructionsetabridged_model",
      "x-displayName": "FloorConstructionSetAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/FloorConstructionSetAbridged\" />\n"
    },
    {
      "name": "floormodifierset_model",
      "x-displayName": "FloorModifierSet",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/FloorModifierSet\" />\n"
    },
    {
      "name": "floormodifiersetabridged_model",
      "x-displayName": "FloorModifierSetAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/FloorModifierSetAbridged\" />\n"
    },
    {
      "name": "forcedairfurnace_model",
      "x-displayName": "ForcedAirFurnace",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ForcedAirFurnace\" />\n"
    },
    {
      "name": "fueltypes_model",
      "x-displayName": "FuelTypes",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/FuelTypes\" />\n"
    },
    {
      "name": "furnaceequipmenttype_model",
      "x-displayName": "FurnaceEquipmentType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/FurnaceEquipmentType\" />\n"
    },
    {
      "name": "gasequipment_model",
      "x-displayName": "GasEquipment",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/GasEquipment\" />\n"
    },
    {
      "name": "gasequipmentabridged_model",
      "x-displayName": "GasEquipmentAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/GasEquipmentAbridged\" />\n"
    },
    {
      "name": "gastype_model",
      "x-displayName": "GasType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/GasType\" />\n"
    },
    {
      "name": "gasunitheater_model",
      "x-displayName": "GasUnitHeater",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/GasUnitHeater\" />\n"
    },
    {
      "name": "gasunitheaterequipmenttype_model",
      "x-displayName": "GasUnitHeaterEquipmentType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/GasUnitHeaterEquipmentType\" />\n"
    },
    {
      "name": "glass_model",
      "x-displayName": "Glass",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Glass\" />\n"
    },
    {
      "name": "globalconstructionset_model",
      "x-displayName": "GlobalConstructionSet",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/GlobalConstructionSet\" />\n"
    },
    {
      "name": "globalmodifierset_model",
      "x-displayName": "GlobalModifierSet",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/GlobalModifierSet\" />\n"
    },
    {
      "name": "glow_model",
      "x-displayName": "Glow",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Glow\" />\n"
    },
    {
      "name": "ground_model",
      "x-displayName": "Ground",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Ground\" />\n"
    },
    {
      "name": "idealairsystemabridged_model",
      "x-displayName": "IdealAirSystemAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/IdealAirSystemAbridged\" />\n"
    },
    {
      "name": "infiltration_model",
      "x-displayName": "Infiltration",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Infiltration\" />\n"
    },
    {
      "name": "infiltrationabridged_model",
      "x-displayName": "InfiltrationAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/InfiltrationAbridged\" />\n"
    },
    {
      "name": "internalmassabridged_model",
      "x-displayName": "InternalMassAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/InternalMassAbridged\" />\n"
    },
    {
      "name": "light_model",
      "x-displayName": "Light",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Light\" />\n"
    },
    {
      "name": "lighting_model",
      "x-displayName": "Lighting",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Lighting\" />\n"
    },
    {
      "name": "lightingabridged_model",
      "x-displayName": "LightingAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/LightingAbridged\" />\n"
    },
    {
      "name": "mesh3d_model",
      "x-displayName": "Mesh3D",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Mesh3D\" />\n"
    },
    {
      "name": "metal_model",
      "x-displayName": "Metal",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Metal\" />\n"
    },
    {
      "name": "mirror_model",
      "x-displayName": "Mirror",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Mirror\" />\n"
    },
    {
      "name": "model_model",
      "x-displayName": "Model",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Model\" />\n"
    },
    {
      "name": "modeldoe2properties_model",
      "x-displayName": "ModelDoe2Properties",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ModelDoe2Properties\" />\n"
    },
    {
      "name": "modelenergyproperties_model",
      "x-displayName": "ModelEnergyProperties",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ModelEnergyProperties\" />\n"
    },
    {
      "name": "modelproperties_model",
      "x-displayName": "ModelProperties",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ModelProperties\" />\n"
    },
    {
      "name": "modelradianceproperties_model",
      "x-displayName": "ModelRadianceProperties",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ModelRadianceProperties\" />\n"
    },
    {
      "name": "modifierset_model",
      "x-displayName": "ModifierSet",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ModifierSet\" />\n"
    },
    {
      "name": "modifiersetabridged_model",
      "x-displayName": "ModifierSetAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ModifierSetAbridged\" />\n"
    },
    {
      "name": "moduletype_model",
      "x-displayName": "ModuleType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ModuleType\" />\n"
    },
    {
      "name": "moisturediffusionmodel_model",
      "x-displayName": "MoistureDiffusionModel",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/MoistureDiffusionModel\" />\n"
    },
    {
      "name": "mountingtype_model",
      "x-displayName": "MountingType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/MountingType\" />\n"
    },
    {
      "name": "nolimit_model",
      "x-displayName": "NoLimit",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/NoLimit\" />\n"
    },
    {
      "name": "opaqueconstruction_model",
      "x-displayName": "OpaqueConstruction",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/OpaqueConstruction\" />\n"
    },
    {
      "name": "opaqueconstructionabridged_model",
      "x-displayName": "OpaqueConstructionAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/OpaqueConstructionAbridged\" />\n"
    },
    {
      "name": "othersidetemperature_model",
      "x-displayName": "OtherSideTemperature",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/OtherSideTemperature\" />\n"
    },
    {
      "name": "outdoors_model",
      "x-displayName": "Outdoors",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Outdoors\" />\n"
    },
    {
      "name": "psz_model",
      "x-displayName": "PSZ",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/PSZ\" />\n"
    },
    {
      "name": "pszequipmenttype_model",
      "x-displayName": "PSZEquipmentType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/PSZEquipmentType\" />\n"
    },
    {
      "name": "ptac_model",
      "x-displayName": "PTAC",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/PTAC\" />\n"
    },
    {
      "name": "ptacequipmenttype_model",
      "x-displayName": "PTACEquipmentType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/PTACEquipmentType\" />\n"
    },
    {
      "name": "pvav_model",
      "x-displayName": "PVAV",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/PVAV\" />\n"
    },
    {
      "name": "pvavequipmenttype_model",
      "x-displayName": "PVAVEquipmentType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/PVAVEquipmentType\" />\n"
    },
    {
      "name": "pvproperties_model",
      "x-displayName": "PVProperties",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/PVProperties\" />\n"
    },
    {
      "name": "people_model",
      "x-displayName": "People",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/People\" />\n"
    },
    {
      "name": "peopleabridged_model",
      "x-displayName": "PeopleAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/PeopleAbridged\" />\n"
    },
    {
      "name": "plane_model",
      "x-displayName": "Plane",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Plane\" />\n"
    },
    {
      "name": "plastic_model",
      "x-displayName": "Plastic",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Plastic\" />\n"
    },
    {
      "name": "processabridged_model",
      "x-displayName": "ProcessAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ProcessAbridged\" />\n"
    },
    {
      "name": "programtype_model",
      "x-displayName": "ProgramType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ProgramType\" />\n"
    },
    {
      "name": "programtypeabridged_model",
      "x-displayName": "ProgramTypeAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ProgramTypeAbridged\" />\n"
    },
    {
      "name": "radianceshadestateabridged_model",
      "x-displayName": "RadianceShadeStateAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/RadianceShadeStateAbridged\" />\n"
    },
    {
      "name": "radiancesubfacestateabridged_model",
      "x-displayName": "RadianceSubFaceStateAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/RadianceSubFaceStateAbridged\" />\n"
    },
    {
      "name": "radiant_model",
      "x-displayName": "Radiant",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Radiant\" />\n"
    },
    {
      "name": "radiantequipmenttype_model",
      "x-displayName": "RadiantEquipmentType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/RadiantEquipmentType\" />\n"
    },
    {
      "name": "radiantfacetypes_model",
      "x-displayName": "RadiantFaceTypes",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/RadiantFaceTypes\" />\n"
    },
    {
      "name": "radiantwithdoasabridged_model",
      "x-displayName": "RadiantwithDOASAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/RadiantwithDOASAbridged\" />\n"
    },
    {
      "name": "radiantwithdoasequipmenttype_model",
      "x-displayName": "RadiantwithDOASEquipmentType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/RadiantwithDOASEquipmentType\" />\n"
    },
    {
      "name": "residential_model",
      "x-displayName": "Residential",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Residential\" />\n"
    },
    {
      "name": "residentialequipmenttype_model",
      "x-displayName": "ResidentialEquipmentType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ResidentialEquipmentType\" />\n"
    },
    {
      "name": "roofceilingconstructionset_model",
      "x-displayName": "RoofCeilingConstructionSet",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/RoofCeilingConstructionSet\" />\n"
    },
    {
      "name": "roofceilingconstructionsetabridged_model",
      "x-displayName": "RoofCeilingConstructionSetAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/RoofCeilingConstructionSetAbridged\" />\n"
    },
    {
      "name": "roofceilingmodifierset_model",
      "x-displayName": "RoofCeilingModifierSet",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/RoofCeilingModifierSet\" />\n"
    },
    {
      "name": "roofceilingmodifiersetabridged_model",
      "x-displayName": "RoofCeilingModifierSetAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/RoofCeilingModifierSetAbridged\" />\n"
    },
    {
      "name": "room_model",
      "x-displayName": "Room",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Room\" />\n"
    },
    {
      "name": "roomdoe2properties_model",
      "x-displayName": "RoomDoe2Properties",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/RoomDoe2Properties\" />\n"
    },
    {
      "name": "roomenergypropertiesabridged_model",
      "x-displayName": "RoomEnergyPropertiesAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/RoomEnergyPropertiesAbridged\" />\n"
    },
    {
      "name": "roompropertiesabridged_model",
      "x-displayName": "RoomPropertiesAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/RoomPropertiesAbridged\" />\n"
    },
    {
      "name": "roomradiancepropertiesabridged_model",
      "x-displayName": "RoomRadiancePropertiesAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/RoomRadiancePropertiesAbridged\" />\n"
    },
    {
      "name": "roughness_model",
      "x-displayName": "Roughness",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Roughness\" />\n"
    },
    {
      "name": "shwequipmenttype_model",
      "x-displayName": "SHWEquipmentType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/SHWEquipmentType\" />\n"
    },
    {
      "name": "shwsystem_model",
      "x-displayName": "SHWSystem",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/SHWSystem\" />\n"
    },
    {
      "name": "scheduleday_model",
      "x-displayName": "ScheduleDay",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ScheduleDay\" />\n"
    },
    {
      "name": "schedulefixedinterval_model",
      "x-displayName": "ScheduleFixedInterval",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ScheduleFixedInterval\" />\n"
    },
    {
      "name": "schedulefixedintervalabridged_model",
      "x-displayName": "ScheduleFixedIntervalAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ScheduleFixedIntervalAbridged\" />\n"
    },
    {
      "name": "schedulenumerictype_model",
      "x-displayName": "ScheduleNumericType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ScheduleNumericType\" />\n"
    },
    {
      "name": "scheduleruleabridged_model",
      "x-displayName": "ScheduleRuleAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ScheduleRuleAbridged\" />\n"
    },
    {
      "name": "scheduleruleset_model",
      "x-displayName": "ScheduleRuleset",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ScheduleRuleset\" />\n"
    },
    {
      "name": "schedulerulesetabridged_model",
      "x-displayName": "ScheduleRulesetAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ScheduleRulesetAbridged\" />\n"
    },
    {
      "name": "scheduletypelimit_model",
      "x-displayName": "ScheduleTypeLimit",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ScheduleTypeLimit\" />\n"
    },
    {
      "name": "scheduleunittype_model",
      "x-displayName": "ScheduleUnitType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ScheduleUnitType\" />\n"
    },
    {
      "name": "sensor_model",
      "x-displayName": "Sensor",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Sensor\" />\n"
    },
    {
      "name": "sensorgrid_model",
      "x-displayName": "SensorGrid",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/SensorGrid\" />\n"
    },
    {
      "name": "servicehotwater_model",
      "x-displayName": "ServiceHotWater",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ServiceHotWater\" />\n"
    },
    {
      "name": "servicehotwaterabridged_model",
      "x-displayName": "ServiceHotWaterAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ServiceHotWaterAbridged\" />\n"
    },
    {
      "name": "setpoint_model",
      "x-displayName": "Setpoint",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Setpoint\" />\n"
    },
    {
      "name": "setpointabridged_model",
      "x-displayName": "SetpointAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/SetpointAbridged\" />\n"
    },
    {
      "name": "shade_model",
      "x-displayName": "Shade",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Shade\" />\n"
    },
    {
      "name": "shadeconstruction_model",
      "x-displayName": "ShadeConstruction",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ShadeConstruction\" />\n"
    },
    {
      "name": "shadeenergypropertiesabridged_model",
      "x-displayName": "ShadeEnergyPropertiesAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ShadeEnergyPropertiesAbridged\" />\n"
    },
    {
      "name": "shadelocation_model",
      "x-displayName": "ShadeLocation",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ShadeLocation\" />\n"
    },
    {
      "name": "shademesh_model",
      "x-displayName": "ShadeMesh",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ShadeMesh\" />\n"
    },
    {
      "name": "shademeshenergypropertiesabridged_model",
      "x-displayName": "ShadeMeshEnergyPropertiesAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ShadeMeshEnergyPropertiesAbridged\" />\n"
    },
    {
      "name": "shademeshpropertiesabridged_model",
      "x-displayName": "ShadeMeshPropertiesAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ShadeMeshPropertiesAbridged\" />\n"
    },
    {
      "name": "shademeshradiancepropertiesabridged_model",
      "x-displayName": "ShadeMeshRadiancePropertiesAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ShadeMeshRadiancePropertiesAbridged\" />\n"
    },
    {
      "name": "shademodifierset_model",
      "x-displayName": "ShadeModifierSet",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ShadeModifierSet\" />\n"
    },
    {
      "name": "shademodifiersetabridged_model",
      "x-displayName": "ShadeModifierSetAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ShadeModifierSetAbridged\" />\n"
    },
    {
      "name": "shadepropertiesabridged_model",
      "x-displayName": "ShadePropertiesAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ShadePropertiesAbridged\" />\n"
    },
    {
      "name": "shaderadiancepropertiesabridged_model",
      "x-displayName": "ShadeRadiancePropertiesAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ShadeRadiancePropertiesAbridged\" />\n"
    },
    {
      "name": "slatorientation_model",
      "x-displayName": "SlatOrientation",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/SlatOrientation\" />\n"
    },
    {
      "name": "stategeometryabridged_model",
      "x-displayName": "StateGeometryAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/StateGeometryAbridged\" />\n"
    },
    {
      "name": "surface_model",
      "x-displayName": "Surface",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Surface\" />\n"
    },
    {
      "name": "trans_model",
      "x-displayName": "Trans",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Trans\" />\n"
    },
    {
      "name": "units_model",
      "x-displayName": "Units",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Units\" />\n"
    },
    {
      "name": "vav_model",
      "x-displayName": "VAV",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/VAV\" />\n"
    },
    {
      "name": "vavequipmenttype_model",
      "x-displayName": "VAVEquipmentType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/VAVEquipmentType\" />\n"
    },
    {
      "name": "vrf_model",
      "x-displayName": "VRF",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/VRF\" />\n"
    },
    {
      "name": "vrfequipmenttype_model",
      "x-displayName": "VRFEquipmentType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/VRFEquipmentType\" />\n"
    },
    {
      "name": "vrfwithdoasabridged_model",
      "x-displayName": "VRFwithDOASAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/VRFwithDOASAbridged\" />\n"
    },
    {
      "name": "vrfwithdoasequipmenttype_model",
      "x-displayName": "VRFwithDOASEquipmentType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/VRFwithDOASEquipmentType\" />\n"
    },
    {
      "name": "ventilation_model",
      "x-displayName": "Ventilation",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Ventilation\" />\n"
    },
    {
      "name": "ventilationabridged_model",
      "x-displayName": "VentilationAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/VentilationAbridged\" />\n"
    },
    {
      "name": "ventilationcontrolabridged_model",
      "x-displayName": "VentilationControlAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/VentilationControlAbridged\" />\n"
    },
    {
      "name": "ventilationcontroltype_model",
      "x-displayName": "VentilationControlType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/VentilationControlType\" />\n"
    },
    {
      "name": "ventilationfan_model",
      "x-displayName": "VentilationFan",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/VentilationFan\" />\n"
    },
    {
      "name": "ventilationopening_model",
      "x-displayName": "VentilationOpening",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/VentilationOpening\" />\n"
    },
    {
      "name": "ventilationsimulationcontrol_model",
      "x-displayName": "VentilationSimulationControl",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/VentilationSimulationControl\" />\n"
    },
    {
      "name": "ventilationtype_model",
      "x-displayName": "VentilationType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/VentilationType\" />\n"
    },
    {
      "name": "view_model",
      "x-displayName": "View",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/View\" />\n"
    },
    {
      "name": "viewtype_model",
      "x-displayName": "ViewType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ViewType\" />\n"
    },
    {
      "name": "vintages_model",
      "x-displayName": "Vintages",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Vintages\" />\n"
    },
    {
      "name": "void_model",
      "x-displayName": "Void",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Void\" />\n"
    },
    {
      "name": "wshp_model",
      "x-displayName": "WSHP",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WSHP\" />\n"
    },
    {
      "name": "wshpequipmenttype_model",
      "x-displayName": "WSHPEquipmentType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WSHPEquipmentType\" />\n"
    },
    {
      "name": "wshpwithdoasabridged_model",
      "x-displayName": "WSHPwithDOASAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WSHPwithDOASAbridged\" />\n"
    },
    {
      "name": "wshpwithdoasequipmenttype_model",
      "x-displayName": "WSHPwithDOASEquipmentType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WSHPwithDOASEquipmentType\" />\n"
    },
    {
      "name": "wallconstructionset_model",
      "x-displayName": "WallConstructionSet",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WallConstructionSet\" />\n"
    },
    {
      "name": "wallconstructionsetabridged_model",
      "x-displayName": "WallConstructionSetAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WallConstructionSetAbridged\" />\n"
    },
    {
      "name": "wallmodifierset_model",
      "x-displayName": "WallModifierSet",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WallModifierSet\" />\n"
    },
    {
      "name": "wallmodifiersetabridged_model",
      "x-displayName": "WallModifierSetAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WallModifierSetAbridged\" />\n"
    },
    {
      "name": "windowac_model",
      "x-displayName": "WindowAC",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WindowAC\" />\n"
    },
    {
      "name": "windowacequipmenttype_model",
      "x-displayName": "WindowACEquipmentType",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WindowACEquipmentType\" />\n"
    },
    {
      "name": "windowconstruction_model",
      "x-displayName": "WindowConstruction",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WindowConstruction\" />\n"
    },
    {
      "name": "windowconstructionabridged_model",
      "x-displayName": "WindowConstructionAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WindowConstructionAbridged\" />\n"
    },
    {
      "name": "windowconstructiondynamic_model",
      "x-displayName": "WindowConstructionDynamic",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WindowConstructionDynamic\" />\n"
    },
    {
      "name": "windowconstructiondynamicabridged_model",
      "x-displayName": "WindowConstructionDynamicAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WindowConstructionDynamicAbridged\" />\n"
    },
    {
      "name": "windowconstructionshade_model",
      "x-displayName": "WindowConstructionShade",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WindowConstructionShade\" />\n"
    },
    {
      "name": "windowconstructionshadeabridged_model",
      "x-displayName": "WindowConstructionShadeAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WindowConstructionShadeAbridged\" />\n"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Models",
      "tags": [
        "adiabatic_model",
        "afncrack_model",
        "airboundaryconstruction_model",
        "airboundaryconstructionabridged_model",
        "allaireconomizertype_model",
        "aperture_model",
        "apertureconstructionset_model",
        "apertureconstructionsetabridged_model",
        "apertureenergypropertiesabridged_model",
        "aperturemodifierset_model",
        "aperturemodifiersetabridged_model",
        "aperturepropertiesabridged_model",
        "apertureradiancepropertiesabridged_model",
        "autocalculate_model",
        "autosize_model",
        "baseboard_model",
        "baseboardequipmenttype_model",
        "bsdf_model",
        "buildingtype_model",
        "color_model",
        "constructionset_model",
        "constructionsetabridged_model",
        "controltype_model",
        "daylightingcontrol_model",
        "detailedhvac_model",
        "door_model",
        "doorconstructionset_model",
        "doorconstructionsetabridged_model",
        "doorenergypropertiesabridged_model",
        "doormodifierset_model",
        "doormodifiersetabridged_model",
        "doorpropertiesabridged_model",
        "doorradiancepropertiesabridged_model",
        "economizertype_model",
        "electricequipment_model",
        "electricequipmentabridged_model",
        "electricloadcenter_model",
        "energymaterial_model",
        "energymaterialnomass_model",
        "energymaterialvegetation_model",
        "energywindowframe_model",
        "energywindowmaterialblind_model",
        "energywindowmaterialgas_model",
        "energywindowmaterialgascustom_model",
        "energywindowmaterialgasmixture_model",
        "energywindowmaterialglazing_model",
        "energywindowmaterialshade_model",
        "energywindowmaterialsimpleglazsys_model",
        "evaporativecooler_model",
        "evaporativecoolerequipmenttype_model",
        "face3d_model",
        "face_model",
        "faceenergypropertiesabridged_model",
        "facepropertiesabridged_model",
        "faceradiancepropertiesabridged_model",
        "facetype_model",
        "fcu_model",
        "fcuequipmenttype_model",
        "fcuwithdoasabridged_model",
        "fcuwithdoasequipmenttype_model",
        "floorconstructionset_model",
        "floorconstructionsetabridged_model",
        "floormodifierset_model",
        "floormodifiersetabridged_model",
        "forcedairfurnace_model",
        "fueltypes_model",
        "furnaceequipmenttype_model",
        "gasequipment_model",
        "gasequipmentabridged_model",
        "gastype_model",
        "gasunitheater_model",
        "gasunitheaterequipmenttype_model",
        "glass_model",
        "globalconstructionset_model",
        "globalmodifierset_model",
        "glow_model",
        "ground_model",
        "idealairsystemabridged_model",
        "infiltration_model",
        "infiltrationabridged_model",
        "internalmassabridged_model",
        "light_model",
        "lighting_model",
        "lightingabridged_model",
        "mesh3d_model",
        "metal_model",
        "mirror_model",
        "model_model",
        "modeldoe2properties_model",
        "modelenergyproperties_model",
        "modelproperties_model",
        "modelradianceproperties_model",
        "modifierset_model",
        "modifiersetabridged_model",
        "moduletype_model",
        "moisturediffusionmodel_model",
        "mountingtype_model",
        "nolimit_model",
        "opaqueconstruction_model",
        "opaqueconstructionabridged_model",
        "othersidetemperature_model",
        "outdoors_model",
        "people_model",
        "peopleabridged_model",
        "plane_model",
        "plastic_model",
        "processabridged_model",
        "programtype_model",
        "programtypeabridged_model",
        "psz_model",
        "pszequipmenttype_model",
        "ptac_model",
        "ptacequipmenttype_model",
        "pvav_model",
        "pvavequipmenttype_model",
        "pvproperties_model",
        "radianceshadestateabridged_model",
        "radiancesubfacestateabridged_model",
        "radiant_model",
        "radiantequipmenttype_model",
        "radiantfacetypes_model",
        "radiantwithdoasabridged_model",
        "radiantwithdoasequipmenttype_model",
        "residential_model",
        "residentialequipmenttype_model",
        "roofceilingconstructionset_model",
        "roofceilingconstructionsetabridged_model",
        "roofceilingmodifierset_model",
        "roofceilingmodifiersetabridged_model",
        "room_model",
        "roomdoe2properties_model",
        "roomenergypropertiesabridged_model",
        "roompropertiesabridged_model",
        "roomradiancepropertiesabridged_model",
        "roughness_model",
        "scheduleday_model",
        "schedulefixedinterval_model",
        "schedulefixedintervalabridged_model",
        "schedulenumerictype_model",
        "scheduleruleabridged_model",
        "scheduleruleset_model",
        "schedulerulesetabridged_model",
        "scheduletypelimit_model",
        "scheduleunittype_model",
        "sensor_model",
        "sensorgrid_model",
        "servicehotwater_model",
        "servicehotwaterabridged_model",
        "setpoint_model",
        "setpointabridged_model",
        "shade_model",
        "shadeconstruction_model",
        "shadeenergypropertiesabridged_model",
        "shadelocation_model",
        "shademesh_model",
        "shademeshenergypropertiesabridged_model",
        "shademeshpropertiesabridged_model",
        "shademeshradiancepropertiesabridged_model",
        "shademodifierset_model",
        "shademodifiersetabridged_model",
        "shadepropertiesabridged_model",
        "shaderadiancepropertiesabridged_model",
        "shwequipmenttype_model",
        "shwsystem_model",
        "slatorientation_model",
        "stategeometryabridged_model",
        "surface_model",
        "trans_model",
        "units_model",
        "vav_model",
        "vavequipmenttype_model",
        "ventilation_model",
        "ventilationabridged_model",
        "ventilationcontrolabridged_model",
        "ventilationcontroltype_model",
        "ventilationfan_model",
        "ventilationopening_model",
        "ventilationsimulationcontrol_model",
        "ventilationtype_model",
        "view_model",
        "viewtype_model",
        "vintages_model",
        "void_model",
        "vrf_model",
        "vrfequipmenttype_model",
        "vrfwithdoasabridged_model",
        "vrfwithdoasequipmenttype_model",
        "wallconstructionset_model",
        "wallconstructionsetabridged_model",
        "wallmodifierset_model",
        "wallmodifiersetabridged_model",
        "windowac_model",
        "windowacequipmenttype_model",
        "windowconstruction_model",
        "windowconstructionabridged_model",
        "windowconstructiondynamic_model",
        "windowconstructiondynamicabridged_model",
        "windowconstructionshade_model",
        "windowconstructionshadeabridged_model",
        "wshp_model",
        "wshpequipmenttype_model",
        "wshpwithdoasabridged_model",
        "wshpwithdoasequipmenttype_model"
      ]
    }
  ],
  "paths": {},
  "components": {
    "schemas": {
      "Plane": {
        "title": "Plane",
        "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
        "type": "object",
        "properties": {
          "n": {
            "title": "N",
            "description": "Plane normal as 3 (x, y, z) values.",
            "minItems": 3,
            "maxItems": 3,
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "o": {
            "title": "O",
            "description": "Plane origin as 3 (x, y, z) values",
            "minItems": 3,
            "maxItems": 3,
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "type": {
            "title": "Type",
            "default": "Plane",
            "pattern": "^Plane$",
            "type": "string",
            "readOnly": true
          },
          "x": {
            "title": "X",
            "description": "Plane x-axis as 3 (x, y, z) values. If None, it is autocalculated.",
            "minItems": 3,
            "maxItems": 3,
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          }
        },
        "required": [
          "n",
          "o"
        ],
        "additionalProperties": false
      },
      "Face3D": {
        "title": "Face3D",
        "description": "A single planar face in 3D space.",
        "type": "object",
        "properties": {
          "boundary": {
            "title": "Boundary",
            "description": "A list of points representing the outer boundary vertices of the face. The list should include at least 3 points and each point should be a list of 3 (x, y, z) values.",
            "minItems": 3,
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              },
              "minItems": 3,
              "maxItems": 3
            }
          },
          "type": {
            "title": "Type",
            "default": "Face3D",
            "pattern": "^Face3D$",
            "type": "string",
            "readOnly": true
          },
          "holes": {
            "title": "Holes",
            "description": "Optional list of lists with one list for each hole in the face.Each hole should be a list of at least 3 points and each point a list of 3 (x, y, z) values. If None, it will be assumed that there are no holes in the face.",
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "number",
                  "format": "double"
                },
                "minItems": 3,
                "maxItems": 3
              },
              "minItems": 3
            }
          },
          "plane": {
            "title": "Plane",
            "description": "Optional Plane indicating the plane in which the face exists.If None, the plane will usually be derived from the boundary points.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Plane"
              }
            ]
          }
        },
        "required": [
          "boundary"
        ],
        "additionalProperties": false
      },
      "FaceType": {
        "title": "FaceType",
        "description": "An enumeration.",
        "enum": [
          "Wall",
          "Floor",
          "RoofCeiling",
          "AirBoundary"
        ],
        "type": "string"
      },
      "Ground": {
        "title": "Ground",
        "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "Ground",
            "pattern": "^Ground$",
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Autocalculate": {
        "title": "Autocalculate",
        "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "Autocalculate",
            "pattern": "^Autocalculate$",
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Outdoors": {
        "title": "Outdoors",
        "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "Outdoors",
            "pattern": "^Outdoors$",
            "type": "string",
            "readOnly": true
          },
          "sun_exposure": {
            "title": "Sun Exposure",
            "description": "A boolean noting whether the boundary is exposed to sun.",
            "default": true,
            "type": "boolean"
          },
          "wind_exposure": {
            "title": "Wind Exposure",
            "description": "A boolean noting whether the boundary is exposed to wind.",
            "default": true,
            "type": "boolean"
          },
          "view_factor": {
            "title": "View Factor",
            "description": "A number for the view factor to the ground. This can also be an Autocalculate object to have the view factor automatically calculated.",
            "default": {
              "type": "Autocalculate"
            },
            "anyOf": [
              {
                "$ref": "#/components/schemas/Autocalculate"
              },
              {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "Adiabatic": {
        "title": "Adiabatic",
        "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "Adiabatic",
            "pattern": "^Adiabatic$",
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Surface": {
        "title": "Surface",
        "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
        "type": "object",
        "properties": {
          "boundary_condition_objects": {
            "title": "Boundary Condition Objects",
            "description": "A list of up to 3 object identifiers that are adjacent to this one. The first object is always the one that is immediately adjacent and is of the same object type (Face, Aperture, Door). When this boundary condition is applied to a Face, the second object in the tuple will be the parent Room of the adjacent object. When the boundary condition is applied to a sub-face (Door or Aperture), the second object will be the parent Face of the adjacent sub-face and the third object will be the parent Room of the adjacent sub-face.",
            "minItems": 2,
            "maxItems": 3,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "default": "Surface",
            "pattern": "^Surface$",
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "boundary_condition_objects"
        ],
        "additionalProperties": false
      },
      "OtherSideTemperature": {
        "title": "OtherSideTemperature",
        "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "OtherSideTemperature",
            "pattern": "^OtherSideTemperature$",
            "type": "string",
            "readOnly": true
          },
          "heat_transfer_coefficient": {
            "title": "Heat Transfer Coefficient",
            "description": "A value in W/m2-K to indicate the combined convective/radiative film coefficient. If equal to 0, then the specified temperature above is equal to the exterior surface temperature. Otherwise, the temperature above is considered the outside air temperature and this coefficient is used to determine the difference between this outside air temperature and the exterior surface temperature.",
            "default": 0,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "temperature": {
            "title": "Temperature",
            "description": "A temperature value in Celsius to note the temperature on the other side of the object. This input can also be an Autocalculate object to signify that the temperature is equal to the outdoor air temperature.",
            "default": {
              "type": "Autocalculate"
            },
            "anyOf": [
              {
                "$ref": "#/components/schemas/Autocalculate"
              },
              {
                "type": "number"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "ModuleType": {
        "title": "ModuleType",
        "description": "An enumeration.",
        "enum": [
          "Standard",
          "Premium",
          "ThinFilm"
        ],
        "type": "string"
      },
      "MountingType": {
        "title": "MountingType",
        "description": "An enumeration.",
        "enum": [
          "FixedOpenRack",
          "FixedRoofMounted",
          "OneAxis",
          "OneAxisBacktracking",
          "TwoAxis"
        ],
        "type": "string"
      },
      "PVProperties": {
        "title": "PVProperties",
        "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "PVProperties",
            "pattern": "^PVProperties$",
            "type": "string",
            "readOnly": true
          },
          "rated_efficiency": {
            "title": "Rated Efficiency",
            "description": "A number between 0 and 1 for the rated nameplate efficiency of the photovoltaic solar cells under standard test conditions (STC). Standard test conditions are 1,000 Watts per square meter solar irradiance, 25 degrees C cell temperature, and ASTM G173-03 standard spectrum. Nameplate efficiencies reported by manufacturers are typically under STC. Standard poly- or mono-crystalline silicon modules tend to have rated efficiencies in the range of 14-17%. Premium high efficiency mono-crystalline silicon modules with anti-reflective coatings can have efficiencies in the range of 18-20%. Thin film photovoltaic modules typically have efficiencies of 11% or less. (Default: 0.15 for standard silicon solar cells).",
            "default": 0.15,
            "exclusiveMinimum": 0,
            "exclusiveMaximum": 1,
            "type": "number",
            "format": "double"
          },
          "active_area_fraction": {
            "title": "Active Area Fraction",
            "description": "The fraction of the parent Shade geometry that is covered in active solar cells. This fraction includes the difference between the PV panel (aka. PV module) area and the active cells within the panel as well as any losses for how the (typically rectangular) panels can be arranged on the Shade geometry. When the parent Shade geometry represents just the solar panels, this fraction is typically around 0.9 given that the framing elements of the panel reduce the overall active area. (Default: 0.9, assuming parent Shade geometry represents only the PV panel geometry).",
            "default": 0.9,
            "exclusiveMinimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "module_type": {
            "description": "Text to indicate the type of solar module. This is used to determine the temperature coefficients used in the simulation of the photovoltaic modules. When the rated_efficiency is between 12-18%, the Standard type is typically most appropriate. When the rated_efficiency is greater than 18%, the Premium type is likely more appropriate. When the rated_efficiency is less than 12%, this likely refers to a case where the ThinFilm module type is most appropriate.",
            "default": "Standard",
            "allOf": [
              {
                "$ref": "#/components/schemas/ModuleType"
              }
            ]
          },
          "mounting_type": {
            "description": "Text to indicate the type of mounting and/or tracking used for the photovoltaic array. Note that the OneAxis options have an axis of rotation that is determined by the azimuth of the parent Shade geometry. Also note that, in the case of one or two axis tracking, shadows on the (static) parent Shade geometry still reduce the electrical output, enabling the simulation to account for large context geometry casting shadows on the array. However, the effects of smaller detailed shading may be improperly accounted for and self shading of the dynamic panel geometry is only accounted for via the tracking_ground_coverage_ratio property on this object. FixedOpenRack refers to ground or roof mounting where the air flows freely. FixedRoofMounted refers to mounting flush with the roof with limited air flow. OneAxis refers to a fixed tilt and azimuth, which define an axis of rotation. OneAxisBacktracking is the same as OneAxis but with controls to reduce self-shade at low sun angles. TwoAxis refers to a dynamic tilt and azimuth that track the sun.",
            "default": "FixedOpenRack",
            "allOf": [
              {
                "$ref": "#/components/schemas/MountingType"
              }
            ]
          },
          "system_loss_fraction": {
            "title": "System Loss Fraction",
            "description": "A number between 0 and 1 for the fraction of the electricity output lost due to factors other than EPW weather conditions, panel efficiency/type, active area, mounting, and inverter conversion from DC to AC. Factors that should be accounted for in this input include soiling, snow, wiring losses, electrical connection losses, manufacturer defects/tolerances/mismatch in cell characteristics, losses from power grid availability, and losses due to age or light-induced degradation. Losses from these factors tend to be between 10-20% but can vary widely depending on the installation, maintenance and the grid to which the panels are connected..",
            "default": 0.14,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "ShadeEnergyPropertiesAbridged": {
        "title": "ShadeEnergyPropertiesAbridged",
        "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "ShadeEnergyPropertiesAbridged",
            "pattern": "^ShadeEnergyPropertiesAbridged$",
            "type": "string",
            "readOnly": true
          },
          "construction": {
            "title": "Construction",
            "description": "Identifier of a ShadeConstruction to set the reflectance and specularity of the Shade. If None, the construction is set by theparent Room construction_set, the Model global_construction_set or (in the case fo an orphaned shade) the EnergyPlus default of 0.2 diffuse reflectance.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "transmittance_schedule": {
            "title": "Transmittance Schedule",
            "description": "Identifier of a schedule to set the transmittance of the shade, which can vary throughout the simulation. If None, the shade will be completely opaque.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "pv_properties": {
            "title": "Pv Properties",
            "description": "An optional PVProperties object to specify photovoltaic behavior of the Shade. If None, the Shade will have no Photovoltaic properties. Note that the normal of the Shade is important in determining the performance of the shade as a PV geometry.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PVProperties"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "StateGeometryAbridged": {
        "title": "StateGeometryAbridged",
        "description": "A single planar geometry that can be assigned to Radiance states.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique Radiance object. Must not contain spaces or special characters. This will be used to identify the object across a model and in the exported Radiance files.",
            "minLength": 1,
            "pattern": "^[.A-Za-z0-9_-]+$",
            "type": "string"
          },
          "geometry": {
            "title": "Geometry",
            "description": "A ladybug_geometry Face3D.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Face3D"
              }
            ]
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "StateGeometryAbridged",
            "pattern": "^StateGeometryAbridged$",
            "type": "string",
            "readOnly": true
          },
          "modifier": {
            "title": "Modifier",
            "description": "A string for a Honeybee Radiance Modifier identifier (default: None).",
            "type": "string"
          },
          "modifier_direct": {
            "title": "Modifier Direct",
            "description": "A string for Honeybee Radiance Modifier identifiers to be used in direct solar simulations and in isolation studies (assessingthe contribution of individual objects) (default: None).",
            "type": "string"
          }
        },
        "required": [
          "identifier",
          "geometry"
        ],
        "additionalProperties": false
      },
      "RadianceShadeStateAbridged": {
        "title": "RadianceShadeStateAbridged",
        "description": "RadianceShadeStateAbridged represents a single state for a dynamic Shade.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "RadianceShadeStateAbridged",
            "pattern": "^RadianceShadeStateAbridged$",
            "type": "string",
            "readOnly": true
          },
          "modifier": {
            "title": "Modifier",
            "description": "A Radiance Modifier identifier (default: None).",
            "type": "string"
          },
          "modifier_direct": {
            "title": "Modifier Direct",
            "description": "A Radiance Modifier identifier (default: None).",
            "type": "string"
          },
          "shades": {
            "title": "Shades",
            "description": "A list of StateGeometryAbridged objects (default: None).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateGeometryAbridged"
            }
          }
        },
        "additionalProperties": false
      },
      "ShadeRadiancePropertiesAbridged": {
        "title": "ShadeRadiancePropertiesAbridged",
        "description": "Radiance Properties for Honeybee Shade Abridged.",
        "type": "object",
        "properties": {
          "modifier": {
            "title": "Modifier",
            "description": "A string for a Honeybee Radiance Modifier (default: None).",
            "type": "string"
          },
          "modifier_blk": {
            "title": "Modifier Blk",
            "description": "A string for a Honeybee Radiance Modifier to be used in direct solar simulations and in isolation studies (assessingthe contribution of individual objects) (default: None).",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "ShadeRadiancePropertiesAbridged",
            "pattern": "^ShadeRadiancePropertiesAbridged$",
            "type": "string",
            "readOnly": true
          },
          "dynamic_group_identifier": {
            "title": "Dynamic Group Identifier",
            "description": "An optional string to note the dynamic group '             'to which the Shade is a part of. Shades sharing the same '             'dynamic_group_identifier will have their states change in unison. '             'If None, the Shade is assumed to be static. (default: None).",
            "type": "string"
          },
          "states": {
            "title": "States",
            "description": "An optional list of abridged states (default: None).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RadianceShadeStateAbridged"
            }
          }
        },
        "additionalProperties": false
      },
      "ShadePropertiesAbridged": {
        "title": "ShadePropertiesAbridged",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "ShadePropertiesAbridged",
            "pattern": "^ShadePropertiesAbridged$",
            "type": "string",
            "readOnly": true
          },
          "energy": {
            "$ref": "#/components/schemas/ShadeEnergyPropertiesAbridged"
          },
          "radiance": {
            "$ref": "#/components/schemas/ShadeRadiancePropertiesAbridged"
          }
        }
      },
      "Shade": {
        "title": "Shade",
        "description": "Base class for all objects requiring a identifiers acceptable for all engines.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, rad). This identifier is also used to reference the object across a Model. It must be < 100 characters and not contain any spaces or special characters.",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[.A-Za-z0-9_-]+$",
            "type": "string"
          },
          "geometry": {
            "title": "Geometry",
            "description": "Planar Face3D for the geometry.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Face3D"
              }
            ]
          },
          "properties": {
            "title": "Properties",
            "description": "Extension properties for particular simulation engines (Radiance, EnergyPlus).",
            "allOf": [
              {
                "$ref": "#/components/schemas/ShadePropertiesAbridged"
              }
            ]
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "Shade",
            "pattern": "^Shade$",
            "type": "string",
            "readOnly": true
          },
          "is_detached": {
            "title": "Is Detached",
            "description": "Boolean to note whether this shade is detached from any of the other geometry in the model. Cases where this should be True include shade representing surrounding buildings or context. Note that this should always be False for shades assigned to parent objects.",
            "default": false,
            "type": "boolean"
          }
        },
        "required": [
          "identifier",
          "geometry",
          "properties"
        ],
        "additionalProperties": false
      },
      "VentilationOpening": {
        "title": "VentilationOpening",
        "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "VentilationOpening",
            "pattern": "^VentilationOpening$",
            "type": "string",
            "readOnly": true
          },
          "fraction_area_operable": {
            "title": "Fraction Area Operable",
            "description": "A number for the fraction of the window area that is operable.",
            "default": 0.5,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "fraction_height_operable": {
            "title": "Fraction Height Operable",
            "description": "A number for the fraction of the distance from the bottom of the window to the top that is operable",
            "default": 1.0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "discharge_coefficient": {
            "title": "Discharge Coefficient",
            "description": "A number that will be multiplied by the area of the window in the stack (buoyancy-driven) part of the equation to account for additional friction from window geometry, insect screens, etc. Typical values include 0.45, for unobstructed windows WITH insect screens and 0.65 for unobstructed windows WITHOUT insect screens. This value should be lowered if windows are of an awning or casement type and are not allowed to fully open.",
            "default": 0.45,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "wind_cross_vent": {
            "title": "Wind Cross Vent",
            "description": "Boolean to indicate if there is an opening of roughly equal area on the opposite side of the Room such that wind-driven cross ventilation will be induced. If False, the assumption is that the operable area is primarily on one side of the Room and there is no wind-driven ventilation.",
            "default": false,
            "type": "boolean"
          },
          "flow_coefficient_closed": {
            "title": "Flow Coefficient Closed",
            "description": "An optional number in kg/s-m, at 1 Pa per meter of crack length, used to calculate the mass flow rate when the opening is closed; required to run an AirflowNetwork simulation. The DesignBuilder Cracks template defines the flow coefficient for a tight, low-leakage closed external window to be 0.00001, and the flow coefficient for a very poor, high-leakage closed external window to be 0.003.",
            "default": 0,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "flow_exponent_closed": {
            "title": "Flow Exponent Closed",
            "description": "An optional dimensionless number between 0.5 and 1 used to calculate the mass flow rate when the opening is closed; required to run an AirflowNetwork simulation. This value represents the leak geometry impact on airflow, with 0.5 generally corresponding to turbulent orifice flow and 1 generally corresponding to laminar flow. The default of 0.65 is representative of many cases of wall and window leakage, used when the exponent cannot be measured.",
            "default": 0.65,
            "minimum": 0.5,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "two_way_threshold": {
            "title": "Two Way Threshold",
            "description": "A number in kg/m3 indicating the minimum density difference above which two-way flow may occur due to stack effect, required to run an AirflowNetwork simulation. This value is required because the air density difference between two zones (which drives two-way air flow) will tend towards division by zero errors as the air density difference approaches zero. The default of 0.0001 is a typical default value used for AirflowNetwork openings.",
            "default": 0.0001,
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ApertureEnergyPropertiesAbridged": {
        "title": "ApertureEnergyPropertiesAbridged",
        "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "ApertureEnergyPropertiesAbridged",
            "pattern": "^ApertureEnergyPropertiesAbridged$",
            "type": "string",
            "readOnly": true
          },
          "construction": {
            "title": "Construction",
            "description": "Identifier of a WindowConstruction for the aperture. If None, the construction is set by the parent Room construction_set or the Model global_construction_set.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "vent_opening": {
            "title": "Vent Opening",
            "description": "An optional VentilationOpening to specify the operable portion of the Aperture.",
            "allOf": [
              {
                "$ref": "#/components/schemas/VentilationOpening"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "RadianceSubFaceStateAbridged": {
        "title": "RadianceSubFaceStateAbridged",
        "description": "RadianceSubFaceStateAbridged is an abridged state for a dynamic Aperture or Door.\n    ",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "RadianceSubFaceStateAbridged",
            "pattern": "^RadianceSubFaceStateAbridged$",
            "type": "string",
            "readOnly": true
          },
          "modifier": {
            "title": "Modifier",
            "description": "A Radiance Modifier identifier (default: None).",
            "type": "string"
          },
          "modifier_direct": {
            "title": "Modifier Direct",
            "description": "A Radiance Modifier identifier (default: None).",
            "type": "string"
          },
          "shades": {
            "title": "Shades",
            "description": "A list of StateGeometryAbridged objects (default: None).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateGeometryAbridged"
            }
          },
          "vmtx_geometry": {
            "title": "Vmtx Geometry",
            "description": "A Face3D for the view matrix geometry (default: None).",
            "allOf": [
              {
                "$ref": "#/components/schemas/Face3D"
              }
            ]
          },
          "dmtx_geometry": {
            "title": "Dmtx Geometry",
            "description": "A Face3D for the daylight matrix geometry (default: None).",
            "allOf": [
              {
                "$ref": "#/components/schemas/Face3D"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "ApertureRadiancePropertiesAbridged": {
        "title": "ApertureRadiancePropertiesAbridged",
        "description": "Radiance Properties for Honeybee Aperture Abridged.",
        "type": "object",
        "properties": {
          "modifier": {
            "title": "Modifier",
            "description": "A string for a Honeybee Radiance Modifier (default: None).",
            "type": "string"
          },
          "modifier_blk": {
            "title": "Modifier Blk",
            "description": "A string for a Honeybee Radiance Modifier to be used in direct solar simulations and in isolation studies (assessingthe contribution of individual objects) (default: None).",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "ApertureRadiancePropertiesAbridged",
            "pattern": "^ApertureRadiancePropertiesAbridged$",
            "type": "string",
            "readOnly": true
          },
          "dynamic_group_identifier": {
            "title": "Dynamic Group Identifier",
            "description": "An optional string to note the dynamic group '             'to which the Aperture is a part of. Apertures sharing the same '             'dynamic_group_identifier will have their states change in unison. '             'If None, the Aperture is assumed to be static. (default: None).",
            "type": "string"
          },
          "states": {
            "title": "States",
            "description": "An optional list of abridged states (default: None).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RadianceSubFaceStateAbridged"
            }
          }
        },
        "additionalProperties": false
      },
      "AperturePropertiesAbridged": {
        "title": "AperturePropertiesAbridged",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "AperturePropertiesAbridged",
            "pattern": "^AperturePropertiesAbridged$",
            "type": "string",
            "readOnly": true
          },
          "energy": {
            "$ref": "#/components/schemas/ApertureEnergyPropertiesAbridged"
          },
          "radiance": {
            "$ref": "#/components/schemas/ApertureRadiancePropertiesAbridged"
          }
        }
      },
      "Aperture": {
        "title": "Aperture",
        "description": "Base class for all objects requiring a identifiers acceptable for all engines.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, rad). This identifier is also used to reference the object across a Model. It must be < 100 characters and not contain any spaces or special characters.",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[.A-Za-z0-9_-]+$",
            "type": "string"
          },
          "geometry": {
            "title": "Geometry",
            "description": "Planar Face3D for the geometry.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Face3D"
              }
            ]
          },
          "boundary_condition": {
            "title": "Boundary Condition",
            "anyOf": [
              {
                "$ref": "#/components/schemas/Outdoors"
              },
              {
                "$ref": "#/components/schemas/Surface"
              }
            ]
          },
          "properties": {
            "title": "Properties",
            "description": "Extension properties for particular simulation engines (Radiance, EnergyPlus).",
            "allOf": [
              {
                "$ref": "#/components/schemas/AperturePropertiesAbridged"
              }
            ]
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "Aperture",
            "pattern": "^Aperture$",
            "type": "string",
            "readOnly": true
          },
          "is_operable": {
            "title": "Is Operable",
            "description": "Boolean to note whether the Aperture can be opened for ventilation.",
            "default": false,
            "type": "boolean"
          },
          "indoor_shades": {
            "title": "Indoor Shades",
            "description": "Shades assigned to the interior side of this object (eg. window sill, light shelf).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Shade"
            }
          },
          "outdoor_shades": {
            "title": "Outdoor Shades",
            "description": "Shades assigned to the exterior side of this object (eg. mullions, louvers).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Shade"
            }
          }
        },
        "required": [
          "identifier",
          "geometry",
          "boundary_condition",
          "properties"
        ],
        "additionalProperties": false
      },
      "DoorEnergyPropertiesAbridged": {
        "title": "DoorEnergyPropertiesAbridged",
        "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "DoorEnergyPropertiesAbridged",
            "pattern": "^DoorEnergyPropertiesAbridged$",
            "type": "string",
            "readOnly": true
          },
          "construction": {
            "title": "Construction",
            "description": "Identifier of an OpaqueConstruction or WindowConstruction for the door. Note that the host door must have the is_glass property set to True to assign a WindowConstruction. If None, the construction is set by the parent Room construction_set or the Model global_construction_set.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "vent_opening": {
            "title": "Vent Opening",
            "description": "An optional VentilationOpening to specify the operable portion of the Door.",
            "allOf": [
              {
                "$ref": "#/components/schemas/VentilationOpening"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "DoorRadiancePropertiesAbridged": {
        "title": "DoorRadiancePropertiesAbridged",
        "description": "Radiance Properties for Honeybee Door Abridged.",
        "type": "object",
        "properties": {
          "modifier": {
            "title": "Modifier",
            "description": "A string for a Honeybee Radiance Modifier (default: None).",
            "type": "string"
          },
          "modifier_blk": {
            "title": "Modifier Blk",
            "description": "A string for a Honeybee Radiance Modifier to be used in direct solar simulations and in isolation studies (assessingthe contribution of individual objects) (default: None).",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "DoorRadiancePropertiesAbridged",
            "pattern": "^DoorRadiancePropertiesAbridged$",
            "type": "string",
            "readOnly": true
          },
          "dynamic_group_identifier": {
            "title": "Dynamic Group Identifier",
            "description": "An optional string to note the dynamic group '             'to which the Door is a part of. Doors sharing the same '             'dynamic_group_identifier will have their states change in unison. '             'If None, the Door is assumed to be static. (default: None).",
            "type": "string"
          },
          "states": {
            "title": "States",
            "description": "An optional list of abridged states (default: None).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RadianceSubFaceStateAbridged"
            }
          }
        },
        "additionalProperties": false
      },
      "DoorPropertiesAbridged": {
        "title": "DoorPropertiesAbridged",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "DoorPropertiesAbridged",
            "pattern": "^DoorPropertiesAbridged$",
            "type": "string",
            "readOnly": true
          },
          "energy": {
            "$ref": "#/components/schemas/DoorEnergyPropertiesAbridged"
          },
          "radiance": {
            "$ref": "#/components/schemas/DoorRadiancePropertiesAbridged"
          }
        }
      },
      "Door": {
        "title": "Door",
        "description": "Base class for all objects requiring a identifiers acceptable for all engines.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, rad). This identifier is also used to reference the object across a Model. It must be < 100 characters and not contain any spaces or special characters.",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[.A-Za-z0-9_-]+$",
            "type": "string"
          },
          "geometry": {
            "title": "Geometry",
            "description": "Planar Face3D for the geometry.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Face3D"
              }
            ]
          },
          "boundary_condition": {
            "title": "Boundary Condition",
            "anyOf": [
              {
                "$ref": "#/components/schemas/Outdoors"
              },
              {
                "$ref": "#/components/schemas/Surface"
              }
            ]
          },
          "properties": {
            "title": "Properties",
            "description": "Extension properties for particular simulation engines (Radiance, EnergyPlus).",
            "allOf": [
              {
                "$ref": "#/components/schemas/DoorPropertiesAbridged"
              }
            ]
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "Door",
            "pattern": "^Door$",
            "type": "string",
            "readOnly": true
          },
          "is_glass": {
            "title": "Is Glass",
            "description": "Boolean to note whether this object is a glass door as opposed to an opaque door.",
            "default": false,
            "type": "boolean"
          },
          "indoor_shades": {
            "title": "Indoor Shades",
            "description": "Shades assigned to the interior side of this object.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Shade"
            }
          },
          "outdoor_shades": {
            "title": "Outdoor Shades",
            "description": "Shades assigned to the exterior side of this object (eg. entryway awning).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Shade"
            }
          }
        },
        "required": [
          "identifier",
          "geometry",
          "boundary_condition",
          "properties"
        ],
        "additionalProperties": false
      },
      "AFNCrack": {
        "title": "AFNCrack",
        "description": "Properties for airflow through a crack.",
        "type": "object",
        "properties": {
          "flow_coefficient": {
            "title": "Flow Coefficient",
            "description": "A number in kg/s-m at 1 Pa per meter of crack length at the conditions defined in the ReferenceCrack condition; required to run an AirflowNetwork simulation. The DesignBuilder Cracks template defines the flow coefficient for a tight, low-leakage wall to be 0.00001 and 0.001 for external and internal constructions, respectively. Flow coefficients for a very poor, high-leakage wall are defined to be 0.0004 and 0.019 for external and internal constructions, respectively.",
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          },
          "type": {
            "title": "Type",
            "default": "AFNCrack",
            "pattern": "^AFNCrack$",
            "type": "string",
            "readOnly": true
          },
          "flow_exponent": {
            "title": "Flow Exponent",
            "description": "An optional dimensionless number between 0.5 and 1 used to calculate the crack mass flow rate; required to run an AirflowNetwork simulation. This value represents the leak geometry impact on airflow, with 0.5 generally corresponding to turbulent orifice flow and 1 generally corresponding to laminar flow. The default of 0.65 is representative of many cases of wall and window leakage, used when the exponent cannot be measured.",
            "default": 0.65,
            "minimum": 0.5,
            "maximum": 1,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "flow_coefficient"
        ],
        "additionalProperties": false
      },
      "FaceEnergyPropertiesAbridged": {
        "title": "FaceEnergyPropertiesAbridged",
        "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "FaceEnergyPropertiesAbridged",
            "pattern": "^FaceEnergyPropertiesAbridged$",
            "type": "string",
            "readOnly": true
          },
          "construction": {
            "title": "Construction",
            "description": "Identifier of an OpaqueConstruction for the Face. If None, the construction is set by the parent Room construction_set or the Model global_construction_set.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "vent_crack": {
            "title": "Vent Crack",
            "description": "An optional AFNCrack to specify airflow through a surface crack used by the AirflowNetwork.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AFNCrack"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "FaceRadiancePropertiesAbridged": {
        "title": "FaceRadiancePropertiesAbridged",
        "description": "Radiance Properties for Honeybee Face Abridged.",
        "type": "object",
        "properties": {
          "modifier": {
            "title": "Modifier",
            "description": "A string for a Honeybee Radiance Modifier (default: None).",
            "type": "string"
          },
          "modifier_blk": {
            "title": "Modifier Blk",
            "description": "A string for a Honeybee Radiance Modifier to be used in direct solar simulations and in isolation studies (assessingthe contribution of individual objects) (default: None).",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "FaceRadiancePropertiesAbridged",
            "pattern": "^FaceRadiancePropertiesAbridged$",
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FacePropertiesAbridged": {
        "title": "FacePropertiesAbridged",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "FacePropertiesAbridged",
            "pattern": "^FacePropertiesAbridged$",
            "type": "string",
            "readOnly": true
          },
          "energy": {
            "$ref": "#/components/schemas/FaceEnergyPropertiesAbridged"
          },
          "radiance": {
            "$ref": "#/components/schemas/FaceRadiancePropertiesAbridged"
          }
        }
      },
      "Face": {
        "title": "Face",
        "description": "Base class for all objects requiring a identifiers acceptable for all engines.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, rad). This identifier is also used to reference the object across a Model. It must be < 100 characters and not contain any spaces or special characters.",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[.A-Za-z0-9_-]+$",
            "type": "string"
          },
          "geometry": {
            "title": "Geometry",
            "description": "Planar Face3D for the geometry.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Face3D"
              }
            ]
          },
          "face_type": {
            "$ref": "#/components/schemas/FaceType"
          },
          "boundary_condition": {
            "title": "Boundary Condition",
            "anyOf": [
              {
                "$ref": "#/components/schemas/Ground"
              },
              {
                "$ref": "#/components/schemas/Outdoors"
              },
              {
                "$ref": "#/components/schemas/Adiabatic"
              },
              {
                "$ref": "#/components/schemas/Surface"
              },
              {
                "$ref": "#/components/schemas/OtherSideTemperature"
              }
            ]
          },
          "properties": {
            "title": "Properties",
            "description": "Extension properties for particular simulation engines (Radiance, EnergyPlus).",
            "allOf": [
              {
                "$ref": "#/components/schemas/FacePropertiesAbridged"
              }
            ]
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "Face",
            "pattern": "^Face$",
            "type": "string",
            "readOnly": true
          },
          "apertures": {
            "title": "Apertures",
            "description": "Apertures assigned to this Face. Should be coplanar with this Face and completely within the boundary of the Face to be valid.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Aperture"
            }
          },
          "doors": {
            "title": "Doors",
            "description": "Doors assigned to this Face. Should be coplanar with this Face and completely within the boundary of the Face to be valid.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Door"
            }
          },
          "indoor_shades": {
            "title": "Indoor Shades",
            "description": "Shades assigned to the interior side of this object.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Shade"
            }
          },
          "outdoor_shades": {
            "title": "Outdoor Shades",
            "description": "Shades assigned to the exterior side of this object (eg. balcony, overhang).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Shade"
            }
          }
        },
        "required": [
          "identifier",
          "geometry",
          "face_type",
          "boundary_condition",
          "properties"
        ],
        "additionalProperties": false
      },
      "PeopleAbridged": {
        "title": "PeopleAbridged",
        "description": "Base class for all objects requiring an EnergyPlus identifier and user_data.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "people_per_area": {
            "title": "People Per Area",
            "description": "People per floor area expressed as [people/m2]",
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "occupancy_schedule": {
            "title": "Occupancy Schedule",
            "description": "Identifier of a schedule for the occupancy over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the people_per_area to yield a complete occupancy profile.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "PeopleAbridged",
            "pattern": "^PeopleAbridged$",
            "type": "string",
            "readOnly": true
          },
          "activity_schedule": {
            "title": "Activity Schedule",
            "description": "Identifier of a schedule for the activity of the occupants over the course of the year. The type of this schedule should be ActivityLevel and the values of the schedule equal to the number of Watts given off by an individual person in the room. If None, a default constant schedule with 120 Watts per person will be used, which is typical of awake, adult humans who are seated.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "radiant_fraction": {
            "title": "Radiant Fraction",
            "description": "The radiant fraction of sensible heat released by people. (Default: 0.3).",
            "default": 0.3,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "latent_fraction": {
            "title": "Latent Fraction",
            "description": "Number for the latent fraction of heat gain due to people or an Autocalculate object.",
            "default": {
              "type": "Autocalculate"
            },
            "anyOf": [
              {
                "$ref": "#/components/schemas/Autocalculate"
              },
              {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              }
            ]
          }
        },
        "required": [
          "identifier",
          "people_per_area",
          "occupancy_schedule"
        ],
        "additionalProperties": false
      },
      "LightingAbridged": {
        "title": "LightingAbridged",
        "description": "Base class for all objects requiring an EnergyPlus identifier and user_data.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "watts_per_area": {
            "title": "Watts Per Area",
            "description": "Lighting per floor area as [W/m2].",
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "schedule": {
            "title": "Schedule",
            "description": "Identifier of the schedule for the use of lights over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the watts_per_area to yield a complete lighting profile.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "LightingAbridged",
            "pattern": "^LightingAbridged$",
            "type": "string",
            "readOnly": true
          },
          "visible_fraction": {
            "title": "Visible Fraction",
            "description": "The fraction of heat from lights that goes into the zone as visible (short-wave) radiation. (Default: 0.25).",
            "default": 0.25,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "radiant_fraction": {
            "title": "Radiant Fraction",
            "description": "The fraction of heat from lights that is long-wave radiation. (Default: 0.32).",
            "default": 0.32,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "return_air_fraction": {
            "title": "Return Air Fraction",
            "description": "The fraction of the heat from lights that goes into the zone return air. (Default: 0).",
            "default": 0.0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "baseline_watts_per_area": {
            "title": "Baseline Watts Per Area",
            "description": "The baseline lighting power density in [W/m2] of floor area. This baseline is useful to track how much better the installed lights are in comparison to a standard like ASHRAE 90.1. If set to None, it will default to 11.84029 W/m2, which is that ASHRAE 90.1-2004 baseline for an office.",
            "default": 11.84029,
            "minimum": 0,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier",
          "watts_per_area",
          "schedule"
        ],
        "additionalProperties": false
      },
      "ElectricEquipmentAbridged": {
        "title": "ElectricEquipmentAbridged",
        "description": "Base class for all objects requiring an EnergyPlus identifier and user_data.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "watts_per_area": {
            "title": "Watts Per Area",
            "description": "Equipment level per floor area as [W/m2].",
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "schedule": {
            "title": "Schedule",
            "description": "Identifier of the schedule for the use of equipment over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the watts_per_area to yield a complete equipment profile.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "radiant_fraction": {
            "title": "Radiant Fraction",
            "description": "Number for the amount of long-wave radiation heat given off by equipment. Default value is 0.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "latent_fraction": {
            "title": "Latent Fraction",
            "description": "Number for the amount of latent heat given off by equipment. Default value is 0.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "lost_fraction": {
            "title": "Lost Fraction",
            "description": "Number for the amount of \u201clost\u201d heat being given off by equipment. The default value is 0.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "type": {
            "title": "Type",
            "default": "ElectricEquipmentAbridged",
            "pattern": "^ElectricEquipmentAbridged$",
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "identifier",
          "watts_per_area",
          "schedule"
        ],
        "additionalProperties": false
      },
      "GasEquipmentAbridged": {
        "title": "GasEquipmentAbridged",
        "description": "Base class for all objects requiring an EnergyPlus identifier and user_data.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "watts_per_area": {
            "title": "Watts Per Area",
            "description": "Equipment level per floor area as [W/m2].",
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "schedule": {
            "title": "Schedule",
            "description": "Identifier of the schedule for the use of equipment over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the watts_per_area to yield a complete equipment profile.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "radiant_fraction": {
            "title": "Radiant Fraction",
            "description": "Number for the amount of long-wave radiation heat given off by equipment. Default value is 0.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "latent_fraction": {
            "title": "Latent Fraction",
            "description": "Number for the amount of latent heat given off by equipment. Default value is 0.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "lost_fraction": {
            "title": "Lost Fraction",
            "description": "Number for the amount of \u201clost\u201d heat being given off by equipment. The default value is 0.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "type": {
            "title": "Type",
            "default": "GasEquipmentAbridged",
            "pattern": "^GasEquipmentAbridged$",
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "identifier",
          "watts_per_area",
          "schedule"
        ],
        "additionalProperties": false
      },
      "ServiceHotWaterAbridged": {
        "title": "ServiceHotWaterAbridged",
        "description": "Base class for all objects requiring an EnergyPlus identifier and user_data.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "flow_per_area": {
            "title": "Flow Per Area",
            "description": "Number for the total volume flow rate of water per unit area of floor [L/h-m2].",
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "schedule": {
            "title": "Schedule",
            "description": "Identifier of the schedule for the hot water use over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the flow_per_area to yield a complete water usage profile.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "ServiceHotWaterAbridged",
            "pattern": "^ServiceHotWaterAbridged$",
            "type": "string",
            "readOnly": true
          },
          "target_temperature": {
            "title": "Target Temperature",
            "description": "Number for the target temperature of water out of the tap (C). This the temperature after hot water has been mixed with cold water from the water mains. The default is 60C, which essentially assumes that the flow_per_area on this object is only for water straight out of the water heater.",
            "default": 60,
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          },
          "sensible_fraction": {
            "title": "Sensible Fraction",
            "description": "A number between 0 and 1 for the fraction of the total hot water load given off as sensible heat in the zone.",
            "default": 0.2,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "latent_fraction": {
            "title": "Latent Fraction",
            "description": "A number between 0 and 1 for the fraction of the total hot water load that is latent.",
            "default": 0.05,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier",
          "flow_per_area",
          "schedule"
        ],
        "additionalProperties": false
      },
      "InfiltrationAbridged": {
        "title": "InfiltrationAbridged",
        "description": "Base class for all objects requiring an EnergyPlus identifier and user_data.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "flow_per_exterior_area": {
            "title": "Flow Per Exterior Area",
            "description": "Number for the infiltration per exterior surface area in m3/s-m2.",
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "schedule": {
            "title": "Schedule",
            "description": "Identifier of the schedule for the infiltration over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the flow_per_exterior_area to yield a complete infiltration profile.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "InfiltrationAbridged",
            "pattern": "^InfiltrationAbridged$",
            "type": "string",
            "readOnly": true
          },
          "constant_coefficient": {
            "title": "Constant Coefficient",
            "default": 1,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "temperature_coefficient": {
            "title": "Temperature Coefficient",
            "default": 0,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "velocity_coefficient": {
            "title": "Velocity Coefficient",
            "default": 0,
            "minimum": 0,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier",
          "flow_per_exterior_area",
          "schedule"
        ],
        "additionalProperties": false
      },
      "VentilationAbridged": {
        "title": "VentilationAbridged",
        "description": "Base class for all objects requiring an EnergyPlus identifier and user_data.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "VentilationAbridged",
            "pattern": "^VentilationAbridged$",
            "type": "string",
            "readOnly": true
          },
          "flow_per_person": {
            "title": "Flow Per Person",
            "description": "Intensity of ventilation in[] m3/s per person]. Note that setting this value does not mean that ventilation is varied based on real-time occupancy but rather that the design level of ventilation is determined using this value and the People object of the Room.",
            "default": 0,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "flow_per_area": {
            "title": "Flow Per Area",
            "description": "Intensity of ventilation in [m3/s per m2 of floor area].",
            "default": 0,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "air_changes_per_hour": {
            "title": "Air Changes Per Hour",
            "description": "Intensity of ventilation in air changes per hour (ACH) for the entire Room.",
            "default": 0,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "flow_per_zone": {
            "title": "Flow Per Zone",
            "description": "Intensity of ventilation in m3/s for the entire Room.",
            "default": 0,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "schedule": {
            "title": "Schedule",
            "description": "Identifier of the schedule for the ventilation over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the total design flow rate (determined from the sum of the other 4 fields) to yield a complete ventilation profile.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "SetpointAbridged": {
        "title": "SetpointAbridged",
        "description": "Used to specify information about the setpoint schedule.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "cooling_schedule": {
            "title": "Cooling Schedule",
            "description": "Identifier of the schedule for the cooling setpoint. The values in this schedule should be temperature in [C].",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "heating_schedule": {
            "title": "Heating Schedule",
            "description": "Identifier of the schedule for the heating setpoint. The values in this schedule should be temperature in [C].",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "SetpointAbridged",
            "pattern": "^SetpointAbridged$",
            "type": "string",
            "readOnly": true
          },
          "humidifying_schedule": {
            "title": "Humidifying Schedule",
            "description": "Identifier of the schedule for the humidification setpoint. The values in this schedule should be in [%].",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "dehumidifying_schedule": {
            "title": "Dehumidifying Schedule",
            "description": "Identifier of the schedule for the dehumidification setpoint. The values in this schedule should be in [%].",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "setpoint_cutout_difference": {
            "title": "Setpoint Cutout Difference",
            "description": "An optional positive number for the temperature difference between the cutout temperature and the setpoint temperature. Specifying a non-zero number here is useful for modeling the throttling range associated with a given setup of setpoint controls and HVAC equipment. Throttling ranges describe the range where a zone is slightly over-cooled or over-heated beyond the thermostat setpoint. They are used to avoid situations where HVAC systems turn on only to turn off a few minutes later, thereby wearing out the parts of mechanical systems faster. They can have a minor impact on energy consumption and can often have significant impacts on occupant thermal comfort, though using the default value of zero will often yield results that are close enough when trying to estimate the annual heating/cooling energy use. Specifying a value of zero effectively assumes that the system will turn on whenever conditions are outside the setpoint range and will cut out as soon as the setpoint is reached.",
            "default": 0,
            "minimum": 0,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier",
          "cooling_schedule",
          "heating_schedule"
        ],
        "additionalProperties": false
      },
      "DaylightingControl": {
        "title": "DaylightingControl",
        "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
        "type": "object",
        "properties": {
          "sensor_position": {
            "title": "Sensor Position",
            "description": "A point as 3 (x, y, z) values for the position of the daylight sensor within the parent Room. This point should lie within the Room volume in order for the results to be meaningful.",
            "minItems": 3,
            "maxItems": 3,
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "type": {
            "title": "Type",
            "default": "DaylightingControl",
            "pattern": "^DaylightingControl$",
            "type": "string",
            "readOnly": true
          },
          "illuminance_setpoint": {
            "title": "Illuminance Setpoint",
            "description": "A number for the illuminance setpoint in lux beyond which electric lights are dimmed if there is sufficient daylight.",
            "default": 300,
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          },
          "control_fraction": {
            "title": "Control Fraction",
            "description": "A number between 0 and 1 that represents the fraction of the Room lights that are dimmed when the illuminance at the sensor position is at the specified illuminance. 1 indicates that all lights are dim-able while 0 indicates that no lights are dim-able. Deeper rooms should have lower control fractions to account for the face that the lights in the back of the space do not dim in response to suitable daylight at the front of the room.",
            "default": 1,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "min_power_input": {
            "title": "Min Power Input",
            "description": "A number between 0 and 1 for the the lowest power the lighting system can dim down to, expressed as a fraction of maximum input power.",
            "default": 0.3,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "min_light_output": {
            "title": "Min Light Output",
            "description": "A number between 0 and 1 the lowest lighting output the lighting system can dim down to, expressed as a fraction of maximum light output.",
            "default": 0.2,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "off_at_minimum": {
            "title": "Off At Minimum",
            "description": "Boolean to note whether lights should switch off completely when they get to the minimum power input.",
            "default": false,
            "type": "boolean"
          }
        },
        "required": [
          "sensor_position"
        ],
        "additionalProperties": false
      },
      "VentilationControlAbridged": {
        "title": "VentilationControlAbridged",
        "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "VentilationControlAbridged",
            "pattern": "^VentilationControlAbridged$",
            "type": "string",
            "readOnly": true
          },
          "min_indoor_temperature": {
            "title": "Min Indoor Temperature",
            "description": "A number for the minimum indoor temperature at which to ventilate in Celsius. Typically, this variable is used to initiate ventilation.",
            "default": -100,
            "minimum": -100,
            "maximum": 100,
            "type": "number",
            "format": "double"
          },
          "max_indoor_temperature": {
            "title": "Max Indoor Temperature",
            "description": "A number for the maximum indoor temperature at which to ventilate in Celsius. This can be used to set a maximum temperature at which point ventilation is stopped and a cooling system is turned on.",
            "default": 100,
            "minimum": -100,
            "maximum": 100,
            "type": "number",
            "format": "double"
          },
          "min_outdoor_temperature": {
            "title": "Min Outdoor Temperature",
            "description": "A number for the minimum outdoor temperature at which to ventilate in Celsius. This can be used to ensure ventilative cooling does not happen during the winter even if the Room is above the min_indoor_temperature.",
            "default": -100,
            "minimum": -100,
            "maximum": 100,
            "type": "number",
            "format": "double"
          },
          "max_outdoor_temperature": {
            "title": "Max Outdoor Temperature",
            "description": "A number for the maximum indoor temperature at which to ventilate in Celsius. This can be used to set a limit for when it is considered too hot outside for ventilative cooling.",
            "default": 100,
            "minimum": -100,
            "maximum": 100,
            "type": "number",
            "format": "double"
          },
          "delta_temperature": {
            "title": "Delta Temperature",
            "description": "A number for the temperature differential in Celsius between indoor and outdoor below which ventilation is shut off.  This should usually be a positive number so that ventilation only occurs when the outdoors is cooler than the indoors. Negative numbers indicate how much hotter the outdoors can be than the indoors before ventilation is stopped.",
            "default": -100,
            "minimum": -100,
            "maximum": 100,
            "type": "number",
            "format": "double"
          },
          "schedule": {
            "title": "Schedule",
            "description": "Identifier of the schedule for the ventilation over the course of the year. Note that this is applied on top of any setpoints. The type of this schedule should be On/Off and values should be either 0 (no possibility of ventilation) or 1 (ventilation possible).",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "VentilationType": {
        "title": "VentilationType",
        "description": "An enumeration.",
        "enum": [
          "Exhaust",
          "Intake",
          "Balanced"
        ],
        "type": "string"
      },
      "VentilationFan": {
        "title": "VentilationFan",
        "description": "Base class for all objects requiring a valid EnergyPlus identifier.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "flow_rate": {
            "title": "Flow Rate",
            "description": "A number for the flow rate of the fan in m3/s.",
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          },
          "pressure_rise": {
            "title": "Pressure Rise",
            "description": "A number for the the pressure rise across the fan in Pascals (N/m2). This is often a function of the fan speed and the conditions in which the fan is operating since having the fan blow air through filters or narrow ducts will increase the pressure rise that is needed to deliver the input flow rate. The pressure rise plays an important role in determining the amount of energy consumed by the fan. Smaller fans like a 0.05 m3/s desk fan tend to have lower pressure rises around 60 Pa. Larger fans, such as a 6 m3/s fan used for ventilating a large room tend to have higher pressure rises around 400 Pa. The highest pressure rises are typically for large fans blowing air through ducts and filters, which can have pressure rises as high as 1000 Pa.",
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          },
          "efficiency": {
            "title": "Efficiency",
            "description": "A number between 0 and 1 for the overall efficiency of the fan. Specifically, this is the ratio of the power delivered to the fluid to the electrical input power. It is the product of the fan motor efficiency and the fan impeller efficiency. Fans that have a higher blade diameter and operate at lower speeds with smaller pressure rises for their size tend to have higher efficiencies. Because motor efficiencies are typically between 0.8 and 0.9, the best overall fan efficiencies tend to be around 0.7 with most typical fan efficiencies between 0.5 and 0.7. The lowest efficiencies often happen for small fans in situations with high pressure rises for their size, which can result in efficiencies as low as 0.15.",
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "VentilationFan",
            "pattern": "^VentilationFan$",
            "type": "string",
            "readOnly": true
          },
          "ventilation_type": {
            "description": "Text to indicate the type of type of ventilation. Choose from the options below. For either Exhaust or Intake, values for fan pressure and efficiency define the fan electric consumption. For Exhaust ventilation, the conditions of the air entering the space are assumed to be equivalent to outside air conditions. For Intake and Balanced ventilation, an appropriate amount of fan heat is added to the entering air stream. For Balanced ventilation, both an intake fan and an exhaust fan are assumed to co-exist, both having the same flow rate and power consumption (using the entered values for fan pressure rise and fan total efficiency). Thus, the fan electric consumption for Balanced ventilation is twice that for the Exhaust or Intake ventilation types which employ only a single fan.",
            "default": "Balanced",
            "allOf": [
              {
                "$ref": "#/components/schemas/VentilationType"
              }
            ]
          },
          "control": {
            "title": "Control",
            "description": "A VentilationControl object that dictates the conditions under which the fan is turned on. If None, a default VentilationControl will be generated, which will keep the fan on all of the time.",
            "allOf": [
              {
                "$ref": "#/components/schemas/VentilationControlAbridged"
              }
            ]
          }
        },
        "required": [
          "identifier",
          "flow_rate",
          "pressure_rise",
          "efficiency"
        ],
        "additionalProperties": false
      },
      "InternalMassAbridged": {
        "title": "InternalMassAbridged",
        "description": "Base class for all objects requiring an EnergyPlus identifier and user_data.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "construction": {
            "title": "Construction",
            "description": "Identifier for an OpaqueConstruction that represents the material that the internal thermal mass is composed of.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "area": {
            "title": "Area",
            "description": "A number representing the surface area of the internal mass that is exposed to the Room air. This value should always be in square meters regardless of what units system the parent model is a part of.",
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "InternalMassAbridged",
            "pattern": "^InternalMassAbridged$",
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "identifier",
          "construction",
          "area"
        ],
        "additionalProperties": false
      },
      "FuelTypes": {
        "title": "FuelTypes",
        "description": "Designates the acceptable fuel types for process loads.",
        "enum": [
          "Electricity",
          "NaturalGas",
          "Propane",
          "FuelOilNo1",
          "FuelOilNo2",
          "Diesel",
          "Gasoline",
          "Coal",
          "Steam",
          "DistrictHeating",
          "DistrictCooling",
          "OtherFuel1",
          "OtherFuel2",
          "None"
        ],
        "type": "string"
      },
      "ProcessAbridged": {
        "title": "ProcessAbridged",
        "description": "Base class for all objects requiring an EnergyPlus identifier and user_data.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "watts": {
            "title": "Watts",
            "description": "A number for the process load power in Watts.",
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "schedule": {
            "title": "Schedule",
            "description": "Identifier of the schedule for the use of the process over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the watts to yield a complete equipment profile.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "fuel_type": {
            "description": "Text to denote the type of fuel consumed by the process. Using the \"None\" type indicates that no end uses will be associated with the process, only the zone gains.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FuelTypes"
              }
            ]
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "ProcessAbridged",
            "pattern": "^ProcessAbridged$",
            "type": "string",
            "readOnly": true
          },
          "end_use_category": {
            "title": "End Use Category",
            "description": "Text to indicate the end-use subcategory, which will identify the process load in the end use output. For example, \u201cCooking\u201d, \u201cClothes Drying\u201d, etc. A new meter for reporting is created for each unique subcategory.",
            "default": "Process",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "radiant_fraction": {
            "title": "Radiant Fraction",
            "description": "Number for the amount of long-wave radiation heat given off by the process load. Default value is 0.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "latent_fraction": {
            "title": "Latent Fraction",
            "description": "Number for the amount of latent heat given off by the process load. Default value is 0.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "lost_fraction": {
            "title": "Lost Fraction",
            "description": "Number for the amount of \u201clost\u201d heat being given off by the process load. The default value is 0.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier",
          "watts",
          "schedule",
          "fuel_type"
        ],
        "additionalProperties": false
      },
      "RoomEnergyPropertiesAbridged": {
        "title": "RoomEnergyPropertiesAbridged",
        "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "RoomEnergyPropertiesAbridged",
            "pattern": "^RoomEnergyPropertiesAbridged$",
            "type": "string",
            "readOnly": true
          },
          "construction_set": {
            "title": "Construction Set",
            "description": "Identifier of a ConstructionSet to specify all default constructions for the Faces, Apertures, and Doors of the Room. If None, the Room will use the Model global_construction_set.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "program_type": {
            "title": "Program Type",
            "description": "Identifier of a ProgramType to specify all default schedules and loads for the Room. If None, the Room will have no loads or setpoints.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "hvac": {
            "title": "Hvac",
            "description": "An optional identifier of a HVAC system (such as an IdealAirSystem) that specifies how the Room is conditioned. If None, it will be assumed that the Room is not conditioned.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "shw": {
            "title": "Shw",
            "description": "An optional identifier of a Service Hot Water (SHW) system that specifies how the hot water load of the Room is met. If None, the hot water load will be met with a generic system that only measures thermal loadand does not account for system efficiencies.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "people": {
            "title": "People",
            "description": "People object to describe the occupancy of the Room.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PeopleAbridged"
              }
            ]
          },
          "lighting": {
            "title": "Lighting",
            "description": "Lighting object to describe the lighting usage of the Room.",
            "allOf": [
              {
                "$ref": "#/components/schemas/LightingAbridged"
              }
            ]
          },
          "electric_equipment": {
            "title": "Electric Equipment",
            "description": "ElectricEquipment object to describe the electric equipment usage.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ElectricEquipmentAbridged"
              }
            ]
          },
          "gas_equipment": {
            "title": "Gas Equipment",
            "description": "GasEquipment object to describe the gas equipment usage.",
            "allOf": [
              {
                "$ref": "#/components/schemas/GasEquipmentAbridged"
              }
            ]
          },
          "service_hot_water": {
            "title": "Service Hot Water",
            "description": "ServiceHotWater object to describe the hot water usage.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceHotWaterAbridged"
              }
            ]
          },
          "infiltration": {
            "title": "Infiltration",
            "description": "Infiltration object to to describe the outdoor air leakage.",
            "allOf": [
              {
                "$ref": "#/components/schemas/InfiltrationAbridged"
              }
            ]
          },
          "ventilation": {
            "title": "Ventilation",
            "description": "Ventilation object for the minimum outdoor air requirement.",
            "allOf": [
              {
                "$ref": "#/components/schemas/VentilationAbridged"
              }
            ]
          },
          "setpoint": {
            "title": "Setpoint",
            "description": "Setpoint object for the temperature setpoints of the Room.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SetpointAbridged"
              }
            ]
          },
          "daylighting_control": {
            "title": "Daylighting Control",
            "description": "An optional DaylightingControl object to dictate the dimming of lights. If None, the lighting will respond only to the schedule and not the daylight conditions within the room.",
            "allOf": [
              {
                "$ref": "#/components/schemas/DaylightingControl"
              }
            ]
          },
          "window_vent_control": {
            "title": "Window Vent Control",
            "description": "An optional VentilationControl object to dictate the opening of windows. If None, the windows will never open.",
            "allOf": [
              {
                "$ref": "#/components/schemas/VentilationControlAbridged"
              }
            ]
          },
          "fans": {
            "title": "Fans",
            "description": "An optional list of VentilationFan objects for fans within the room. Note that these fans are not connected to the heating or cooling system and are meant to represent the intentional circulation of unconditioned outdoor air for the purposes of keeping a space cooler, drier or free of indoor pollutants (as in the case of kitchen or bathroom exhaust fans). For the specification of mechanical ventilation of conditioned outdoor air, the Room.ventilation property should be used and the Room should be given a HVAC that can meet this specification.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VentilationFan"
            }
          },
          "internal_masses": {
            "title": "Internal Masses",
            "description": "An optional list of of InternalMass objects for thermal mass exposed to Room air. Note that internal masses assigned this way cannot \"see\" solar radiation that may potentially hit them and, as such, caution should be taken when using this component with internal mass objects that are not always in shade. Masses are factored into the the thermal calculations of the Room by undergoing heat transfer with the indoor air.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InternalMassAbridged"
            }
          },
          "process_loads": {
            "title": "Process Loads",
            "description": "An optional list of of Process objects for process loads within the room. These can represent kilns, manufacturing equipment, and various industrial processes. They can also be used to represent wood burning fireplaces or certain pieces of equipment to be separated from the other end uses.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessAbridged"
            }
          }
        },
        "additionalProperties": false
      },
      "RoomRadiancePropertiesAbridged": {
        "title": "RoomRadiancePropertiesAbridged",
        "description": "Abridged Radiance Properties for Honeybee Room.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "RoomRadiancePropertiesAbridged",
            "pattern": "^RoomRadiancePropertiesAbridged$",
            "type": "string",
            "readOnly": true
          },
          "modifier_set": {
            "title": "Modifier Set",
            "description": "An identifier for a unique Room-Assigned ModifierSet (default: None).",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RoomDoe2Properties": {
        "title": "RoomDoe2Properties",
        "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "RoomDoe2Properties",
            "pattern": "^RoomDoe2Properties$",
            "type": "string",
            "readOnly": true
          },
          "assigned_flow": {
            "title": "Assigned Flow",
            "description": "A number for the design supply air flow rate for the zone the Room is assigned to (cfm). This establishes the minimum allowed design air flow. Note that the actual design flow may be larger. If Autocalculate, this parameter will not be written into the INP.",
            "default": {
              "type": "Autocalculate"
            },
            "anyOf": [
              {
                "$ref": "#/components/schemas/Autocalculate"
              },
              {
                "type": "number",
                "minimum": 0
              }
            ]
          },
          "flow_per_area": {
            "title": "Flow Per Area",
            "description": "A number for the design supply air flow rate to the zone per unit floor area (cfm/ft2). If Autocalculate, this parameter will not be written into the INP.",
            "default": {
              "type": "Autocalculate"
            },
            "anyOf": [
              {
                "$ref": "#/components/schemas/Autocalculate"
              },
              {
                "type": "number",
                "minimum": 0
              }
            ]
          },
          "min_flow_ratio": {
            "title": "Min Flow Ratio",
            "description": "A number between 0 and 1 for the minimum allowable zone air supply flow rate, expressed as a fraction of design flow rate. Applicable to variable-volume type systems only. If Autocalculate, this parameter will not be written into the INP.",
            "default": {
              "type": "Autocalculate"
            },
            "anyOf": [
              {
                "$ref": "#/components/schemas/Autocalculate"
              },
              {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              }
            ]
          },
          "min_flow_per_area": {
            "title": "Min Flow Per Area",
            "description": "A number for the minimum air flow per square foot of floor area (cfm/ft2). This is an alternative way of specifying the min_flow_ratio. If Autocalculate, this parameter will not be written into the INP.",
            "default": {
              "type": "Autocalculate"
            },
            "anyOf": [
              {
                "$ref": "#/components/schemas/Autocalculate"
              },
              {
                "type": "number",
                "minimum": 0
              }
            ]
          },
          "hmax_flow_ratio": {
            "title": "Hmax Flow Ratio",
            "description": "A number between 0 and 1 for the ratio of the maximum (or fixed) heating airflow to the cooling airflow. The specific meaning varies according to the type of zone terminal. If Autocalculate, this parameter will not be written into the INP.",
            "default": {
              "type": "Autocalculate"
            },
            "anyOf": [
              {
                "$ref": "#/components/schemas/Autocalculate"
              },
              {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              }
            ]
          },
          "space_polygon_geometry": {
            "title": "Space Polygon Geometry",
            "description": "An optional horizontal Face3D object, which will be used to set the SPACE polygon during export to INP. If None, the SPACE polygon is auto-calculated from the 3D Room geometry. Specifying a geometry here can help overcome some limitations of this auto-calculation, particularly for cases where the floors of the Room are composed of AirBoundaries.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Face3D"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "RoomPropertiesAbridged": {
        "title": "RoomPropertiesAbridged",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "RoomPropertiesAbridged",
            "pattern": "^RoomPropertiesAbridged$",
            "type": "string",
            "readOnly": true
          },
          "energy": {
            "$ref": "#/components/schemas/RoomEnergyPropertiesAbridged"
          },
          "radiance": {
            "$ref": "#/components/schemas/RoomRadiancePropertiesAbridged"
          },
          "doe2": {
            "$ref": "#/components/schemas/RoomDoe2Properties"
          }
        }
      },
      "Room": {
        "title": "Room",
        "description": "Base class for all objects requiring a identifiers acceptable for all engines.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, rad). This identifier is also used to reference the object across a Model. It must be < 100 characters and not contain any spaces or special characters.",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[.A-Za-z0-9_-]+$",
            "type": "string"
          },
          "faces": {
            "title": "Faces",
            "description": "Faces that together form the closed volume of a room.",
            "minItems": 4,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Face"
            }
          },
          "properties": {
            "title": "Properties",
            "description": "Extension properties for particular simulation engines (Radiance, EnergyPlus).",
            "allOf": [
              {
                "$ref": "#/components/schemas/RoomPropertiesAbridged"
              }
            ]
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "Room",
            "pattern": "^Room$",
            "type": "string",
            "readOnly": true
          },
          "indoor_shades": {
            "title": "Indoor Shades",
            "description": "Shades assigned to the interior side of this object (eg. partitions, tables).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Shade"
            }
          },
          "outdoor_shades": {
            "title": "Outdoor Shades",
            "description": "Shades assigned to the exterior side of this object (eg. trees, landscaping).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Shade"
            }
          },
          "multiplier": {
            "title": "Multiplier",
            "description": "An integer noting how many times this Room is repeated. Multipliers are used to speed up the calculation when similar Rooms are repeated more than once. Essentially, a given simulation with the Room is run once and then the result is multiplied by the multiplier.",
            "default": 1,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "exclude_floor_area": {
            "title": "Exclude Floor Area",
            "description": "A boolean for whether the Room floor area contributes to Models it is a part of. Note that this will not affect the floor_area property of this Room itself but it will ensure the Room floor area is excluded from any calculations when the Room is part of a Model, including EUI calculations.",
            "default": false,
            "type": "boolean"
          },
          "zone": {
            "title": "Zone",
            "description": "Text string for for the zone identifier to which this Room belongs. Rooms sharing the same zone identifier are considered part of the same zone in a Model. If the zone identifier has not been specified, it will be the same as the Room identifier in the destination engine. Note that this property has no character restrictions.",
            "type": "string"
          },
          "story": {
            "title": "Story",
            "description": "Text string for the story identifier to which this Room belongs. Rooms sharing the same story identifier are considered part of the same story in a Model. Note that this property has no character restrictions.",
            "type": "string"
          }
        },
        "required": [
          "identifier",
          "faces",
          "properties"
        ],
        "additionalProperties": false
      },
      "Color": {
        "title": "Color",
        "description": "A RGB color.",
        "type": "object",
        "properties": {
          "r": {
            "title": "R",
            "description": "Value for red channel.",
            "minimum": 0,
            "maximum": 255,
            "type": "integer",
            "format": "int32"
          },
          "g": {
            "title": "G",
            "description": "Value for green channel.",
            "minimum": 0,
            "maximum": 255,
            "type": "integer",
            "format": "int32"
          },
          "b": {
            "title": "B",
            "description": "Value for blue channel.",
            "minimum": 0,
            "maximum": 255,
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "title": "Type",
            "default": "Color",
            "pattern": "^Color$",
            "type": "string",
            "readOnly": true
          },
          "a": {
            "title": "A",
            "description": "Value for the alpha channel, which defines the opacity as a number between 0 (fully transparent) and 255 (fully opaque).",
            "default": 255,
            "minimum": 0,
            "maximum": 255,
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "r",
          "g",
          "b"
        ],
        "additionalProperties": false
      },
      "Mesh3D": {
        "title": "Mesh3D",
        "description": "A mesh in 3D space.",
        "type": "object",
        "properties": {
          "vertices": {
            "title": "Vertices",
            "description": "A list of points representing the vertices of the mesh. The list should include at least 3 points and each point should be a list of 3 (x, y, z) values.",
            "minItems": 3,
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              },
              "minItems": 3,
              "maxItems": 3
            }
          },
          "faces": {
            "title": "Faces",
            "description": "A list of lists with each sub-list having either 3 or 4 integers. These integers correspond to indices within the list of vertices.",
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0,
                "format": "int32"
              },
              "minItems": 3,
              "maxItems": 4
            }
          },
          "type": {
            "title": "Type",
            "default": "Mesh3D",
            "pattern": "^Mesh3D$",
            "type": "string",
            "readOnly": true
          },
          "colors": {
            "title": "Colors",
            "description": "An optional list of colors that correspond to either the faces of the mesh or the vertices of the mesh.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Color"
            }
          }
        },
        "required": [
          "vertices",
          "faces"
        ],
        "additionalProperties": false
      },
      "ShadeMeshEnergyPropertiesAbridged": {
        "title": "ShadeMeshEnergyPropertiesAbridged",
        "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "ShadeMeshEnergyPropertiesAbridged",
            "pattern": "^ShadeMeshEnergyPropertiesAbridged$",
            "type": "string",
            "readOnly": true
          },
          "construction": {
            "title": "Construction",
            "description": "Identifier of a ShadeConstruction to set the reflectance and specularity of the Shade. If None, it will be a generic context construction that is completely diffuse with 0.2 visible and solar reflectance. Unless it is building attached, in which case it will be set by the default generic ConstructionSet.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "transmittance_schedule": {
            "title": "Transmittance Schedule",
            "description": "Identifier of a schedule to set the transmittance of the shade, which can vary throughout the simulation. If None, the shade will be completely opaque.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ShadeMeshRadiancePropertiesAbridged": {
        "title": "ShadeMeshRadiancePropertiesAbridged",
        "description": "Radiance Properties for Honeybee ShadeMesh Abridged.",
        "type": "object",
        "properties": {
          "modifier": {
            "title": "Modifier",
            "description": "A string for a Honeybee Radiance Modifier (default: None).",
            "type": "string"
          },
          "modifier_blk": {
            "title": "Modifier Blk",
            "description": "A string for a Honeybee Radiance Modifier to be used in direct solar simulations and in isolation studies (assessingthe contribution of individual objects) (default: None).",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "ShadeMeshRadiancePropertiesAbridged",
            "pattern": "^ShadeMeshRadiancePropertiesAbridged$",
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ShadeMeshPropertiesAbridged": {
        "title": "ShadeMeshPropertiesAbridged",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "ShadeMeshPropertiesAbridged",
            "pattern": "^ShadeMeshPropertiesAbridged$",
            "type": "string",
            "readOnly": true
          },
          "energy": {
            "$ref": "#/components/schemas/ShadeMeshEnergyPropertiesAbridged"
          },
          "radiance": {
            "$ref": "#/components/schemas/ShadeMeshRadiancePropertiesAbridged"
          }
        }
      },
      "ShadeMesh": {
        "title": "ShadeMesh",
        "description": "Base class for all objects requiring a identifiers acceptable for all engines.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, rad). This identifier is also used to reference the object across a Model. It must be < 100 characters and not contain any spaces or special characters.",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[.A-Za-z0-9_-]+$",
            "type": "string"
          },
          "geometry": {
            "title": "Geometry",
            "description": "A Mesh3D for the geometry.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Mesh3D"
              }
            ]
          },
          "properties": {
            "title": "Properties",
            "description": "Extension properties for particular simulation engines (Radiance, EnergyPlus).",
            "allOf": [
              {
                "$ref": "#/components/schemas/ShadeMeshPropertiesAbridged"
              }
            ]
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "ShadeMesh",
            "pattern": "^ShadeMesh$",
            "type": "string",
            "readOnly": true
          },
          "is_detached": {
            "title": "Is Detached",
            "description": "Boolean to note whether this shade is detached from any of the other geometry in the model. Cases where this should be True include shade representing surrounding buildings or context.",
            "default": true,
            "type": "boolean"
          }
        },
        "required": [
          "identifier",
          "geometry",
          "properties"
        ],
        "additionalProperties": false
      },
      "Units": {
        "title": "Units",
        "description": "An enumeration.",
        "enum": [
          "Meters",
          "Millimeters",
          "Feet",
          "Inches",
          "Centimeters"
        ],
        "type": "string"
      },
      "Roughness": {
        "title": "Roughness",
        "description": "Relative roughness of a particular material layer.",
        "enum": [
          "VeryRough",
          "Rough",
          "MediumRough",
          "MediumSmooth",
          "Smooth",
          "VerySmooth"
        ],
        "type": "string"
      },
      "EnergyMaterial": {
        "title": "EnergyMaterial",
        "description": "Opaque material representing a layer within an opaque construction.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "thickness": {
            "title": "Thickness",
            "description": "Thickness of the material layer in meters.",
            "exclusiveMinimum": 0,
            "maximum": 3,
            "type": "number",
            "format": "double"
          },
          "conductivity": {
            "title": "Conductivity",
            "description": "Thermal conductivity of the material layer in W/m-K.",
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          },
          "density": {
            "title": "Density",
            "description": "Density of the material layer in kg/m3.",
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          },
          "specific_heat": {
            "title": "Specific Heat",
            "description": "Specific heat of the material layer in J/kg-K.",
            "minimum": 100,
            "type": "number",
            "format": "double"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "EnergyMaterial",
            "pattern": "^EnergyMaterial$",
            "type": "string",
            "readOnly": true
          },
          "roughness": {
            "default": "MediumRough",
            "allOf": [
              {
                "$ref": "#/components/schemas/Roughness"
              }
            ]
          },
          "thermal_absorptance": {
            "title": "Thermal Absorptance",
            "description": "Fraction of incident long wavelength radiation that is absorbed by the material. Default: 0.9.",
            "default": 0.9,
            "exclusiveMinimum": 0,
            "maximum": 0.99999,
            "type": "number",
            "format": "double"
          },
          "solar_absorptance": {
            "title": "Solar Absorptance",
            "description": "Fraction of incident solar radiation absorbed by the material. Default: 0.7.",
            "default": 0.7,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "visible_absorptance": {
            "title": "Visible Absorptance",
            "description": "Fraction of incident visible wavelength radiation absorbed by the material. Default: 0.7.",
            "default": 0.7,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier",
          "thickness",
          "conductivity",
          "density",
          "specific_heat"
        ],
        "additionalProperties": false
      },
      "EnergyMaterialNoMass": {
        "title": "EnergyMaterialNoMass",
        "description": "No mass opaque material representing a layer within an opaque construction.\n\nUsed when only the thermal resistance (R value) of the material is known.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "r_value": {
            "title": "R Value",
            "description": "The thermal resistance (R-value) of the material layer [m2-K/W].",
            "minimum": 0.001,
            "type": "number",
            "format": "double"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "EnergyMaterialNoMass",
            "pattern": "^EnergyMaterialNoMass$",
            "type": "string",
            "readOnly": true
          },
          "roughness": {
            "default": "MediumRough",
            "allOf": [
              {
                "$ref": "#/components/schemas/Roughness"
              }
            ]
          },
          "thermal_absorptance": {
            "title": "Thermal Absorptance",
            "description": "Fraction of incident long wavelength radiation that is absorbed by the material. Default: 0.9.",
            "default": 0.9,
            "exclusiveMinimum": 0,
            "maximum": 0.99999,
            "type": "number",
            "format": "double"
          },
          "solar_absorptance": {
            "title": "Solar Absorptance",
            "description": "Fraction of incident solar radiation absorbed by the material. Default: 0.7.",
            "default": 0.7,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "visible_absorptance": {
            "title": "Visible Absorptance",
            "description": "Fraction of incident visible wavelength radiation absorbed by the material. Default: 0.7.",
            "default": 0.7,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier",
          "r_value"
        ],
        "additionalProperties": false
      },
      "EnergyWindowMaterialGlazing": {
        "title": "EnergyWindowMaterialGlazing",
        "description": "Describe a single glass pane corresponding to a layer in a window construction.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "EnergyWindowMaterialGlazing",
            "pattern": "^EnergyWindowMaterialGlazing$",
            "type": "string",
            "readOnly": true
          },
          "thickness": {
            "title": "Thickness",
            "description": "The surface-to-surface thickness of the glass in meters. Default:  0.003.",
            "default": 0.003,
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          },
          "solar_transmittance": {
            "title": "Solar Transmittance",
            "description": "Transmittance of solar radiation through the glass at normal incidence. Default: 0.85 for clear glass.",
            "default": 0.85,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "solar_reflectance": {
            "title": "Solar Reflectance",
            "description": "Reflectance of solar radiation off of the front side of the glass at normal incidence, averaged over the solar spectrum. Default: 0.075 for clear glass.",
            "default": 0.075,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "solar_reflectance_back": {
            "title": "Solar Reflectance Back",
            "description": "Reflectance of solar radiation off of the back side of the glass at normal incidence, averaged over the solar spectrum.",
            "default": {
              "type": "Autocalculate"
            },
            "anyOf": [
              {
                "$ref": "#/components/schemas/Autocalculate"
              },
              {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              }
            ]
          },
          "visible_transmittance": {
            "title": "Visible Transmittance",
            "description": "Transmittance of visible light through the glass at normal incidence. Default: 0.9 for clear glass.",
            "default": 0.9,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "visible_reflectance": {
            "title": "Visible Reflectance",
            "description": "Reflectance of visible light off of the front side of the glass at normal incidence. Default: 0.075 for clear glass.",
            "default": 0.075,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "visible_reflectance_back": {
            "title": "Visible Reflectance Back",
            "description": "Reflectance of visible light off of the back side of the glass at normal incidence averaged over the solar spectrum and weighted by the response of the human eye.",
            "default": {
              "type": "Autocalculate"
            },
            "anyOf": [
              {
                "$ref": "#/components/schemas/Autocalculate"
              },
              {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              }
            ]
          },
          "infrared_transmittance": {
            "title": "Infrared Transmittance",
            "description": "Long-wave transmittance at normal incidence.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "emissivity": {
            "title": "Emissivity",
            "description": "Infrared hemispherical emissivity of the front (outward facing) side of the glass.  Default: 0.84, which is typical for clear glass without a low-e coating.",
            "default": 0.84,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "emissivity_back": {
            "title": "Emissivity Back",
            "description": "Infrared hemispherical emissivity of the back (inward facing) side of the glass.  Default: 0.84, which is typical for clear glass without a low-e coating.",
            "default": 0.84,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "conductivity": {
            "title": "Conductivity",
            "description": "Thermal conductivity of the glass in W/(m-K). Default: 0.9, which is  typical for clear glass without a low-e coating.",
            "default": 0.9,
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          },
          "dirt_correction": {
            "title": "Dirt Correction",
            "description": "Factor that corrects for the presence of dirt on the glass. A default value of 1 indicates the glass is clean.",
            "default": 1,
            "type": "number",
            "format": "double"
          },
          "solar_diffusing": {
            "title": "Solar Diffusing",
            "description": "If False (default), the beam solar radiation incident on the glass is transmitted as beam radiation with no diffuse component.If True, the beam  solar radiation incident on the glass is transmitted as hemispherical diffuse radiation with no beam component.",
            "default": false,
            "type": "boolean"
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "GasType": {
        "title": "GasType",
        "description": "An enumeration.",
        "enum": [
          "Air",
          "Argon",
          "Krypton",
          "Xenon"
        ],
        "type": "string"
      },
      "EnergyWindowMaterialGas": {
        "title": "EnergyWindowMaterialGas",
        "description": "Create single layer of gas in a window construction.\n\nCan be combined with EnergyWindowMaterialGlazing to make multi-pane windows.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "EnergyWindowMaterialGas",
            "pattern": "^EnergyWindowMaterialGas$",
            "type": "string",
            "readOnly": true
          },
          "thickness": {
            "title": "Thickness",
            "description": "Thickness of the gas layer in meters. Default: 0.0125.",
            "default": 0.0125,
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          },
          "gas_type": {
            "default": "Air",
            "allOf": [
              {
                "$ref": "#/components/schemas/GasType"
              }
            ]
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "OpaqueConstructionAbridged": {
        "title": "OpaqueConstructionAbridged",
        "description": "Construction for opaque objects (Face, Shade, Door).",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "materials": {
            "title": "Materials",
            "description": "List of strings for opaque material identifiers. The order of the materials is from exterior to interior.",
            "minItems": 1,
            "maxItems": 10,
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100
            }
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "OpaqueConstructionAbridged",
            "pattern": "^OpaqueConstructionAbridged$",
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "identifier",
          "materials"
        ],
        "additionalProperties": false
      },
      "WindowConstructionAbridged": {
        "title": "WindowConstructionAbridged",
        "description": "Construction for window objects (Aperture, Door).",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "materials": {
            "title": "Materials",
            "description": "List of strings for glazing or gas material identifiers. The order of the materials is from exterior to interior. If a SimpleGlazSys material is used, it must be the only material in the construction. For multi-layered constructions, adjacent glass layers must be separated by one and only one gas layer.",
            "minItems": 1,
            "maxItems": 8,
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100
            }
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "WindowConstructionAbridged",
            "pattern": "^WindowConstructionAbridged$",
            "type": "string",
            "readOnly": true
          },
          "frame": {
            "title": "Frame",
            "description": "An optional identifier for a frame material that surrounds the window construction.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "identifier",
          "materials"
        ],
        "additionalProperties": false
      },
      "ShadeConstruction": {
        "title": "ShadeConstruction",
        "description": "Construction for Shade objects.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "ShadeConstruction",
            "pattern": "^ShadeConstruction$",
            "type": "string",
            "readOnly": true
          },
          "solar_reflectance": {
            "title": "Solar Reflectance",
            "description": "A number for the solar reflectance of the construction.",
            "default": 0.2,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "visible_reflectance": {
            "title": "Visible Reflectance",
            "description": "A number for the visible reflectance of the construction.",
            "default": 0.2,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "is_specular": {
            "title": "Is Specular",
            "description": "Boolean to note whether the reflection off the shade is diffuse (False) or specular (True). Set to True if the construction is representing a glass facade or a mirror material.",
            "default": false,
            "type": "boolean"
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "AirBoundaryConstructionAbridged": {
        "title": "AirBoundaryConstructionAbridged",
        "description": "Construction for Air Boundary objects.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "AirBoundaryConstructionAbridged",
            "pattern": "^AirBoundaryConstructionAbridged$",
            "type": "string",
            "readOnly": true
          },
          "air_mixing_per_area": {
            "title": "Air Mixing Per Area",
            "description": "A positive number for the amount of air mixing between Rooms across the air boundary surface [m3/s-m2]. Default: 0.1 corresponds to average indoor air speeds of 0.1 m/s (roughly 20 fpm), which is typical of what would be induced by a HVAC system.",
            "default": 0.1,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "air_mixing_schedule": {
            "title": "Air Mixing Schedule",
            "description": "Identifier of a fractional schedule for the air mixing schedule across the construction. If unspecified, an Always On schedule will be assumed.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "WallConstructionSetAbridged": {
        "title": "WallConstructionSetAbridged",
        "description": "A set of constructions for wall assemblies.",
        "type": "object",
        "properties": {
          "interior_construction": {
            "title": "Interior Construction",
            "description": "Identifier for an OpaqueConstruction for faces with a Surface or Adiabatic boundary condition.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "exterior_construction": {
            "title": "Exterior Construction",
            "description": "Identifier for an OpaqueConstruction for faces with an Outdoors boundary condition.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "ground_construction": {
            "title": "Ground Construction",
            "description": "Identifier for an OpaqueConstruction for faces with a Ground boundary condition.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "WallConstructionSetAbridged",
            "pattern": "^WallConstructionSetAbridged$",
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FloorConstructionSetAbridged": {
        "title": "FloorConstructionSetAbridged",
        "description": "A set of constructions for floor assemblies.",
        "type": "object",
        "properties": {
          "interior_construction": {
            "title": "Interior Construction",
            "description": "Identifier for an OpaqueConstruction for faces with a Surface or Adiabatic boundary condition.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "exterior_construction": {
            "title": "Exterior Construction",
            "description": "Identifier for an OpaqueConstruction for faces with an Outdoors boundary condition.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "ground_construction": {
            "title": "Ground Construction",
            "description": "Identifier for an OpaqueConstruction for faces with a Ground boundary condition.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "FloorConstructionSetAbridged",
            "pattern": "^FloorConstructionSetAbridged$",
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "RoofCeilingConstructionSetAbridged": {
        "title": "RoofCeilingConstructionSetAbridged",
        "description": "A set of constructions for roof and ceiling assemblies.",
        "type": "object",
        "properties": {
          "interior_construction": {
            "title": "Interior Construction",
            "description": "Identifier for an OpaqueConstruction for faces with a Surface or Adiabatic boundary condition.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "exterior_construction": {
            "title": "Exterior Construction",
            "description": "Identifier for an OpaqueConstruction for faces with an Outdoors boundary condition.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "ground_construction": {
            "title": "Ground Construction",
            "description": "Identifier for an OpaqueConstruction for faces with a Ground boundary condition.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "RoofCeilingConstructionSetAbridged",
            "pattern": "^RoofCeilingConstructionSetAbridged$",
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApertureConstructionSetAbridged": {
        "title": "ApertureConstructionSetAbridged",
        "description": "A set of constructions for aperture assemblies.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "ApertureConstructionSetAbridged",
            "pattern": "^ApertureConstructionSetAbridged$",
            "type": "string",
            "readOnly": true
          },
          "interior_construction": {
            "title": "Interior Construction",
            "description": "Identifier for a WindowConstruction for all apertures with a Surface boundary condition.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "window_construction": {
            "title": "Window Construction",
            "description": "Identifier for a WindowConstruction for apertures with an Outdoors boundary condition, False is_operable property, and a Wall face type for their parent face.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "skylight_construction": {
            "title": "Skylight Construction",
            "description": "Identifier for a WindowConstruction for apertures with a Outdoors boundary condition, False is_operable property, and a RoofCeiling or Floor face type for their parent face.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "operable_construction": {
            "title": "Operable Construction",
            "description": "Identifier for a WindowConstruction for all apertures with an Outdoors boundary condition and True is_operable property.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "DoorConstructionSetAbridged": {
        "title": "DoorConstructionSetAbridged",
        "description": "A set of constructions for door assemblies.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "DoorConstructionSetAbridged",
            "pattern": "^DoorConstructionSetAbridged$",
            "type": "string",
            "readOnly": true
          },
          "interior_construction": {
            "title": "Interior Construction",
            "description": "Identifier for an OpaqueConstruction for all opaque doors with a Surface boundary condition.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "exterior_construction": {
            "title": "Exterior Construction",
            "description": "Identifier for an OpaqueConstruction for opaque doors with an Outdoors boundary condition and a Wall face type for their parent face.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "overhead_construction": {
            "title": "Overhead Construction",
            "description": "Identifier for an OpaqueConstruction for opaque doors with an Outdoors boundary condition and a RoofCeiling or Floor type for their parent face.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "exterior_glass_construction": {
            "title": "Exterior Glass Construction",
            "description": "Identifier for a WindowConstruction for all glass doors with an Outdoors boundary condition.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "interior_glass_construction": {
            "title": "Interior Glass Construction",
            "description": "Identifier for a WindowConstruction for all glass doors with a Surface boundary condition.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GlobalConstructionSet": {
        "title": "GlobalConstructionSet",
        "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "GlobalConstructionSet",
            "pattern": "^GlobalConstructionSet$",
            "type": "string",
            "readOnly": true
          },
          "materials": {
            "title": "Materials",
            "description": "Global Honeybee Energy materials.",
            "default": [
              {
                "identifier": "Generic Roof Membrane",
                "display_name": null,
                "user_data": null,
                "type": "EnergyMaterial",
                "roughness": "MediumRough",
                "thickness": 0.01,
                "conductivity": 0.16,
                "density": 1120.0,
                "specific_heat": 1460.0,
                "thermal_absorptance": 0.9,
                "solar_absorptance": 0.65,
                "visible_absorptance": 0.65
              },
              {
                "identifier": "Generic Acoustic Tile",
                "display_name": null,
                "user_data": null,
                "type": "EnergyMaterial",
                "roughness": "MediumSmooth",
                "thickness": 0.02,
                "conductivity": 0.06,
                "density": 368.0,
                "specific_heat": 590.0,
                "thermal_absorptance": 0.9,
                "solar_absorptance": 0.2,
                "visible_absorptance": 0.2
              },
              {
                "identifier": "Generic 25mm Wood",
                "display_name": null,
                "user_data": null,
                "type": "EnergyMaterial",
                "roughness": "MediumSmooth",
                "thickness": 0.0254,
                "conductivity": 0.15,
                "density": 608.0,
                "specific_heat": 1630.0,
                "thermal_absorptance": 0.9,
                "solar_absorptance": 0.5,
                "visible_absorptance": 0.5
              },
              {
                "identifier": "Generic HW Concrete",
                "display_name": null,
                "user_data": null,
                "type": "EnergyMaterial",
                "roughness": "MediumRough",
                "thickness": 0.2,
                "conductivity": 1.95,
                "density": 2240.0,
                "specific_heat": 900.0,
                "thermal_absorptance": 0.9,
                "solar_absorptance": 0.8,
                "visible_absorptance": 0.8
              },
              {
                "identifier": "Generic Window Air Gap",
                "display_name": null,
                "user_data": null,
                "type": "EnergyWindowMaterialGas",
                "thickness": 0.0127,
                "gas_type": "Air"
              },
              {
                "identifier": "Generic Gypsum Board",
                "display_name": null,
                "user_data": null,
                "type": "EnergyMaterial",
                "roughness": "MediumSmooth",
                "thickness": 0.0127,
                "conductivity": 0.16,
                "density": 800.0,
                "specific_heat": 1090.0,
                "thermal_absorptance": 0.9,
                "solar_absorptance": 0.5,
                "visible_absorptance": 0.5
              },
              {
                "identifier": "Generic Wall Air Gap",
                "display_name": null,
                "user_data": null,
                "type": "EnergyMaterial",
                "roughness": "Smooth",
                "thickness": 0.1,
                "conductivity": 0.667,
                "density": 1.28,
                "specific_heat": 1000.0,
                "thermal_absorptance": 0.9,
                "solar_absorptance": 0.7,
                "visible_absorptance": 0.7
              },
              {
                "identifier": "Generic Ceiling Air Gap",
                "display_name": null,
                "user_data": null,
                "type": "EnergyMaterial",
                "roughness": "Smooth",
                "thickness": 0.1,
                "conductivity": 0.556,
                "density": 1.28,
                "specific_heat": 1000.0,
                "thermal_absorptance": 0.9,
                "solar_absorptance": 0.7,
                "visible_absorptance": 0.7
              },
              {
                "identifier": "Generic Brick",
                "display_name": null,
                "user_data": null,
                "type": "EnergyMaterial",
                "roughness": "MediumRough",
                "thickness": 0.1,
                "conductivity": 0.9,
                "density": 1920.0,
                "specific_heat": 790.0,
                "thermal_absorptance": 0.9,
                "solar_absorptance": 0.65,
                "visible_absorptance": 0.65
              },
              {
                "identifier": "Generic 50mm Insulation",
                "display_name": null,
                "user_data": null,
                "type": "EnergyMaterial",
                "roughness": "MediumRough",
                "thickness": 0.05,
                "conductivity": 0.03,
                "density": 43.0,
                "specific_heat": 1210.0,
                "thermal_absorptance": 0.9,
                "solar_absorptance": 0.7,
                "visible_absorptance": 0.7
              },
              {
                "identifier": "Generic Low-e Glass",
                "display_name": null,
                "user_data": null,
                "type": "EnergyWindowMaterialGlazing",
                "thickness": 0.006,
                "solar_transmittance": 0.45,
                "solar_reflectance": 0.36,
                "solar_reflectance_back": 0.36,
                "visible_transmittance": 0.71,
                "visible_reflectance": 0.21,
                "visible_reflectance_back": 0.21,
                "infrared_transmittance": 0.0,
                "emissivity": 0.84,
                "emissivity_back": 0.047,
                "conductivity": 1.0,
                "dirt_correction": 1.0,
                "solar_diffusing": false
              },
              {
                "identifier": "Generic Painted Metal",
                "display_name": null,
                "user_data": null,
                "type": "EnergyMaterial",
                "roughness": "Smooth",
                "thickness": 0.0015,
                "conductivity": 45.0,
                "density": 7690.0,
                "specific_heat": 410.0,
                "thermal_absorptance": 0.9,
                "solar_absorptance": 0.5,
                "visible_absorptance": 0.5
              },
              {
                "identifier": "Generic LW Concrete",
                "display_name": null,
                "user_data": null,
                "type": "EnergyMaterial",
                "roughness": "MediumRough",
                "thickness": 0.1,
                "conductivity": 0.53,
                "density": 1280.0,
                "specific_heat": 840.0,
                "thermal_absorptance": 0.9,
                "solar_absorptance": 0.8,
                "visible_absorptance": 0.8
              },
              {
                "identifier": "Generic 25mm Insulation",
                "display_name": null,
                "user_data": null,
                "type": "EnergyMaterial",
                "roughness": "MediumRough",
                "thickness": 0.025,
                "conductivity": 0.03,
                "density": 43.0,
                "specific_heat": 1210.0,
                "thermal_absorptance": 0.9,
                "solar_absorptance": 0.7,
                "visible_absorptance": 0.7
              },
              {
                "identifier": "Generic Clear Glass",
                "display_name": null,
                "user_data": null,
                "type": "EnergyWindowMaterialGlazing",
                "thickness": 0.006,
                "solar_transmittance": 0.77,
                "solar_reflectance": 0.07,
                "solar_reflectance_back": 0.07,
                "visible_transmittance": 0.88,
                "visible_reflectance": 0.08,
                "visible_reflectance_back": 0.08,
                "infrared_transmittance": 0.0,
                "emissivity": 0.84,
                "emissivity_back": 0.84,
                "conductivity": 1.0,
                "dirt_correction": 1.0,
                "solar_diffusing": false
              }
            ],
            "readOnly": true,
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/EnergyMaterial"
                },
                {
                  "$ref": "#/components/schemas/EnergyMaterialNoMass"
                },
                {
                  "$ref": "#/components/schemas/EnergyWindowMaterialGlazing"
                },
                {
                  "$ref": "#/components/schemas/EnergyWindowMaterialGas"
                }
              ]
            }
          },
          "constructions": {
            "title": "Constructions",
            "description": "Global Honeybee Energy constructions.",
            "default": [
              {
                "identifier": "Generic Interior Door",
                "display_name": null,
                "user_data": null,
                "type": "OpaqueConstructionAbridged",
                "materials": [
                  "Generic 25mm Wood"
                ]
              },
              {
                "identifier": "Generic Single Pane",
                "display_name": null,
                "user_data": null,
                "type": "WindowConstructionAbridged",
                "materials": [
                  "Generic Clear Glass"
                ],
                "frame": null
              },
              {
                "identifier": "Generic Shade",
                "display_name": null,
                "user_data": null,
                "type": "ShadeConstruction",
                "solar_reflectance": 0.35,
                "visible_reflectance": 0.35,
                "is_specular": false
              },
              {
                "identifier": "Generic Context",
                "display_name": null,
                "user_data": null,
                "type": "ShadeConstruction",
                "solar_reflectance": 0.2,
                "visible_reflectance": 0.2,
                "is_specular": false
              },
              {
                "identifier": "Generic Interior Ceiling",
                "display_name": null,
                "user_data": null,
                "type": "OpaqueConstructionAbridged",
                "materials": [
                  "Generic LW Concrete",
                  "Generic Ceiling Air Gap",
                  "Generic Acoustic Tile"
                ]
              },
              {
                "identifier": "Generic Interior Wall",
                "display_name": null,
                "user_data": null,
                "type": "OpaqueConstructionAbridged",
                "materials": [
                  "Generic Gypsum Board",
                  "Generic Wall Air Gap",
                  "Generic Gypsum Board"
                ]
              },
              {
                "identifier": "Generic Exposed Floor",
                "display_name": null,
                "user_data": null,
                "type": "OpaqueConstructionAbridged",
                "materials": [
                  "Generic Painted Metal",
                  "Generic Ceiling Air Gap",
                  "Generic 50mm Insulation",
                  "Generic LW Concrete"
                ]
              },
              {
                "identifier": "Generic Interior Floor",
                "display_name": null,
                "user_data": null,
                "type": "OpaqueConstructionAbridged",
                "materials": [
                  "Generic Acoustic Tile",
                  "Generic Ceiling Air Gap",
                  "Generic LW Concrete"
                ]
              },
              {
                "identifier": "Generic Ground Slab",
                "display_name": null,
                "user_data": null,
                "type": "OpaqueConstructionAbridged",
                "materials": [
                  "Generic 50mm Insulation",
                  "Generic HW Concrete"
                ]
              },
              {
                "identifier": "Generic Roof",
                "display_name": null,
                "user_data": null,
                "type": "OpaqueConstructionAbridged",
                "materials": [
                  "Generic Roof Membrane",
                  "Generic 50mm Insulation",
                  "Generic LW Concrete",
                  "Generic Ceiling Air Gap",
                  "Generic Acoustic Tile"
                ]
              },
              {
                "identifier": "Generic Exterior Wall",
                "display_name": null,
                "user_data": null,
                "type": "OpaqueConstructionAbridged",
                "materials": [
                  "Generic Brick",
                  "Generic LW Concrete",
                  "Generic 50mm Insulation",
                  "Generic Wall Air Gap",
                  "Generic Gypsum Board"
                ]
              },
              {
                "identifier": "Generic Underground Wall",
                "display_name": null,
                "user_data": null,
                "type": "OpaqueConstructionAbridged",
                "materials": [
                  "Generic 50mm Insulation",
                  "Generic HW Concrete",
                  "Generic Wall Air Gap",
                  "Generic Gypsum Board"
                ]
              },
              {
                "identifier": "Generic Air Boundary",
                "display_name": null,
                "user_data": null,
                "type": "AirBoundaryConstructionAbridged",
                "air_mixing_per_area": 0.1,
                "air_mixing_schedule": "Always On"
              },
              {
                "identifier": "Generic Underground Roof",
                "display_name": null,
                "user_data": null,
                "type": "OpaqueConstructionAbridged",
                "materials": [
                  "Generic 50mm Insulation",
                  "Generic HW Concrete",
                  "Generic Ceiling Air Gap",
                  "Generic Acoustic Tile"
                ]
              },
              {
                "identifier": "Generic Double Pane",
                "display_name": null,
                "user_data": null,
                "type": "WindowConstructionAbridged",
                "materials": [
                  "Generic Low-e Glass",
                  "Generic Window Air Gap",
                  "Generic Clear Glass"
                ],
                "frame": null
              },
              {
                "identifier": "Generic Exterior Door",
                "display_name": null,
                "user_data": null,
                "type": "OpaqueConstructionAbridged",
                "materials": [
                  "Generic Painted Metal",
                  "Generic 25mm Insulation",
                  "Generic Painted Metal"
                ]
              }
            ],
            "readOnly": true,
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/OpaqueConstructionAbridged"
                },
                {
                  "$ref": "#/components/schemas/WindowConstructionAbridged"
                },
                {
                  "$ref": "#/components/schemas/ShadeConstruction"
                },
                {
                  "$ref": "#/components/schemas/AirBoundaryConstructionAbridged"
                }
              ]
            }
          },
          "wall_set": {
            "title": "Wall Set",
            "description": "Global Honeybee WallConstructionSet.",
            "default": {
              "interior_construction": "Generic Interior Wall",
              "exterior_construction": "Generic Exterior Wall",
              "ground_construction": "Generic Underground Wall",
              "type": "WallConstructionSetAbridged"
            },
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/WallConstructionSetAbridged"
              }
            ]
          },
          "floor_set": {
            "title": "Floor Set",
            "description": "Global Honeybee FloorConstructionSet.",
            "default": {
              "interior_construction": "Generic Interior Floor",
              "exterior_construction": "Generic Exposed Floor",
              "ground_construction": "Generic Ground Slab",
              "type": "FloorConstructionSetAbridged"
            },
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/FloorConstructionSetAbridged"
              }
            ]
          },
          "roof_ceiling_set": {
            "title": "Roof Ceiling Set",
            "description": "Global Honeybee RoofCeilingConstructionSet.",
            "default": {
              "interior_construction": "Generic Interior Ceiling",
              "exterior_construction": "Generic Roof",
              "ground_construction": "Generic Underground Roof",
              "type": "RoofCeilingConstructionSetAbridged"
            },
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/RoofCeilingConstructionSetAbridged"
              }
            ]
          },
          "aperture_set": {
            "title": "Aperture Set",
            "description": "Global Honeybee ApertureConstructionSet.",
            "default": {
              "type": "ApertureConstructionSetAbridged",
              "interior_construction": "Generic Single Pane",
              "window_construction": "Generic Double Pane",
              "skylight_construction": "Generic Double Pane",
              "operable_construction": "Generic Double Pane"
            },
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ApertureConstructionSetAbridged"
              }
            ]
          },
          "door_set": {
            "title": "Door Set",
            "description": "Global Honeybee DoorConstructionSet.",
            "default": {
              "type": "DoorConstructionSetAbridged",
              "interior_construction": "Generic Interior Door",
              "exterior_construction": "Generic Exterior Door",
              "overhead_construction": "Generic Exterior Door",
              "exterior_glass_construction": "Generic Double Pane",
              "interior_glass_construction": "Generic Single Pane"
            },
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/DoorConstructionSetAbridged"
              }
            ]
          },
          "shade_construction": {
            "title": "Shade Construction",
            "description": "Global Honeybee Construction for building-attached Shades.",
            "default": "Generic Shade",
            "readOnly": true,
            "type": "string"
          },
          "context_construction": {
            "title": "Context Construction",
            "description": "Global Honeybee Construction for context Shades.",
            "default": "Generic Context",
            "readOnly": true,
            "type": "string"
          },
          "air_boundary_construction": {
            "title": "Air Boundary Construction",
            "description": "Global Honeybee Construction for AirBoundary Faces.",
            "default": "Generic Air Boundary",
            "readOnly": true,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ConstructionSetAbridged": {
        "title": "ConstructionSetAbridged",
        "description": "A set of constructions for different surface types and boundary conditions.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "ConstructionSetAbridged",
            "pattern": "^ConstructionSetAbridged$",
            "type": "string",
            "readOnly": true
          },
          "wall_set": {
            "title": "Wall Set",
            "description": "A WallConstructionSetAbridged object for this ConstructionSet.",
            "allOf": [
              {
                "$ref": "#/components/schemas/WallConstructionSetAbridged"
              }
            ]
          },
          "floor_set": {
            "title": "Floor Set",
            "description": "A FloorConstructionSetAbridged object for this ConstructionSet.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FloorConstructionSetAbridged"
              }
            ]
          },
          "roof_ceiling_set": {
            "title": "Roof Ceiling Set",
            "description": "A RoofCeilingConstructionSetAbridged object for this ConstructionSet.",
            "allOf": [
              {
                "$ref": "#/components/schemas/RoofCeilingConstructionSetAbridged"
              }
            ]
          },
          "aperture_set": {
            "title": "Aperture Set",
            "description": "A ApertureConstructionSetAbridged object for this ConstructionSet.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApertureConstructionSetAbridged"
              }
            ]
          },
          "door_set": {
            "title": "Door Set",
            "description": "A DoorConstructionSetAbridged object for this ConstructionSet.",
            "allOf": [
              {
                "$ref": "#/components/schemas/DoorConstructionSetAbridged"
              }
            ]
          },
          "shade_construction": {
            "title": "Shade Construction",
            "description": "The identifier of a ShadeConstruction to set the reflectance properties of all outdoor shades of all objects to which this ConstructionSet is assigned.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "air_boundary_construction": {
            "title": "Air Boundary Construction",
            "description": "The identifier of an AirBoundaryConstruction or OpaqueConstruction to set the properties of Faces with an AirBoundary type.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "MoistureDiffusionModel": {
        "title": "MoistureDiffusionModel",
        "description": "Acceptable values for the moisture diffusion model for vegetation.",
        "enum": [
          "Simple",
          "Advanced"
        ],
        "type": "string"
      },
      "EnergyMaterialVegetation": {
        "title": "EnergyMaterialVegetation",
        "description": "Material representing vegetation on the exterior of an opaque construction.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "EnergyMaterialVegetation",
            "pattern": "^EnergyMaterialVegetation$",
            "type": "string",
            "readOnly": true
          },
          "roughness": {
            "default": "MediumRough",
            "allOf": [
              {
                "$ref": "#/components/schemas/Roughness"
              }
            ]
          },
          "thickness": {
            "title": "Thickness",
            "description": "Thickness of the soil layer in meters.",
            "default": 0.1,
            "exclusiveMinimum": 0,
            "maximum": 3,
            "type": "number",
            "format": "double"
          },
          "conductivity": {
            "title": "Conductivity",
            "description": "Thermal conductivity of the dry soil in W/m-K.",
            "default": 0.35,
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          },
          "density": {
            "title": "Density",
            "description": "Density of the dry soil in kg/m3.",
            "default": 1100,
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          },
          "specific_heat": {
            "title": "Specific Heat",
            "description": "Specific heat of the dry soil in J/kg-K.",
            "default": 1200,
            "minimum": 100,
            "type": "number",
            "format": "double"
          },
          "soil_thermal_absorptance": {
            "title": "Soil Thermal Absorptance",
            "description": "Fraction of incident long wavelength radiation that is absorbed by the soil. Default: 0.9.",
            "default": 0.9,
            "exclusiveMinimum": 0,
            "maximum": 0.99999,
            "type": "number",
            "format": "double"
          },
          "soil_solar_absorptance": {
            "title": "Soil Solar Absorptance",
            "description": "Fraction of incident solar radiation absorbed by the soil. Default: 0.7.",
            "default": 0.7,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "soil_visible_absorptance": {
            "title": "Soil Visible Absorptance",
            "description": "Fraction of incident visible wavelength radiation absorbed by the material. Default: 0.7.",
            "default": 0.7,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "plant_height": {
            "title": "Plant Height",
            "description": "The height of plants in the vegetation in meters.",
            "default": 0.2,
            "minimum": 0.005,
            "maximum": 1.0,
            "type": "number",
            "format": "double"
          },
          "leaf_area_index": {
            "title": "Leaf Area Index",
            "description": "The projected leaf area per unit area of soil surface (aka. Leaf Area Index or LAI). Note that the fraction of vegetation cover is calculated directly from LAI using an empirical relation.",
            "default": 1.0,
            "minimum": 0.001,
            "maximum": 5.0,
            "type": "number",
            "format": "double"
          },
          "leaf_reflectivity": {
            "title": "Leaf Reflectivity",
            "description": "The fraction of incident solar radiation that is reflected by the leaf surfaces. Solar radiation includes the visible spectrum as well as infrared and ultraviolet wavelengths. Typical values are 0.18 to 0.25.",
            "default": 0.22,
            "minimum": 0.005,
            "maximum": 0.5,
            "type": "number",
            "format": "double"
          },
          "leaf_emissivity": {
            "title": "Leaf Emissivity",
            "description": "The ratio of thermal radiation emitted from leaf surfaces to that emitted by an ideal black body at the same temperature.",
            "default": 0.95,
            "minimum": 0.8,
            "maximum": 1.0,
            "type": "number",
            "format": "double"
          },
          "min_stomatal_resist": {
            "title": "Min Stomatal Resist",
            "description": "The resistance of the plants to moisture transport [s/m]. Plants with low values of stomatal resistance will result in higher evapotranspiration rates than plants with high resistance.",
            "default": 180,
            "minimum": 50,
            "maximum": 300,
            "type": "number",
            "format": "double"
          },
          "sat_vol_moist_cont": {
            "title": "Sat Vol Moist Cont",
            "description": "The saturation moisture content of the soil by volume.",
            "default": 0.3,
            "minimum": 0.1,
            "maximum": 0.5,
            "type": "number",
            "format": "double"
          },
          "residual_vol_moist_cont": {
            "title": "Residual Vol Moist Cont",
            "description": "The residual moisture content of the soil by volume.",
            "default": 0.01,
            "minimum": 0.01,
            "maximum": 0.1,
            "type": "number",
            "format": "double"
          },
          "init_vol_moist_cont": {
            "title": "Init Vol Moist Cont",
            "description": "The initial moisture content of the soil by volume.",
            "default": 0.01,
            "minimum": 0.05,
            "maximum": 0.5,
            "type": "number",
            "format": "double"
          },
          "moist_diff_model": {
            "default": "Simple",
            "allOf": [
              {
                "$ref": "#/components/schemas/MoistureDiffusionModel"
              }
            ]
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "OpaqueConstruction": {
        "title": "OpaqueConstruction",
        "description": "Construction for opaque objects (Face, Shade, Door).",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "materials": {
            "title": "Materials",
            "description": "List of opaque material definitions. The order of the materials is from exterior to interior.",
            "minItems": 1,
            "maxItems": 10,
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/EnergyMaterial"
                },
                {
                  "$ref": "#/components/schemas/EnergyMaterialNoMass"
                },
                {
                  "$ref": "#/components/schemas/EnergyMaterialVegetation"
                }
              ]
            }
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "OpaqueConstruction",
            "pattern": "^OpaqueConstruction$",
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "identifier",
          "materials"
        ],
        "additionalProperties": false
      },
      "WallConstructionSet": {
        "title": "WallConstructionSet",
        "description": "A set of constructions for wall assemblies.",
        "type": "object",
        "properties": {
          "interior_construction": {
            "title": "Interior Construction",
            "description": "An OpaqueConstruction for walls with a Surface or Adiabatic boundary condition.",
            "allOf": [
              {
                "$ref": "#/components/schemas/OpaqueConstruction"
              }
            ]
          },
          "exterior_construction": {
            "title": "Exterior Construction",
            "description": "An OpaqueConstruction for walls with an Outdoors boundary condition.",
            "allOf": [
              {
                "$ref": "#/components/schemas/OpaqueConstruction"
              }
            ]
          },
          "ground_construction": {
            "title": "Ground Construction",
            "description": "An OpaqueConstruction for walls with a Ground boundary condition.",
            "allOf": [
              {
                "$ref": "#/components/schemas/OpaqueConstruction"
              }
            ]
          },
          "type": {
            "title": "Type",
            "default": "WallConstructionSet",
            "pattern": "^WallConstructionSet$",
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FloorConstructionSet": {
        "title": "FloorConstructionSet",
        "description": "A set of constructions for floor assemblies.",
        "type": "object",
        "properties": {
          "interior_construction": {
            "title": "Interior Construction",
            "description": "An OpaqueConstruction for walls with a Surface or Adiabatic boundary condition.",
            "allOf": [
              {
                "$ref": "#/components/schemas/OpaqueConstruction"
              }
            ]
          },
          "exterior_construction": {
            "title": "Exterior Construction",
            "description": "An OpaqueConstruction for walls with an Outdoors boundary condition.",
            "allOf": [
              {
                "$ref": "#/components/schemas/OpaqueConstruction"
              }
            ]
          },
          "ground_construction": {
            "title": "Ground Construction",
            "description": "An OpaqueConstruction for walls with a Ground boundary condition.",
            "allOf": [
              {
                "$ref": "#/components/schemas/OpaqueConstruction"
              }
            ]
          },
          "type": {
            "title": "Type",
            "default": "FloorConstructionSet",
            "pattern": "^FloorConstructionSet$",
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "RoofCeilingConstructionSet": {
        "title": "RoofCeilingConstructionSet",
        "description": "A set of constructions for roof and ceiling assemblies.",
        "type": "object",
        "properties": {
          "interior_construction": {
            "title": "Interior Construction",
            "description": "An OpaqueConstruction for walls with a Surface or Adiabatic boundary condition.",
            "allOf": [
              {
                "$ref": "#/components/schemas/OpaqueConstruction"
              }
            ]
          },
          "exterior_construction": {
            "title": "Exterior Construction",
            "description": "An OpaqueConstruction for walls with an Outdoors boundary condition.",
            "allOf": [
              {
                "$ref": "#/components/schemas/OpaqueConstruction"
              }
            ]
          },
          "ground_construction": {
            "title": "Ground Construction",
            "description": "An OpaqueConstruction for walls with a Ground boundary condition.",
            "allOf": [
              {
                "$ref": "#/components/schemas/OpaqueConstruction"
              }
            ]
          },
          "type": {
            "title": "Type",
            "default": "RoofCeilingConstructionSet",
            "pattern": "^RoofCeilingConstructionSet$",
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "EnergyWindowMaterialSimpleGlazSys": {
        "title": "EnergyWindowMaterialSimpleGlazSys",
        "description": "Describe an entire glazing system rather than individual layers.\n\nUsed when only very limited information is available on the glazing layers or when\nspecific performance levels are being targeted.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "u_factor": {
            "title": "U Factor",
            "description": "The overall heat transfer coefficient for window system in W/m2-K. Note that constructions with U-values above 5.8 should not be assigned to skylights as this implies the resistance of the window is negative when air films are subtracted.",
            "exclusiveMinimum": 0,
            "maximum": 12,
            "type": "number",
            "format": "double"
          },
          "shgc": {
            "title": "Shgc",
            "description": "Unit-less quantity for the Solar Heat Gain Coefficient (solar transmittance + conduction) at normal incidence and vertical orientation.",
            "exclusiveMinimum": 0,
            "exclusiveMaximum": 1,
            "type": "number",
            "format": "double"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "EnergyWindowMaterialSimpleGlazSys",
            "pattern": "^EnergyWindowMaterialSimpleGlazSys$",
            "type": "string",
            "readOnly": true
          },
          "vt": {
            "title": "Vt",
            "description": "The fraction of visible light falling on the window that makes it through the glass at normal incidence.",
            "default": 0.54,
            "exclusiveMinimum": 0,
            "exclusiveMaximum": 1,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier",
          "u_factor",
          "shgc"
        ],
        "additionalProperties": false
      },
      "EnergyWindowMaterialGasCustom": {
        "title": "EnergyWindowMaterialGasCustom",
        "description": "Create single layer of custom gas.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "conductivity_coeff_a": {
            "title": "Conductivity Coeff A",
            "description": "The A coefficient for gas conductivity in W/(m-K).",
            "type": "number",
            "format": "double"
          },
          "viscosity_coeff_a": {
            "title": "Viscosity Coeff A",
            "description": "The A coefficient for gas viscosity in kg/(m-s).",
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          },
          "specific_heat_coeff_a": {
            "title": "Specific Heat Coeff A",
            "description": "The A coefficient for gas specific heat in J/(kg-K).",
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          },
          "specific_heat_ratio": {
            "title": "Specific Heat Ratio",
            "description": "The specific heat ratio for gas.",
            "exclusiveMinimum": 1,
            "type": "number",
            "format": "double"
          },
          "molecular_weight": {
            "title": "Molecular Weight",
            "description": "The molecular weight for gas in g/mol.",
            "minimum": 20,
            "maximum": 200,
            "type": "number",
            "format": "double"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "EnergyWindowMaterialGasCustom",
            "pattern": "^EnergyWindowMaterialGasCustom$",
            "type": "string",
            "readOnly": true
          },
          "thickness": {
            "title": "Thickness",
            "description": "Thickness of the gas layer in meters. Default: 0.0125.",
            "default": 0.0125,
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          },
          "conductivity_coeff_b": {
            "title": "Conductivity Coeff B",
            "description": "The B coefficient for gas conductivity in W/(m-K2).",
            "default": 0,
            "type": "number",
            "format": "double"
          },
          "conductivity_coeff_c": {
            "title": "Conductivity Coeff C",
            "description": "The C coefficient for gas conductivity in W/(m-K3).",
            "default": 0,
            "type": "number",
            "format": "double"
          },
          "viscosity_coeff_b": {
            "title": "Viscosity Coeff B",
            "description": "The B coefficient for gas viscosity in kg/(m-s-K).",
            "default": 0,
            "type": "number",
            "format": "double"
          },
          "viscosity_coeff_c": {
            "title": "Viscosity Coeff C",
            "description": "The C coefficient for gas viscosity in kg/(m-s-K2).",
            "default": 0,
            "type": "number",
            "format": "double"
          },
          "specific_heat_coeff_b": {
            "title": "Specific Heat Coeff B",
            "description": "The B coefficient for gas specific heat in J/(kg-K2).",
            "default": 0,
            "type": "number",
            "format": "double"
          },
          "specific_heat_coeff_c": {
            "title": "Specific Heat Coeff C",
            "description": "The C coefficient for gas specific heat in J/(kg-K3).",
            "default": 0,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier",
          "conductivity_coeff_a",
          "viscosity_coeff_a",
          "specific_heat_coeff_a",
          "specific_heat_ratio",
          "molecular_weight"
        ],
        "additionalProperties": false
      },
      "EnergyWindowMaterialGasMixture": {
        "title": "EnergyWindowMaterialGasMixture",
        "description": "Create a mixture of two to four different gases to fill the panes of multiple\npane windows.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "gas_types": {
            "description": "List of gases in the gas mixture.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GasType"
            },
            "minItems": 2,
            "maxItems": 4
          },
          "gas_fractions": {
            "title": "Gas Fractions",
            "description": "A list of fractional numbers describing the volumetric fractions of gas types in the mixture. This list must align with the gas_types list and must sum to 1.",
            "minItems": 2,
            "maxItems": 4,
            "type": "array",
            "items": {
              "type": "number",
              "exclusiveMinimum": 0,
              "exclusiveMaximum": 1,
              "format": "double"
            }
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "EnergyWindowMaterialGasMixture",
            "pattern": "^EnergyWindowMaterialGasMixture$",
            "type": "string",
            "readOnly": true
          },
          "thickness": {
            "title": "Thickness",
            "description": "The thickness of the gas mixture layer in meters.",
            "default": 0.0125,
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier",
          "gas_types",
          "gas_fractions"
        ],
        "additionalProperties": false
      },
      "EnergyWindowFrame": {
        "title": "EnergyWindowFrame",
        "description": "Opaque material representing a layer within an opaque construction.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "width": {
            "title": "Width",
            "description": "Number for the width of frame in plane of window [m]. The frame width is assumed to be the same on all sides of window..",
            "exclusiveMinimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "conductance": {
            "title": "Conductance",
            "description": "Number for the thermal conductance of the frame material measured from inside to outside of the frame surface (no air films) and taking 2D conduction effects into account [W/m2-K].",
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "EnergyWindowFrame",
            "pattern": "^EnergyWindowFrame$",
            "type": "string",
            "readOnly": true
          },
          "edge_to_center_ratio": {
            "title": "Edge To Center Ratio",
            "description": "Number between 0 and 4 for the ratio of the glass conductance near the frame (excluding air films) divided by the glass conductance at the center of the glazing (excluding air films). This is used only for multi-pane glazing constructions. This ratio should usually be greater than 1.0 since the spacer material that separates the glass panes is usually more conductive than the gap between panes. A value of 1 effectively indicates no spacer. Values should usually be obtained from the LBNL WINDOW program so that the unique characteristics of the window construction can be accounted for.",
            "default": 1,
            "exclusiveMinimum": 0,
            "maximum": 4,
            "type": "number",
            "format": "double"
          },
          "outside_projection": {
            "title": "Outside Projection",
            "description": "Number for the distance that the frame projects outward from the outside face of the glazing [m]. This is used to calculate shadowing of frame onto glass, solar absorbed by the frame, IR emitted and absorbed by the frame, and convection from frame.",
            "default": 0,
            "minimum": 0,
            "maximum": 0.5,
            "type": "number",
            "format": "double"
          },
          "inside_projection": {
            "title": "Inside Projection",
            "description": "Number for the distance that the frame projects inward from the inside face of the glazing [m]. This is used to calculate solar absorbed by the frame, IR emitted and absorbed by the frame, and convection from frame.",
            "default": 0,
            "minimum": 0,
            "maximum": 0.5,
            "type": "number",
            "format": "double"
          },
          "thermal_absorptance": {
            "title": "Thermal Absorptance",
            "description": "Fraction of incident long wavelength radiation that is absorbed by the frame material.",
            "default": 0.9,
            "exclusiveMinimum": 0,
            "maximum": 0.99999,
            "type": "number",
            "format": "double"
          },
          "solar_absorptance": {
            "title": "Solar Absorptance",
            "description": "Fraction of incident solar radiation absorbed by the frame material.",
            "default": 0.7,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "visible_absorptance": {
            "title": "Visible Absorptance",
            "description": "Fraction of incident visible wavelength radiation absorbed by the frame material.",
            "default": 0.7,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier",
          "width",
          "conductance"
        ],
        "additionalProperties": false
      },
      "WindowConstruction": {
        "title": "WindowConstruction",
        "description": "Construction for window objects (Aperture, Door).",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "materials": {
            "title": "Materials",
            "description": "List of glazing and gas material definitions. The order of the materials is from exterior to interior. If a SimpleGlazSys material is used, it must be the only material in the construction. For multi-layered constructions, adjacent glass layers must be separated by one and only one gas layer.",
            "minItems": 1,
            "maxItems": 8,
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/EnergyWindowMaterialSimpleGlazSys"
                },
                {
                  "$ref": "#/components/schemas/EnergyWindowMaterialGlazing"
                },
                {
                  "$ref": "#/components/schemas/EnergyWindowMaterialGas"
                },
                {
                  "$ref": "#/components/schemas/EnergyWindowMaterialGasCustom"
                },
                {
                  "$ref": "#/components/schemas/EnergyWindowMaterialGasMixture"
                }
              ]
            }
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "WindowConstruction",
            "pattern": "^WindowConstruction$",
            "type": "string",
            "readOnly": true
          },
          "frame": {
            "title": "Frame",
            "description": "An optional window frame material for the frame that surrounds the window construction.",
            "allOf": [
              {
                "$ref": "#/components/schemas/EnergyWindowFrame"
              }
            ]
          }
        },
        "required": [
          "identifier",
          "materials"
        ],
        "additionalProperties": false
      },
      "EnergyWindowMaterialShade": {
        "title": "EnergyWindowMaterialShade",
        "description": "This object specifies the properties of window shade materials.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "EnergyWindowMaterialShade",
            "pattern": "^EnergyWindowMaterialShade$",
            "type": "string",
            "readOnly": true
          },
          "solar_transmittance": {
            "title": "Solar Transmittance",
            "description": "The transmittance averaged over the solar spectrum. It is assumed independent of incidence angle. Default: 0.4.",
            "default": 0.4,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "solar_reflectance": {
            "title": "Solar Reflectance",
            "description": "The reflectance averaged over the solar spectrum. It us assumed same on both sides of shade and independent of incidence angle. Default value is 0.5",
            "default": 0.5,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "visible_transmittance": {
            "title": "Visible Transmittance",
            "description": "The transmittance averaged over the solar spectrum and weighted by the response of the human eye. It is assumed independent of incidence angle. Default: 0.4.",
            "default": 0.4,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "visible_reflectance": {
            "title": "Visible Reflectance",
            "description": "The transmittance averaged over the solar spectrum and weighted by the response of the human eye. It is assumed independent of incidence angle. Default: 0.4",
            "default": 0.4,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "emissivity": {
            "title": "Emissivity",
            "description": "The effective long-wave infrared hemispherical emissivity. It is assumed same on both sides of shade. Default: 0.9.",
            "default": 0.9,
            "exclusiveMinimum": 0,
            "exclusiveMaximum": 1,
            "type": "number",
            "format": "double"
          },
          "infrared_transmittance": {
            "title": "Infrared Transmittance",
            "description": "The effective long-wave transmittance. It is assumed independent of incidence angle. Default: 0.",
            "default": 0,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "thickness": {
            "title": "Thickness",
            "description": "The thickness of the shade material in meters. Default: 0.005.",
            "default": 0.005,
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          },
          "conductivity": {
            "title": "Conductivity",
            "description": "The conductivity of the shade material in W/(m-K). Default value is 0.1.",
            "default": 0.1,
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          },
          "distance_to_glass": {
            "title": "Distance To Glass",
            "description": "The distance from shade to adjacent glass in meters. Default value is 0.05",
            "default": 0.05,
            "minimum": 0.001,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "top_opening_multiplier": {
            "title": "Top Opening Multiplier",
            "description": "The effective area for air flow at the top of the shade, divided by the horizontal area between glass and shade. Default: 0.5.",
            "default": 0.5,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "bottom_opening_multiplier": {
            "title": "Bottom Opening Multiplier",
            "description": "The effective area for air flow at the bottom of the shade, divided by the horizontal area between glass and shade. Default: 0.5.",
            "default": 0.5,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "left_opening_multiplier": {
            "title": "Left Opening Multiplier",
            "description": "The effective area for air flow at the left side of the shade, divided by the vertical area between glass and shade. Default: 0.5.",
            "default": 0.5,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "right_opening_multiplier": {
            "title": "Right Opening Multiplier",
            "description": "The effective area for air flow at the right side of the shade, divided by the vertical area between glass and shade. Default: 0.5.",
            "default": 0.5,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "airflow_permeability": {
            "title": "Airflow Permeability",
            "description": "The fraction of the shade surface that is open to air flow. If air cannot pass through the shade material, airflow_permeability = 0. Default: 0.",
            "default": 0,
            "minimum": 0,
            "maximum": 0.8,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "SlatOrientation": {
        "title": "SlatOrientation",
        "description": "An enumeration.",
        "enum": [
          "Horizontal",
          "Vertical"
        ],
        "type": "string"
      },
      "EnergyWindowMaterialBlind": {
        "title": "EnergyWindowMaterialBlind",
        "description": "Window blind material consisting of flat, equally-spaced slats.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "EnergyWindowMaterialBlind",
            "pattern": "^EnergyWindowMaterialBlind$",
            "type": "string",
            "readOnly": true
          },
          "slat_orientation": {
            "default": "Horizontal",
            "allOf": [
              {
                "$ref": "#/components/schemas/SlatOrientation"
              }
            ]
          },
          "slat_width": {
            "title": "Slat Width",
            "description": "The width of slat measured from edge to edge in meters.",
            "default": 0.025,
            "exclusiveMinimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "slat_separation": {
            "title": "Slat Separation",
            "description": "The distance between the front of a slat and the back of the adjacent slat in meters.",
            "default": 0.01875,
            "exclusiveMinimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "slat_thickness": {
            "title": "Slat Thickness",
            "description": "The distance between the faces of a slat in meters. The default value is 0.001.",
            "default": 0.001,
            "exclusiveMinimum": 0,
            "maximum": 0.1,
            "type": "number",
            "format": "double"
          },
          "slat_angle": {
            "title": "Slat Angle",
            "description": "The angle (degrees) between the glazing outward normal and the slat outward normal where the outward normal points away from the front face of the slat (degrees). The default value is 45.",
            "default": 45,
            "minimum": 0,
            "maximum": 180,
            "type": "number",
            "format": "double"
          },
          "slat_conductivity": {
            "title": "Slat Conductivity",
            "description": "The thermal conductivity of the slat in W/(m-K). Default: 221.",
            "default": 221,
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          },
          "beam_solar_transmittance": {
            "title": "Beam Solar Transmittance",
            "description": "The beam solar transmittance of the slat, assumed to be independent of angle of incidence on the slat. Any transmitted beam radiation is assumed to be 100% diffuse (i.e., slats are translucent). The default value is 0.",
            "default": 0,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "beam_solar_reflectance": {
            "title": "Beam Solar Reflectance",
            "description": "The beam solar reflectance of the front side of the slat, it is assumed to be independent of the angle of incidence. Default: 0.5.",
            "default": 0.5,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "beam_solar_reflectance_back": {
            "title": "Beam Solar Reflectance Back",
            "description": "The beam solar reflectance of the back side of the slat, it is assumed to be independent of the angle of incidence. Default: 0.5.",
            "default": 0.5,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "diffuse_solar_transmittance": {
            "title": "Diffuse Solar Transmittance",
            "description": "The slat transmittance for hemispherically diffuse solar radiation. Default: 0.",
            "default": 0,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "diffuse_solar_reflectance": {
            "title": "Diffuse Solar Reflectance",
            "description": "The front-side slat reflectance for hemispherically diffuse solar radiation. Default: 0.5.",
            "default": 0.5,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "diffuse_solar_reflectance_back": {
            "title": "Diffuse Solar Reflectance Back",
            "description": "The back-side slat reflectance for hemispherically diffuse solar radiation. Default: 0.5.",
            "default": 0.5,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "beam_visible_transmittance": {
            "title": "Beam Visible Transmittance",
            "description": "The beam visible transmittance of the slat, it is assumed to be independent of the angle of incidence. Default: 0.",
            "default": 0,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "beam_visible_reflectance": {
            "title": "Beam Visible Reflectance",
            "description": "The beam visible reflectance on the front side of the slat, it is assumed to be independent of the angle of incidence. Default: 0.5.",
            "default": 0.5,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "beam_visible_reflectance_back": {
            "title": "Beam Visible Reflectance Back",
            "description": "The beam visible reflectance on the back side of the slat, it is assumed to be independent of the angle of incidence. Default: 0.5.",
            "default": 0.5,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "diffuse_visible_transmittance": {
            "title": "Diffuse Visible Transmittance",
            "description": "The slat transmittance for hemispherically diffuse visible radiation. This value should equal \u201cSlat Beam Visible Transmittance.\u201d",
            "default": 0,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "diffuse_visible_reflectance": {
            "title": "Diffuse Visible Reflectance",
            "description": "The front-side slat reflectance for hemispherically diffuse visible radiation. This value should equal \u201cFront Side Slat Beam Visible Reflectance.\u201d Default: 0.5.",
            "default": 0.5,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "diffuse_visible_reflectance_back": {
            "title": "Diffuse Visible Reflectance Back",
            "description": "The back-side slat reflectance for hemispherically diffuse visible radiation. This value should equal \u201cBack Side Slat Beam Visible Reflectance. Default: 0.5.\u201d",
            "default": 0.5,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "infrared_transmittance": {
            "title": "Infrared Transmittance",
            "description": "The slat infrared hemispherical transmittance. It is zero for solid metallic, wooden or glass slats, but may be non-zero in some cases such as for thin plastic slats. The default value is 0.",
            "default": 0,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "emissivity": {
            "title": "Emissivity",
            "description": "Front side hemispherical emissivity of the slat. Default is 0.9 for most materials. The default value is 0.9.",
            "default": 0.9,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "emissivity_back": {
            "title": "Emissivity Back",
            "description": "Back side hemispherical emissivity of the slat. Default is 0.9 for most materials. The default value is 0.9.",
            "default": 0.9,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "distance_to_glass": {
            "title": "Distance To Glass",
            "description": "The distance from the mid-plane of the blind to the adjacent glass in meters. The default value is 0.05.",
            "default": 0.05,
            "minimum": 0.01,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "top_opening_multiplier": {
            "title": "Top Opening Multiplier",
            "description": "The effective area for air flow at the top of the shade, divided by the horizontal area between glass and shade.",
            "default": 0.5,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "bottom_opening_multiplier": {
            "title": "Bottom Opening Multiplier",
            "description": "The effective area for air flow at the bottom of the shade, divided by the horizontal area between glass and shade.",
            "default": 0.5,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "left_opening_multiplier": {
            "title": "Left Opening Multiplier",
            "description": "The effective area for air flow at the left side of the shade, divided by the vertical area between glass and shade.",
            "default": 0.5,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "right_opening_multiplier": {
            "title": "Right Opening Multiplier",
            "description": "The effective area for air flow at the right side of the shade, divided by the vertical area between glass and shade.",
            "default": 0.5,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "ShadeLocation": {
        "title": "ShadeLocation",
        "description": "Choices for where a shade material is located in a window assembly.",
        "enum": [
          "Interior",
          "Between",
          "Exterior"
        ],
        "type": "string"
      },
      "ControlType": {
        "title": "ControlType",
        "description": "Choices for how the shading device is controlled.",
        "enum": [
          "AlwaysOn",
          "OnIfHighSolarOnWindow",
          "OnIfHighHorizontalSolar",
          "OnIfHighOutdoorAirTemperature",
          "OnIfHighZoneAirTemperature",
          "OnIfHighZoneCooling",
          "OnNightIfLowOutdoorTempAndOffDay",
          "OnNightIfLowInsideTempAndOffDay",
          "OnNightIfHeatingAndOffDay"
        ],
        "type": "string"
      },
      "ScheduleDay": {
        "title": "ScheduleDay",
        "description": "Used to describe the daily schedule for a single simulation day.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "values": {
            "title": "Values",
            "description": "A list of floats or integers for the values of the schedule. The length of this list must match the length of the times list.",
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "ScheduleDay",
            "pattern": "^ScheduleDay$",
            "type": "string",
            "readOnly": true
          },
          "times": {
            "title": "Times",
            "description": "A list of lists with each sub-list possessing 2 values for [hour, minute]. The length of the master list must match the length of the values list. Each time in the master list represents the time of day that the corresponding value begins to take effect. For example [(0,0), (9,0), (17,0)] in combination with the values [0, 1, 0] denotes a schedule value of 0 from 0:00 to 9:00, a value of 1 from 9:00 to 17:00 and 0 from 17:00 to the end of the day. Note that this representation of times as the \"time of beginning\" is a different convention than EnergyPlus, which uses \"time until\".",
            "default": [
              [
                0,
                0
              ]
            ],
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "minItems": 2,
              "maxItems": 2
            }
          },
          "interpolate": {
            "title": "Interpolate",
            "description": "Boolean to note whether values in between times should be linearly interpolated or whether successive values should take effect immediately upon the beginning time corresponding to them.",
            "default": false,
            "type": "boolean"
          }
        },
        "required": [
          "identifier",
          "values"
        ],
        "additionalProperties": false
      },
      "ScheduleRuleAbridged": {
        "title": "ScheduleRuleAbridged",
        "description": "Schedule rule including a ScheduleDay and when it should be applied..",
        "type": "object",
        "properties": {
          "schedule_day": {
            "title": "Schedule Day",
            "description": "The identifier of a ScheduleDay object associated with this rule.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "ScheduleRuleAbridged",
            "pattern": "^ScheduleRuleAbridged$",
            "type": "string",
            "readOnly": true
          },
          "apply_sunday": {
            "title": "Apply Sunday",
            "description": "Boolean noting whether to apply schedule_day on Sundays.",
            "default": false,
            "type": "boolean"
          },
          "apply_monday": {
            "title": "Apply Monday",
            "description": "Boolean noting whether to apply schedule_day on Mondays.",
            "default": false,
            "type": "boolean"
          },
          "apply_tuesday": {
            "title": "Apply Tuesday",
            "description": "Boolean noting whether to apply schedule_day on Tuesdays.",
            "default": false,
            "type": "boolean"
          },
          "apply_wednesday": {
            "title": "Apply Wednesday",
            "description": "Boolean noting whether to apply schedule_day on Wednesdays.",
            "default": false,
            "type": "boolean"
          },
          "apply_thursday": {
            "title": "Apply Thursday",
            "description": "Boolean noting whether to apply schedule_day on Thursdays.",
            "default": false,
            "type": "boolean"
          },
          "apply_friday": {
            "title": "Apply Friday",
            "description": "Boolean noting whether to apply schedule_day on Fridays.",
            "default": false,
            "type": "boolean"
          },
          "apply_saturday": {
            "title": "Apply Saturday",
            "description": "Boolean noting whether to apply schedule_day on Saturdays.",
            "default": false,
            "type": "boolean"
          },
          "start_date": {
            "title": "Start Date",
            "description": "A list of two integers for [month, day], representing the start date of the period over which the schedule_day will be applied.A third integer may be added to denote whether the date should be re-serialized for a leap year (it should be a 1 in this case).",
            "default": [
              1,
              1
            ],
            "minItems": 2,
            "maxItems": 3,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "end_date": {
            "title": "End Date",
            "description": "A list of two integers for [month, day], representing the end date of the period over which the schedule_day will be applied.A third integer may be added to denote whether the date should be re-serialized for a leap year (it should be a 1 in this case).",
            "default": [
              12,
              31
            ],
            "minItems": 2,
            "maxItems": 3,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "required": [
          "schedule_day"
        ],
        "additionalProperties": false
      },
      "NoLimit": {
        "title": "NoLimit",
        "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "NoLimit",
            "pattern": "^NoLimit$",
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ScheduleNumericType": {
        "title": "ScheduleNumericType",
        "description": "Designates how the range values are validated.",
        "enum": [
          "Continuous",
          "Discrete"
        ],
        "type": "string"
      },
      "ScheduleUnitType": {
        "title": "ScheduleUnitType",
        "description": "An enumeration.",
        "enum": [
          "Dimensionless",
          "Temperature",
          "DeltaTemperature",
          "PrecipitationRate",
          "Angle",
          "ConvectionCoefficient",
          "ActivityLevel",
          "Velocity",
          "Capacity",
          "Power",
          "Availability",
          "Percent",
          "Control",
          "Mode"
        ],
        "type": "string"
      },
      "ScheduleTypeLimit": {
        "title": "ScheduleTypeLimit",
        "description": "Specifies the data types and limits for values contained in schedules.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "ScheduleTypeLimit",
            "pattern": "^ScheduleTypeLimit$",
            "type": "string",
            "readOnly": true
          },
          "lower_limit": {
            "title": "Lower Limit",
            "description": "Lower limit for the schedule type or NoLimit.",
            "default": {
              "type": "NoLimit"
            },
            "anyOf": [
              {
                "$ref": "#/components/schemas/NoLimit"
              },
              {
                "type": "number"
              }
            ]
          },
          "upper_limit": {
            "title": "Upper Limit",
            "description": "Upper limit for the schedule type or NoLimit.",
            "default": {
              "type": "NoLimit"
            },
            "anyOf": [
              {
                "$ref": "#/components/schemas/NoLimit"
              },
              {
                "type": "number"
              }
            ]
          },
          "numeric_type": {
            "default": "Continuous",
            "allOf": [
              {
                "$ref": "#/components/schemas/ScheduleNumericType"
              }
            ]
          },
          "unit_type": {
            "default": "Dimensionless",
            "allOf": [
              {
                "$ref": "#/components/schemas/ScheduleUnitType"
              }
            ]
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "ScheduleRuleset": {
        "title": "ScheduleRuleset",
        "description": "Used to define a schedule for a default day, further described by ScheduleRule.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "day_schedules": {
            "title": "Day Schedules",
            "description": "A list of ScheduleDays that are referenced in the other keys of this ScheduleRulesetAbridged.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleDay"
            }
          },
          "default_day_schedule": {
            "title": "Default Day Schedule",
            "description": "An identifier for the ScheduleDay that will be used for all days when no ScheduleRule is applied. This ScheduleDay must be in the day_schedules.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "ScheduleRuleset",
            "pattern": "^ScheduleRuleset$",
            "type": "string",
            "readOnly": true
          },
          "schedule_rules": {
            "title": "Schedule Rules",
            "description": "A list of ScheduleRuleAbridged that note exceptions to the default_day_schedule. These rules should be ordered from highest to lowest priority.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleRuleAbridged"
            }
          },
          "holiday_schedule": {
            "title": "Holiday Schedule",
            "description": "An identifier for the ScheduleDay that will be used for holidays. This ScheduleDay must be in the day_schedules.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "summer_designday_schedule": {
            "title": "Summer Designday Schedule",
            "description": "An identifier for the ScheduleDay that will be used for the summer design day. This ScheduleDay must be in the day_schedules.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "winter_designday_schedule": {
            "title": "Winter Designday Schedule",
            "description": "An identifier for the ScheduleDay that will be used for the winter design day. This ScheduleDay must be in the day_schedules.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "schedule_type_limit": {
            "title": "Schedule Type Limit",
            "description": "ScheduleTypeLimit object that will be used to validate schedule values against upper/lower limits and assign units to the schedule values. If None, no validation will occur.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ScheduleTypeLimit"
              }
            ]
          }
        },
        "required": [
          "identifier",
          "day_schedules",
          "default_day_schedule"
        ],
        "additionalProperties": false
      },
      "ScheduleFixedInterval": {
        "title": "ScheduleFixedInterval",
        "description": "Used to specify a start date and a list of values for a period of analysis.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "values": {
            "title": "Values",
            "description": "A list of timeseries values occurring at each timestep over the course of the simulation.",
            "minItems": 24,
            "maxItems": 527040,
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "ScheduleFixedInterval",
            "pattern": "^ScheduleFixedInterval$",
            "type": "string",
            "readOnly": true
          },
          "schedule_type_limit": {
            "title": "Schedule Type Limit",
            "description": "ScheduleTypeLimit object that will be used to validate schedule values against upper/lower limits and assign units to the schedule values. If None, no validation will occur.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ScheduleTypeLimit"
              }
            ]
          },
          "timestep": {
            "title": "Timestep",
            "description": "An integer for the number of steps per hour that the input values correspond to.  For example, if each value represents 30 minutes, the timestep is 2. For 15 minutes, it is 4.",
            "default": 1,
            "type": "integer",
            "format": "int32"
          },
          "start_date": {
            "title": "Start Date",
            "description": "A list of two integers for [month, day], representing the start date when the schedule values begin to take effect.A third integer may be added to denote whether the date should be re-serialized for a leap year (it should be a 1 in this case).",
            "default": [
              1,
              1
            ],
            "minItems": 2,
            "maxItems": 3,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "placeholder_value": {
            "title": "Placeholder Value",
            "description": " A value that will be used for all times not covered by the input values. Typically, your simulation should not need to use this value if the input values completely cover the simulation period.",
            "default": 0,
            "type": "number",
            "format": "double"
          },
          "interpolate": {
            "title": "Interpolate",
            "description": "Boolean to note whether values in between intervals should be linearly interpolated or whether successive values should take effect immediately upon the beginning time corresponding to them.",
            "default": false,
            "type": "boolean"
          }
        },
        "required": [
          "identifier",
          "values"
        ],
        "additionalProperties": false
      },
      "WindowConstructionShade": {
        "title": "WindowConstructionShade",
        "description": "Construction for window objects (Aperture, Door).",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "window_construction": {
            "title": "Window Construction",
            "description": "A WindowConstruction object that serves as the \"switched off\" version of the construction (aka. the \"bare construction\"). The shade_material and shade_location will be used to modify this starting construction.",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowConstruction"
              }
            ]
          },
          "shade_material": {
            "title": "Shade Material",
            "description": "Identifier of a An EnergyWindowMaterialShade or an EnergyWindowMaterialBlind that serves as the shading layer for this construction. This can also be an EnergyWindowMaterialGlazing, which will indicate that the WindowConstruction has a dynamically-controlled glass pane like an electrochromic window assembly.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/EnergyWindowMaterialShade"
              },
              {
                "$ref": "#/components/schemas/EnergyWindowMaterialBlind"
              },
              {
                "$ref": "#/components/schemas/EnergyWindowMaterialGlazing"
              }
            ]
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "WindowConstructionShade",
            "pattern": "^WindowConstructionShade$",
            "type": "string",
            "readOnly": true
          },
          "shade_location": {
            "description": "Text to indicate where in the window assembly the shade_material is located.  Note that the WindowConstruction must have at least one gas gap to use the \"Between\" option. Also note that, for a WindowConstruction with more than one gas gap, the \"Between\" option defaults to using the inner gap as this is the only option that EnergyPlus supports.",
            "default": "Interior",
            "allOf": [
              {
                "$ref": "#/components/schemas/ShadeLocation"
              }
            ]
          },
          "control_type": {
            "description": "Text to indicate how the shading device is controlled, which determines when the shading is \u201con\u201d or \u201coff.\u201d",
            "default": "AlwaysOn",
            "allOf": [
              {
                "$ref": "#/components/schemas/ControlType"
              }
            ]
          },
          "setpoint": {
            "title": "Setpoint",
            "description": "A number that corresponds to the specified control_type. This can be a value in (W/m2), (C) or (W) depending upon the control type.Note that this value cannot be None for any control type except \"AlwaysOn.\"",
            "type": "number",
            "format": "double"
          },
          "schedule": {
            "title": "Schedule",
            "description": "An optional ScheduleRuleset or ScheduleFixedInterval to be applied on top of the control_type. If None, the control_type will govern all behavior of the construction.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ScheduleRuleset"
              },
              {
                "$ref": "#/components/schemas/ScheduleFixedInterval"
              }
            ]
          }
        },
        "required": [
          "identifier",
          "window_construction",
          "shade_material"
        ],
        "additionalProperties": false
      },
      "WindowConstructionDynamic": {
        "title": "WindowConstructionDynamic",
        "description": "Construction for window objects with an included shade layer.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "constructions": {
            "title": "Constructions",
            "description": "A list of WindowConstruction objects that define the various states that the dynamic window can assume.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WindowConstruction"
            }
          },
          "schedule": {
            "title": "Schedule",
            "description": "A control schedule that dictates which constructions are active at given times throughout the simulation. The values of the schedule should be integers and range from 0 to one less then the number of constructions. Zero indicates that the first construction is active, one indicates that the second on is active, etc. The schedule type limits of this schedule should be \"Control Level.\" If building custom schedule type limits that describe a particular range of states, the type limits should be \"Discrete\" and the unit type should be \"Mode,\" \"Control,\" or some other fractional unit.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ScheduleRuleset"
              },
              {
                "$ref": "#/components/schemas/ScheduleFixedInterval"
              }
            ]
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "WindowConstructionDynamic",
            "pattern": "^WindowConstructionDynamic$",
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "identifier",
          "constructions",
          "schedule"
        ],
        "additionalProperties": false
      },
      "ApertureConstructionSet": {
        "title": "ApertureConstructionSet",
        "description": "A set of constructions for aperture assemblies.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "ApertureConstructionSet",
            "pattern": "^ApertureConstructionSet$",
            "type": "string",
            "readOnly": true
          },
          "interior_construction": {
            "title": "Interior Construction",
            "description": "A WindowConstruction for all apertures with a Surface boundary condition.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/WindowConstruction"
              },
              {
                "$ref": "#/components/schemas/WindowConstructionShade"
              },
              {
                "$ref": "#/components/schemas/WindowConstructionDynamic"
              }
            ]
          },
          "window_construction": {
            "title": "Window Construction",
            "description": "A WindowConstruction for apertures with an Outdoors boundary condition, False is_operable property, and a Wall face type for their parent face.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/WindowConstruction"
              },
              {
                "$ref": "#/components/schemas/WindowConstructionShade"
              },
              {
                "$ref": "#/components/schemas/WindowConstructionDynamic"
              }
            ]
          },
          "skylight_construction": {
            "title": "Skylight Construction",
            "description": "A WindowConstruction for apertures with a Outdoors boundary condition, False is_operable property, and a RoofCeiling or Floor face type for their parent face.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/WindowConstruction"
              },
              {
                "$ref": "#/components/schemas/WindowConstructionShade"
              },
              {
                "$ref": "#/components/schemas/WindowConstructionDynamic"
              }
            ]
          },
          "operable_construction": {
            "title": "Operable Construction",
            "description": "A WindowConstruction for all apertures with an Outdoors boundary condition and True is_operable property.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/WindowConstruction"
              },
              {
                "$ref": "#/components/schemas/WindowConstructionShade"
              },
              {
                "$ref": "#/components/schemas/WindowConstructionDynamic"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "DoorConstructionSet": {
        "title": "DoorConstructionSet",
        "description": "A set of constructions for door assemblies.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "DoorConstructionSet",
            "pattern": "^DoorConstructionSet$",
            "type": "string",
            "readOnly": true
          },
          "interior_construction": {
            "title": "Interior Construction",
            "description": "An OpaqueConstruction for all opaque doors with a Surface boundary condition.",
            "allOf": [
              {
                "$ref": "#/components/schemas/OpaqueConstruction"
              }
            ]
          },
          "exterior_construction": {
            "title": "Exterior Construction",
            "description": "An OpaqueConstruction for opaque doors with an Outdoors boundary condition and a Wall face type for their parent face.",
            "allOf": [
              {
                "$ref": "#/components/schemas/OpaqueConstruction"
              }
            ]
          },
          "overhead_construction": {
            "title": "Overhead Construction",
            "description": "An OpaqueConstruction for opaque doors with an Outdoors boundary condition and a RoofCeiling or Floor type for their parent face.",
            "allOf": [
              {
                "$ref": "#/components/schemas/OpaqueConstruction"
              }
            ]
          },
          "exterior_glass_construction": {
            "title": "Exterior Glass Construction",
            "description": "A WindowConstruction for all glass doors with an Outdoors boundary condition.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/WindowConstruction"
              },
              {
                "$ref": "#/components/schemas/WindowConstructionShade"
              },
              {
                "$ref": "#/components/schemas/WindowConstructionDynamic"
              }
            ]
          },
          "interior_glass_construction": {
            "title": "Interior Glass Construction",
            "description": "A WindowConstruction for all glass doors with a Surface boundary condition.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/WindowConstruction"
              },
              {
                "$ref": "#/components/schemas/WindowConstructionShade"
              },
              {
                "$ref": "#/components/schemas/WindowConstructionDynamic"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "AirBoundaryConstruction": {
        "title": "AirBoundaryConstruction",
        "description": "Construction for Air Boundary objects.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "AirBoundaryConstruction",
            "pattern": "^AirBoundaryConstruction$",
            "type": "string",
            "readOnly": true
          },
          "air_mixing_per_area": {
            "title": "Air Mixing Per Area",
            "description": "A positive number for the amount of air mixing between Rooms across the air boundary surface [m3/s-m2]. Default: 0.1 corresponds to average indoor air speeds of 0.1 m/s (roughly 20 fpm), which is typical of what would be induced by a HVAC system.",
            "default": 0.1,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "air_mixing_schedule": {
            "title": "Air Mixing Schedule",
            "description": "A fractional schedule as a ScheduleRuleset or ScheduleFixedInterval for the air mixing schedule across the construction. If unspecified, an Always On schedule will be assumed.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ScheduleRuleset"
              },
              {
                "$ref": "#/components/schemas/ScheduleFixedInterval"
              }
            ]
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "ConstructionSet": {
        "title": "ConstructionSet",
        "description": "A set of constructions for different surface types and boundary conditions.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "ConstructionSet",
            "pattern": "^ConstructionSet$",
            "type": "string",
            "readOnly": true
          },
          "wall_set": {
            "title": "Wall Set",
            "description": "A WallConstructionSet object for this ConstructionSet.",
            "allOf": [
              {
                "$ref": "#/components/schemas/WallConstructionSet"
              }
            ]
          },
          "floor_set": {
            "title": "Floor Set",
            "description": "A FloorConstructionSet object for this ConstructionSet.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FloorConstructionSet"
              }
            ]
          },
          "roof_ceiling_set": {
            "title": "Roof Ceiling Set",
            "description": "A RoofCeilingConstructionSet object for this ConstructionSet.",
            "allOf": [
              {
                "$ref": "#/components/schemas/RoofCeilingConstructionSet"
              }
            ]
          },
          "aperture_set": {
            "title": "Aperture Set",
            "description": "A ApertureConstructionSet object for this ConstructionSet.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApertureConstructionSet"
              }
            ]
          },
          "door_set": {
            "title": "Door Set",
            "description": "A DoorConstructionSet object for this ConstructionSet.",
            "allOf": [
              {
                "$ref": "#/components/schemas/DoorConstructionSet"
              }
            ]
          },
          "shade_construction": {
            "title": "Shade Construction",
            "description": "A ShadeConstruction to set the reflectance properties of all outdoor shades of all objects to which this ConstructionSet is assigned.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ShadeConstruction"
              }
            ]
          },
          "air_boundary_construction": {
            "title": "Air Boundary Construction",
            "description": "An AirBoundaryConstruction or OpaqueConstruction to set the properties of Faces with an AirBoundary type.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/AirBoundaryConstruction"
              },
              {
                "$ref": "#/components/schemas/OpaqueConstruction"
              }
            ]
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "WindowConstructionShadeAbridged": {
        "title": "WindowConstructionShadeAbridged",
        "description": "Construction for window objects with an included shade layer.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "window_construction": {
            "title": "Window Construction",
            "description": "A WindowConstructionAbridged object that serves as the \"switched off\" version of the construction (aka. the \"bare construction\"). The shade_material and shade_location will be used to modify this starting construction.",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowConstructionAbridged"
              }
            ]
          },
          "shade_material": {
            "title": "Shade Material",
            "description": "Identifier of a An EnergyWindowMaterialShade or an EnergyWindowMaterialBlind that serves as the shading layer for this construction. This can also be an EnergyWindowMaterialGlazing, which will indicate that the WindowConstruction has a dynamically-controlled glass pane like an electrochromic window assembly.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "WindowConstructionShadeAbridged",
            "pattern": "^WindowConstructionShadeAbridged$",
            "type": "string",
            "readOnly": true
          },
          "shade_location": {
            "description": "Text to indicate where in the window assembly the shade_material is located.  Note that the WindowConstruction must have at least one gas gap to use the \"Between\" option. Also note that, for a WindowConstruction with more than one gas gap, the \"Between\" option defaults to using the inner gap as this is the only option that EnergyPlus supports.",
            "default": "Interior",
            "allOf": [
              {
                "$ref": "#/components/schemas/ShadeLocation"
              }
            ]
          },
          "control_type": {
            "description": "Text to indicate how the shading device is controlled, which determines when the shading is \u201con\u201d or \u201coff.\u201d",
            "default": "AlwaysOn",
            "allOf": [
              {
                "$ref": "#/components/schemas/ControlType"
              }
            ]
          },
          "setpoint": {
            "title": "Setpoint",
            "description": "A number that corresponds to the specified control_type. This can be a value in (W/m2), (C) or (W) depending upon the control type.Note that this value cannot be None for any control type except \"AlwaysOn.\"",
            "type": "number",
            "format": "double"
          },
          "schedule": {
            "title": "Schedule",
            "description": "An optional schedule identifier to be applied on top of the control_type. If None, the control_type will govern all behavior of the construction.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "identifier",
          "window_construction",
          "shade_material"
        ],
        "additionalProperties": false
      },
      "WindowConstructionDynamicAbridged": {
        "title": "WindowConstructionDynamicAbridged",
        "description": "Construction for window objects with an included shade layer.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "constructions": {
            "title": "Constructions",
            "description": "A list of WindowConstructionAbridged objects that define the various states that the dynamic window can assume.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WindowConstructionAbridged"
            }
          },
          "schedule": {
            "title": "Schedule",
            "description": "An identifier for a control schedule that dictates which constructions are active at given times throughout the simulation. The values of the schedule should be integers and range from 0 to one less then the number of constructions. Zero indicates that the first construction is active, one indicates that the second on is active, etc. The schedule type limits of this schedule should be \"Control Level.\" If building custom schedule type limits that describe a particular range of states, the type limits should be \"Discrete\" and the unit type should be \"Mode,\" \"Control,\" or some other fractional unit.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "WindowConstructionDynamicAbridged",
            "pattern": "^WindowConstructionDynamicAbridged$",
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "identifier",
          "constructions",
          "schedule"
        ],
        "additionalProperties": false
      },
      "EconomizerType": {
        "title": "EconomizerType",
        "description": "An enumeration.",
        "enum": [
          "NoEconomizer",
          "DifferentialDryBulb",
          "DifferentialEnthalpy"
        ],
        "type": "string"
      },
      "Autosize": {
        "title": "Autosize",
        "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "Autosize",
            "pattern": "^Autosize$",
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IdealAirSystemAbridged": {
        "title": "IdealAirSystemAbridged",
        "description": "Provides a model for an ideal HVAC system.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "IdealAirSystemAbridged",
            "pattern": "^IdealAirSystemAbridged$",
            "type": "string",
            "readOnly": true
          },
          "economizer_type": {
            "description": "Text to indicate the type of air-side economizer used on the ideal air system. Economizers will mix in a greater amount of outdoor air to cool the zone (rather than running the cooling system) when the zone needs cooling and the outdoor air is cooler than the zone.",
            "default": "DifferentialDryBulb",
            "allOf": [
              {
                "$ref": "#/components/schemas/EconomizerType"
              }
            ]
          },
          "demand_controlled_ventilation": {
            "title": "Demand Controlled Ventilation",
            "description": "Boolean to note whether demand controlled ventilation should be used on the system, which will vary the amount of ventilation air according to the occupancy schedule of the zone.",
            "default": false,
            "type": "boolean"
          },
          "sensible_heat_recovery": {
            "title": "Sensible Heat Recovery",
            "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "latent_heat_recovery": {
            "title": "Latent Heat Recovery",
            "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "heating_air_temperature": {
            "title": "Heating Air Temperature",
            "description": "A number for the maximum heating supply air temperature [C].",
            "default": 50,
            "exclusiveMinimum": 0,
            "exclusiveMaximum": 100,
            "type": "number",
            "format": "double"
          },
          "cooling_air_temperature": {
            "title": "Cooling Air Temperature",
            "description": "A number for the minimum cooling supply air temperature [C].",
            "default": 13,
            "exclusiveMinimum": -100,
            "exclusiveMaximum": 50,
            "type": "number",
            "format": "double"
          },
          "heating_limit": {
            "title": "Heating Limit",
            "description": "A number for the maximum heating capacity in Watts. This can also be an Autosize object to indicate that the capacity should be determined during the EnergyPlus sizing calculation. This can also be a NoLimit object to indicate no upper limit to the heating capacity.",
            "default": {
              "type": "Autosize"
            },
            "anyOf": [
              {
                "$ref": "#/components/schemas/Autosize"
              },
              {
                "$ref": "#/components/schemas/NoLimit"
              },
              {
                "type": "number",
                "minimum": 0
              }
            ]
          },
          "cooling_limit": {
            "title": "Cooling Limit",
            "description": "A number for the maximum cooling capacity in Watts. This can also be an Autosize object to indicate that the capacity should be determined during the EnergyPlus sizing calculation. This can also be a NoLimit object to indicate no upper limit to the cooling capacity.",
            "default": {
              "type": "Autosize"
            },
            "anyOf": [
              {
                "$ref": "#/components/schemas/Autosize"
              },
              {
                "$ref": "#/components/schemas/NoLimit"
              },
              {
                "type": "number",
                "minimum": 0
              }
            ]
          },
          "heating_availability": {
            "title": "Heating Availability",
            "description": "An optional identifier of a schedule to set the availability of heating over the course of the simulation.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "cooling_availability": {
            "title": "Cooling Availability",
            "description": "An optional identifier of a schedule to set the availability of cooling over the course of the simulation.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "Vintages": {
        "title": "Vintages",
        "description": "An enumeration.",
        "enum": [
          "ASHRAE_2019",
          "ASHRAE_2016",
          "ASHRAE_2013",
          "ASHRAE_2010",
          "ASHRAE_2007",
          "ASHRAE_2004",
          "DOE_Ref_1980_2004",
          "DOE_Ref_Pre_1980"
        ],
        "type": "string"
      },
      "AllAirEconomizerType": {
        "title": "AllAirEconomizerType",
        "description": "An enumeration.",
        "enum": [
          "NoEconomizer",
          "DifferentialDryBulb",
          "DifferentialEnthalpy",
          "DifferentialDryBulbAndEnthalpy",
          "FixedDryBulb",
          "FixedEnthalpy",
          "ElectronicEnthalpy"
        ],
        "type": "string"
      },
      "VAVEquipmentType": {
        "title": "VAVEquipmentType",
        "description": "An enumeration.",
        "enum": [
          "VAV_Chiller_Boiler",
          "VAV_Chiller_ASHP",
          "VAV_Chiller_DHW",
          "VAV_Chiller_PFP",
          "VAV_Chiller_GasCoil",
          "VAV_ACChiller_Boiler",
          "VAV_ACChiller_ASHP",
          "VAV_ACChiller_DHW",
          "VAV_ACChiller_PFP",
          "VAV_ACChiller_GasCoil",
          "VAV_DCW_Boiler",
          "VAV_DCW_ASHP",
          "VAV_DCW_DHW",
          "VAV_DCW_PFP",
          "VAV_DCW_GasCoil"
        ],
        "type": "string"
      },
      "VAV": {
        "title": "VAV",
        "description": "Variable Air Volume (VAV) HVAC system (aka. System 7 or 8).\n\nAll rooms/zones are connected to a central air loop that is kept at a constant\ncentral temperature of 12.8C (55F). The central temperature is maintained by a\ncooling coil, which runs whenever the combination of return air and fresh outdoor\nair is greater than 12.8C, as well as a heating coil, which runs whenever\nthe combination of return air and fresh outdoor air is less than 12.8C.\n\nEach air terminal for the connected rooms/zones contains its own reheat coil,\nwhich runs whenever the room is not in need of the cooling supplied by the 12.8C\ncentral air.\n\nThe central cooling coil is always a chilled water coil, which is connected to a\nchilled water loop operating at 6.7C (44F). All heating coils are hot water coils\nexcept when Gas Coil equipment_type is used (in which case coils are gas)\nor when Parallel Fan-Powered (PFP) boxes equipment_type is used (in which case\ncoils are electric resistance). Hot water temperature is 82C (180F) for\nboiler/district heating and 49C (120F) when ASHP is used.\n\nVAV systems are the traditional baseline system for commercial buildings\ntaller than 5 stories or larger than 14,000 m2 (150,000 ft2) of floor area.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "vintage": {
            "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
            "default": "ASHRAE_2019",
            "allOf": [
              {
                "$ref": "#/components/schemas/Vintages"
              }
            ]
          },
          "economizer_type": {
            "description": "Text to indicate the type of air-side economizer used on the system (from the AllAirEconomizerType enumeration).",
            "default": "NoEconomizer",
            "allOf": [
              {
                "$ref": "#/components/schemas/AllAirEconomizerType"
              }
            ]
          },
          "sensible_heat_recovery": {
            "title": "Sensible Heat Recovery",
            "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "latent_heat_recovery": {
            "title": "Latent Heat Recovery",
            "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "demand_controlled_ventilation": {
            "title": "Demand Controlled Ventilation",
            "description": "Boolean to note whether demand controlled ventilation should be used on the system, which will vary the amount of ventilation air according to the occupancy schedule of the Rooms.",
            "default": false,
            "type": "boolean"
          },
          "type": {
            "title": "Type",
            "default": "VAV",
            "pattern": "^VAV$",
            "type": "string",
            "readOnly": true
          },
          "equipment_type": {
            "description": "Text for the specific type of system equipment from the VAVEquipmentType enumeration.",
            "default": "VAV_Chiller_Boiler",
            "allOf": [
              {
                "$ref": "#/components/schemas/VAVEquipmentType"
              }
            ]
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "PVAVEquipmentType": {
        "title": "PVAVEquipmentType",
        "description": "An enumeration.",
        "enum": [
          "PVAV_Boiler",
          "PVAV_ASHP",
          "PVAV_DHW",
          "PVAV_PFP",
          "PVAV_BoilerElectricReheat"
        ],
        "type": "string"
      },
      "PVAV": {
        "title": "PVAV",
        "description": "Packaged Variable Air Volume (PVAV) HVAC system (aka. System 5 or 6).\n\nAll rooms/zones are connected to a central air loop that is kept at a constant\ncentral temperature of 12.8C (55F). The central temperature is maintained by a\ncooling coil, which runs whenever the combination of return air and fresh outdoor\nair is greater than 12.8C, as well as a heating coil, which runs whenever\nthe combination of return air and fresh outdoor air is less than 12.8C.\n\nEach air terminal for the connected rooms/zones contains its own reheat coil,\nwhich runs whenever the room is not in need of the cooling supplied by the 12.8C\ncentral air.\n\nThe central cooling coil is always a two-speed direct expansion (DX) coil.\nAll heating coils are hot water coils except when Gas Coil equipment_type is\nused (in which case the central coil is gas and all reheat is electric)\nor when Parallel Fan-Powered (PFP) boxes equipment_type is used (in which case\ncoils are electric resistance). Hot water temperature is 82C (180F) for\nboiler/district heating and 49C (120F) when ASHP is used.\n\nPVAV systems are the traditional baseline system for commercial buildings\nwith than 4-5 stories or between 2,300 m2 and 14,000 m2 (25,000 ft2 and\n150,000 ft2) of floor area.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "vintage": {
            "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
            "default": "ASHRAE_2019",
            "allOf": [
              {
                "$ref": "#/components/schemas/Vintages"
              }
            ]
          },
          "economizer_type": {
            "description": "Text to indicate the type of air-side economizer used on the system (from the AllAirEconomizerType enumeration).",
            "default": "NoEconomizer",
            "allOf": [
              {
                "$ref": "#/components/schemas/AllAirEconomizerType"
              }
            ]
          },
          "sensible_heat_recovery": {
            "title": "Sensible Heat Recovery",
            "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "latent_heat_recovery": {
            "title": "Latent Heat Recovery",
            "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "demand_controlled_ventilation": {
            "title": "Demand Controlled Ventilation",
            "description": "Boolean to note whether demand controlled ventilation should be used on the system, which will vary the amount of ventilation air according to the occupancy schedule of the Rooms.",
            "default": false,
            "type": "boolean"
          },
          "type": {
            "title": "Type",
            "default": "PVAV",
            "pattern": "^PVAV$",
            "type": "string",
            "readOnly": true
          },
          "equipment_type": {
            "description": "Text for the specific type of system equipment from the VAVEquipmentType enumeration.",
            "default": "PVAV_Boiler",
            "allOf": [
              {
                "$ref": "#/components/schemas/PVAVEquipmentType"
              }
            ]
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "PSZEquipmentType": {
        "title": "PSZEquipmentType",
        "description": "An enumeration.",
        "enum": [
          "PSZAC_ElectricBaseboard",
          "PSZAC_BoilerBaseboard",
          "PSZAC_DHWBaseboard",
          "PSZAC_GasHeaters",
          "PSZAC_ElectricCoil",
          "PSZAC_GasCoil",
          "PSZAC_Boiler",
          "PSZAC_ASHP",
          "PSZAC_DHW",
          "PSZAC",
          "PSZAC_DCW_ElectricBaseboard",
          "PSZAC_DCW_BoilerBaseboard",
          "PSZAC_DCW_GasHeaters",
          "PSZAC_DCW_ElectricCoil",
          "PSZAC_DCW_GasCoil",
          "PSZAC_DCW_Boiler",
          "PSZAC_DCW_ASHP",
          "PSZAC_DCW_DHW",
          "PSZAC_DCW",
          "PSZHP"
        ],
        "type": "string"
      },
      "PSZ": {
        "title": "PSZ",
        "description": "Packaged Single-Zone (PSZ) HVAC system (aka. System 3 or 4).\n\nEach room/zone receives its own air loop with its own single-speed direct expansion\n(DX) cooling coil, which will condition the supply air to a value in between\n12.8C (55F) and 50C (122F) depending on the heating/cooling needs of the room/zone.\nAs long as a Baseboard equipment_type is NOT selected, heating will be supplied\nby a heating coil in the air loop. Otherwise, heating is accomplished with\nbaseboards and the air loop only supplies cooling and ventilation air.\nFans are constant volume.\n\nPSZ systems are the traditional baseline system for commercial buildings\nwith less than 4 stories or less than 2,300 m2 (25,000 ft2) of floor area.\nThey are also the default for all retail with less than 3 stories and all public\nassembly spaces.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "vintage": {
            "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
            "default": "ASHRAE_2019",
            "allOf": [
              {
                "$ref": "#/components/schemas/Vintages"
              }
            ]
          },
          "economizer_type": {
            "description": "Text to indicate the type of air-side economizer used on the system (from the AllAirEconomizerType enumeration).",
            "default": "NoEconomizer",
            "allOf": [
              {
                "$ref": "#/components/schemas/AllAirEconomizerType"
              }
            ]
          },
          "sensible_heat_recovery": {
            "title": "Sensible Heat Recovery",
            "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "latent_heat_recovery": {
            "title": "Latent Heat Recovery",
            "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "demand_controlled_ventilation": {
            "title": "Demand Controlled Ventilation",
            "description": "Boolean to note whether demand controlled ventilation should be used on the system, which will vary the amount of ventilation air according to the occupancy schedule of the Rooms.",
            "default": false,
            "type": "boolean"
          },
          "type": {
            "title": "Type",
            "default": "PSZ",
            "pattern": "^PSZ$",
            "type": "string",
            "readOnly": true
          },
          "equipment_type": {
            "description": "Text for the specific type of system equipment from the PVAVEquipmentType enumeration.",
            "default": "PSZAC_ElectricBaseboard",
            "allOf": [
              {
                "$ref": "#/components/schemas/PSZEquipmentType"
              }
            ]
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "PTACEquipmentType": {
        "title": "PTACEquipmentType",
        "description": "An enumeration.",
        "enum": [
          "PTAC_ElectricBaseboard",
          "PTAC_BoilerBaseboard",
          "PTAC_DHWBaseboard",
          "PTAC_GasHeaters",
          "PTAC_ElectricCoil",
          "PTAC_GasCoil",
          "PTAC_Boiler",
          "PTAC_ASHP",
          "PTAC_DHW",
          "PTAC",
          "PTHP"
        ],
        "type": "string"
      },
      "PTAC": {
        "title": "PTAC",
        "description": "Packaged Terminal Air Conditioning (PTAC/HP) HVAC system. (aka. System 1 or 2).\n\nEach room/zone receives its own packaged unit that supplies heating, cooling\nand ventilation. Cooling is always done via a single-speed direct expansion (DX)\ncooling coil. Heating can be done via a heating coil in the unit or via an\nexternal baseboard. Fans are constant volume.\n\nPTAC/HP systems are the traditional baseline system for residential buildings.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "vintage": {
            "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
            "default": "ASHRAE_2019",
            "allOf": [
              {
                "$ref": "#/components/schemas/Vintages"
              }
            ]
          },
          "type": {
            "title": "Type",
            "default": "PTAC",
            "pattern": "^PTAC$",
            "type": "string",
            "readOnly": true
          },
          "equipment_type": {
            "description": "Text for the specific type of system equipment from the PTACEquipmentType enumeration.",
            "default": "PTAC_ElectricBaseboard",
            "allOf": [
              {
                "$ref": "#/components/schemas/PTACEquipmentType"
              }
            ]
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "FurnaceEquipmentType": {
        "title": "FurnaceEquipmentType",
        "description": "An enumeration.",
        "enum": [
          "Furnace",
          "Furnace_Electric"
        ],
        "type": "string"
      },
      "ForcedAirFurnace": {
        "title": "ForcedAirFurnace",
        "description": "Forced Air Furnace HVAC system (aka. System 9 or 10).\n\nForced air furnaces are intended only for spaces only requiring heating and\nventilation. Each room/zone receives its own air loop with its own gas heating\ncoil, which will supply air at a temperature up to 50C (122F) to meet the\nheating needs of the room/zone. Fans are constant volume.\n\nForcedAirFurnace systems are the traditional baseline system for storage\nspaces that only require heating.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "vintage": {
            "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
            "default": "ASHRAE_2019",
            "allOf": [
              {
                "$ref": "#/components/schemas/Vintages"
              }
            ]
          },
          "type": {
            "title": "Type",
            "default": "ForcedAirFurnace",
            "pattern": "^ForcedAirFurnace$",
            "type": "string",
            "readOnly": true
          },
          "equipment_type": {
            "description": "Text for the specific type of system equipment from the FurnaceEquipmentType enumeration.",
            "default": "Furnace",
            "allOf": [
              {
                "$ref": "#/components/schemas/FurnaceEquipmentType"
              }
            ]
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "FCUwithDOASEquipmentType": {
        "title": "FCUwithDOASEquipmentType",
        "description": "An enumeration.",
        "enum": [
          "DOAS_FCU_Chiller_Boiler",
          "DOAS_FCU_Chiller_ASHP",
          "DOAS_FCU_Chiller_DHW",
          "DOAS_FCU_Chiller_ElectricBaseboard",
          "DOAS_FCU_Chiller_GasHeaters",
          "DOAS_FCU_Chiller",
          "DOAS_FCU_ACChiller_Boiler",
          "DOAS_FCU_ACChiller_ASHP",
          "DOAS_FCU_ACChiller_DHW",
          "DOAS_FCU_ACChiller_ElectricBaseboard",
          "DOAS_FCU_ACChiller_GasHeaters",
          "DOAS_FCU_ACChiller",
          "DOAS_FCU_DCW_Boiler",
          "DOAS_FCU_DCW_ASHP",
          "DOAS_FCU_DCW_DHW",
          "DOAS_FCU_DCW_ElectricBaseboard",
          "DOAS_FCU_DCW_GasHeaters",
          "DOAS_FCU_DCW"
        ],
        "type": "string"
      },
      "FCUwithDOASAbridged": {
        "title": "FCUwithDOASAbridged",
        "description": "Fan Coil Unit (FCU) with DOAS HVAC system.\n\nAll rooms/zones in the system are connected to a Dedicated Outdoor Air System\n(DOAS) that supplies a constant volume of ventilation air at the same temperature\nto all rooms/zones. The ventilation air temperature will vary from 21.1C (70F)\nto 15.5C (60F) depending on the outdoor air temperature (the DOAS supplies cooler air\nwhen outdoor conditions are warmer). The ventilation air temperature is maintained\nby a chilled water cooling coil and a heating coil. The heating coil is a hot\nwater coil except when electric baseboards or gas heaters are specified, in\nwhich case the heating coil is a single-speed direct expansion (DX) heat pump\nwith a backup electrical resistance coil.\n\nEach room/zone also receives its own Fan Coil Unit (FCU), which meets the heating\nand cooling loads of the space. The cooling coil in the FCU is always chilled\nwater cooling coil, which is connected to a chilled water loop operating\nat 6.7C (44F). The heating coil is a hot water coil except when when electric\nbaseboards or gas heaters are specified. Hot water temperature is 82C (180F) for\nboiler/district heating and 49C (120F) when ASHP is used.\n\nThe FCU with DOAS template is relatively close in performance to active chilled\nbeams (ACBs). When using this template to represent ACBs, care must be taken\nto ensure that the DOAS ventilation air requirement is sufficient to extract\nthe heating cooling from the ACB. If so, then this FCUwithDOAS template can be\nused but with the energy use of the FCU fans ignored.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "vintage": {
            "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
            "default": "ASHRAE_2019",
            "allOf": [
              {
                "$ref": "#/components/schemas/Vintages"
              }
            ]
          },
          "sensible_heat_recovery": {
            "title": "Sensible Heat Recovery",
            "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "latent_heat_recovery": {
            "title": "Latent Heat Recovery",
            "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "demand_controlled_ventilation": {
            "title": "Demand Controlled Ventilation",
            "description": "Boolean to note whether demand controlled ventilation should be used on the system, which will vary the amount of ventilation air according to the occupancy schedule of the Rooms.",
            "default": false,
            "type": "boolean"
          },
          "doas_availability_schedule": {
            "title": "Doas Availability Schedule",
            "description": "An optional On/Off discrete schedule to set when the dedicated outdoor air system (DOAS) shuts off. This will not only prevent any outdoor air from flowing thorough the system but will also shut off the fans, which can result in more energy savings when spaces served by the DOAS are completely unoccupied. If None, the DOAS will be always on.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "FCUwithDOASAbridged",
            "pattern": "^FCUwithDOASAbridged$",
            "type": "string",
            "readOnly": true
          },
          "equipment_type": {
            "description": "Text for the specific type of system equipment from the FCUwithDOASEquipmentType enumeration.",
            "default": "DOAS_FCU_Chiller_Boiler",
            "allOf": [
              {
                "$ref": "#/components/schemas/FCUwithDOASEquipmentType"
              }
            ]
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "WSHPwithDOASEquipmentType": {
        "title": "WSHPwithDOASEquipmentType",
        "description": "An enumeration.",
        "enum": [
          "DOAS_WSHP_FluidCooler_Boiler",
          "DOAS_WSHP_CoolingTower_Boiler",
          "DOAS_WSHP_GSHP",
          "DOAS_WSHP_DCW_DHW"
        ],
        "type": "string"
      },
      "WSHPwithDOASAbridged": {
        "title": "WSHPwithDOASAbridged",
        "description": "Water Source Heat Pump (WSHP) with DOAS HVAC system.\n\nAll rooms/zones in the system are connected to a Dedicated Outdoor Air System\n(DOAS) that supplies a constant volume of ventilation air at the same temperature\nto all rooms/zones. The ventilation air temperature will vary from 21.1C (70F)\nto 15.5C (60F) depending on the outdoor air temperature (the DOAS supplies cooler air\nwhen outdoor conditions are warmer). The ventilation air temperature is maintained\nby a chilled water cooling coil and a hot water heating coil except when the\nground source heat pump (GSHP) option is selected. In this case, the ventilation\nair temperature is maintained by a two-speed direct expansion (DX) cooling coil\nand a single-speed DX heating coil with backup electrical resistance heat.\n\nEach room/zone also receives its own Water Source Heat Pump (WSHP), which meets\nthe heating and cooling loads of the space. All WSHPs are connected to the\nsame water condenser loop, which has its temperature maintained by the\nequipment_type (eg. Boiler with Cooling Tower).",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "vintage": {
            "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
            "default": "ASHRAE_2019",
            "allOf": [
              {
                "$ref": "#/components/schemas/Vintages"
              }
            ]
          },
          "sensible_heat_recovery": {
            "title": "Sensible Heat Recovery",
            "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "latent_heat_recovery": {
            "title": "Latent Heat Recovery",
            "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "demand_controlled_ventilation": {
            "title": "Demand Controlled Ventilation",
            "description": "Boolean to note whether demand controlled ventilation should be used on the system, which will vary the amount of ventilation air according to the occupancy schedule of the Rooms.",
            "default": false,
            "type": "boolean"
          },
          "doas_availability_schedule": {
            "title": "Doas Availability Schedule",
            "description": "An optional On/Off discrete schedule to set when the dedicated outdoor air system (DOAS) shuts off. This will not only prevent any outdoor air from flowing thorough the system but will also shut off the fans, which can result in more energy savings when spaces served by the DOAS are completely unoccupied. If None, the DOAS will be always on.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "WSHPwithDOASAbridged",
            "pattern": "^WSHPwithDOASAbridged$",
            "type": "string",
            "readOnly": true
          },
          "equipment_type": {
            "description": "Text for the specific type of system equipment from the WSHPwithDOASEquipmentType enumeration.",
            "default": "DOAS_WSHP_FluidCooler_Boiler",
            "allOf": [
              {
                "$ref": "#/components/schemas/WSHPwithDOASEquipmentType"
              }
            ]
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "VRFwithDOASEquipmentType": {
        "title": "VRFwithDOASEquipmentType",
        "description": "An enumeration.",
        "enum": [
          "DOAS_VRF"
        ],
        "type": "string"
      },
      "VRFwithDOASAbridged": {
        "title": "VRFwithDOASAbridged",
        "description": "Variable Refrigerant Flow (VRF) with DOAS HVAC system.\n\nAll rooms/zones in the system are connected to a Dedicated Outdoor Air System\n(DOAS) that supplies a constant volume of ventilation air at the same temperature\nto all rooms/zones. The ventilation air temperature will vary from 21.1C (70F)\nto 15.5C (60F) depending on the outdoor air temperature (the DOAS supplies cooler air\nwhen outdoor conditions are warmer). The ventilation air temperature is maintained\nby a single speed direct expansion (DX) cooling coil along with a single-speed\ndirect expansion (DX) heat pump with a backup electrical resistance coil.\n\nEach room/zone also receives its own Variable Refrigerant Flow (VRF) terminal,\nwhich meets the heating and cooling loads of the space. All room/zone terminals\nare connected to the same outdoor unit, meaning that either all rooms must be\nin cooling or heating mode together.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "vintage": {
            "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
            "default": "ASHRAE_2019",
            "allOf": [
              {
                "$ref": "#/components/schemas/Vintages"
              }
            ]
          },
          "sensible_heat_recovery": {
            "title": "Sensible Heat Recovery",
            "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "latent_heat_recovery": {
            "title": "Latent Heat Recovery",
            "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "demand_controlled_ventilation": {
            "title": "Demand Controlled Ventilation",
            "description": "Boolean to note whether demand controlled ventilation should be used on the system, which will vary the amount of ventilation air according to the occupancy schedule of the Rooms.",
            "default": false,
            "type": "boolean"
          },
          "doas_availability_schedule": {
            "title": "Doas Availability Schedule",
            "description": "An optional On/Off discrete schedule to set when the dedicated outdoor air system (DOAS) shuts off. This will not only prevent any outdoor air from flowing thorough the system but will also shut off the fans, which can result in more energy savings when spaces served by the DOAS are completely unoccupied. If None, the DOAS will be always on.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "VRFwithDOASAbridged",
            "pattern": "^VRFwithDOASAbridged$",
            "type": "string",
            "readOnly": true
          },
          "equipment_type": {
            "description": "Text for the specific type of system equipment from the VRFwithDOASEquipmentType enumeration.",
            "default": "DOAS_VRF",
            "allOf": [
              {
                "$ref": "#/components/schemas/VRFwithDOASEquipmentType"
              }
            ]
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "RadiantwithDOASEquipmentType": {
        "title": "RadiantwithDOASEquipmentType",
        "description": "An enumeration.",
        "enum": [
          "DOAS_Radiant_Chiller_Boiler",
          "DOAS_Radiant_Chiller_ASHP",
          "DOAS_Radiant_Chiller_DHW",
          "DOAS_Radiant_ACChiller_Boiler",
          "DOAS_Radiant_ACChiller_ASHP",
          "DOAS_Radiant_ACChiller_DHW",
          "DOAS_Radiant_DCW_Boiler",
          "DOAS_Radiant_DCW_ASHP",
          "DOAS_Radiant_DCW_DHW"
        ],
        "type": "string"
      },
      "RadiantFaceTypes": {
        "title": "RadiantFaceTypes",
        "description": "An enumeration.",
        "enum": [
          "Floor",
          "Ceiling",
          "FloorWithCarpet",
          "CeilingMetalPanel",
          "FloorWithHardwood"
        ],
        "type": "string"
      },
      "RadiantwithDOASAbridged": {
        "title": "RadiantwithDOASAbridged",
        "description": "Low Temperature Radiant with DOAS HVAC system.\n\nThis HVAC template will change the floor and/or ceiling constructions\nof the Rooms that it is applied to, replacing them with a construction that\naligns with the radiant_type property (eg. CeilingMetalPanel).\n\nAll rooms/zones in the system are connected to a Dedicated Outdoor Air System\n(DOAS) that supplies a constant volume of ventilation air at the same temperature\nto all rooms/zones. The ventilation air temperature will vary from 21.1C (70F)\nto 15.5C (60F) depending on the outdoor air temperature (the DOAS supplies cooler air\nwhen outdoor conditions are warmer). The ventilation air temperature is maintained\nby a two-speed direct expansion (DX) cooling coil and a single-speed DX\nheating coil with backup electrical resistance heat.\n\nThe heating and cooling needs of the space are met with the radiant constructions,\nwhich use chilled water at 12.8C (55F) and a hot water temperature somewhere\nbetween 32.2C (90F) and 49C (120F) (warmer temperatures are used in colder\nclimate zones).\n\nNote that radiant systems are particularly limited in cooling capacity and\nusing them may result in many unmet hours. To reduce unmet hours, one can\nremove carpets, reduce internal loads, reduce solar and envelope gains during\npeak times, add thermal mass, and use an expanded comfort range.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "vintage": {
            "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
            "default": "ASHRAE_2019",
            "allOf": [
              {
                "$ref": "#/components/schemas/Vintages"
              }
            ]
          },
          "sensible_heat_recovery": {
            "title": "Sensible Heat Recovery",
            "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "latent_heat_recovery": {
            "title": "Latent Heat Recovery",
            "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "demand_controlled_ventilation": {
            "title": "Demand Controlled Ventilation",
            "description": "Boolean to note whether demand controlled ventilation should be used on the system, which will vary the amount of ventilation air according to the occupancy schedule of the Rooms.",
            "default": false,
            "type": "boolean"
          },
          "doas_availability_schedule": {
            "title": "Doas Availability Schedule",
            "description": "An optional On/Off discrete schedule to set when the dedicated outdoor air system (DOAS) shuts off. This will not only prevent any outdoor air from flowing thorough the system but will also shut off the fans, which can result in more energy savings when spaces served by the DOAS are completely unoccupied. If None, the DOAS will be always on.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "RadiantwithDOASAbridged",
            "pattern": "^RadiantwithDOASAbridged$",
            "type": "string",
            "readOnly": true
          },
          "equipment_type": {
            "description": "Text for the specific type of system equipment from the RadiantwithDOASEquipmentType enumeration.",
            "default": "DOAS_Radiant_Chiller_Boiler",
            "allOf": [
              {
                "$ref": "#/components/schemas/RadiantwithDOASEquipmentType"
              }
            ]
          },
          "radiant_face_type": {
            "description": "Text to indicate which faces are thermally active by default. Note that this property has no effect when the rooms to which the HVAC system is assigned have constructions with internal source materials. In this case, those constructions will dictate the thermally active surfaces.",
            "default": "Floor",
            "allOf": [
              {
                "$ref": "#/components/schemas/RadiantFaceTypes"
              }
            ]
          },
          "minimum_operation_time": {
            "title": "Minimum Operation Time",
            "description": "A number for the minimum number of hours of operation for the radiant system before it shuts off.",
            "default": 1.0,
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          },
          "switch_over_time": {
            "title": "Switch Over Time",
            "description": "A number for the minimum number of hours for when the system can switch between heating and cooling.",
            "default": 24.0,
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "FCUEquipmentType": {
        "title": "FCUEquipmentType",
        "description": "An enumeration.",
        "enum": [
          "FCU_Chiller_Boiler",
          "FCU_Chiller_ASHP",
          "FCU_Chiller_DHW",
          "FCU_Chiller_ElectricBaseboard",
          "FCU_Chiller_GasHeaters",
          "FCU_Chiller",
          "FCU_ACChiller_Boiler",
          "FCU_ACChiller_ASHP",
          "FCU_ACChiller_DHW",
          "FCU_ACChiller_ElectricBaseboard",
          "FCU_ACChiller_GasHeaters",
          "FCU_ACChiller",
          "FCU_DCW_Boiler",
          "FCU_DCW_ASHP",
          "FCU_DCW_DHW",
          "FCU_DCW_ElectricBaseboard",
          "FCU_DCW_GasHeaters",
          "FCU_DCW"
        ],
        "type": "string"
      },
      "FCU": {
        "title": "FCU",
        "description": "Fan Coil Unit (FCU) heating/cooling system (with no ventilation).\n\nEach room/zone receives its own Fan Coil Unit (FCU), which meets the heating\nand cooling loads of the space. The cooling coil in the FCU is always chilled\nwater cooling coil, which is connected to a chilled water loop operating\nat 6.7C (44F). The heating coil is a hot water coil except when when electric\nbaseboards or gas heaters are specified. Hot water temperature is 82C (180F) for\nboiler/district heating and 49C (120F) when ASHP is used.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "vintage": {
            "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
            "default": "ASHRAE_2019",
            "allOf": [
              {
                "$ref": "#/components/schemas/Vintages"
              }
            ]
          },
          "type": {
            "title": "Type",
            "default": "FCU",
            "pattern": "^FCU$",
            "type": "string",
            "readOnly": true
          },
          "equipment_type": {
            "description": "Text for the specific type of system equipment from the FCUEquipmentType enumeration.",
            "default": "FCU_Chiller_Boiler",
            "allOf": [
              {
                "$ref": "#/components/schemas/FCUEquipmentType"
              }
            ]
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "WSHPEquipmentType": {
        "title": "WSHPEquipmentType",
        "description": "An enumeration.",
        "enum": [
          "WSHP_FluidCooler_Boiler",
          "WSHP_CoolingTower_Boiler",
          "WSHP_GSHP",
          "WSHP_DCW_DHW"
        ],
        "type": "string"
      },
      "WSHP": {
        "title": "WSHP",
        "description": "Water Source Heat Pump (WSHP) heating/cooling system (with no ventilation).\n\nEach room/zone receives its own Water Source Heat Pump (WSHP), which meets\nthe heating and cooling loads of the space. All WSHPs are connected to the\nsame water condenser loop, which has its temperature maintained by the\nequipment_type (eg. Boiler with Cooling Tower).",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "vintage": {
            "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
            "default": "ASHRAE_2019",
            "allOf": [
              {
                "$ref": "#/components/schemas/Vintages"
              }
            ]
          },
          "type": {
            "title": "Type",
            "default": "WSHP",
            "pattern": "^WSHP$",
            "type": "string",
            "readOnly": true
          },
          "equipment_type": {
            "description": "Text for the specific type of system equipment from the WSHPEquipmentType enumeration.",
            "default": "WSHP_FluidCooler_Boiler",
            "allOf": [
              {
                "$ref": "#/components/schemas/WSHPEquipmentType"
              }
            ]
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "VRFEquipmentType": {
        "title": "VRFEquipmentType",
        "description": "An enumeration.",
        "enum": [
          "VRF"
        ],
        "type": "string"
      },
      "VRF": {
        "title": "VRF",
        "description": "Variable Refrigerant Flow (VRF) heating/cooling system (with no ventilation).\n\nEach room/zone receives its own Variable Refrigerant Flow (VRF) terminal,\nwhich meets the heating and cooling loads of the space. All room/zone terminals\nare connected to the same outdoor unit, meaning that either all rooms must be\nin cooling or heating mode together.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "vintage": {
            "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
            "default": "ASHRAE_2019",
            "allOf": [
              {
                "$ref": "#/components/schemas/Vintages"
              }
            ]
          },
          "type": {
            "title": "Type",
            "default": "VRF",
            "pattern": "^VRF$",
            "type": "string",
            "readOnly": true
          },
          "equipment_type": {
            "description": "Text for the specific type of system equipment from the VRFEquipmentType enumeration.",
            "default": "VRF",
            "allOf": [
              {
                "$ref": "#/components/schemas/VRFEquipmentType"
              }
            ]
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "BaseboardEquipmentType": {
        "title": "BaseboardEquipmentType",
        "description": "An enumeration.",
        "enum": [
          "ElectricBaseboard",
          "BoilerBaseboard",
          "ASHPBaseboard",
          "DHWBaseboard"
        ],
        "type": "string"
      },
      "Baseboard": {
        "title": "Baseboard",
        "description": "Baseboard heating system.\n\nBaseboard systems are intended for spaces only requiring heating and\nno ventilation or cooling. Each room/zone will get its own baseboard\nheating unit that satisfies the heating load.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "vintage": {
            "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
            "default": "ASHRAE_2019",
            "allOf": [
              {
                "$ref": "#/components/schemas/Vintages"
              }
            ]
          },
          "type": {
            "title": "Type",
            "default": "Baseboard",
            "pattern": "^Baseboard$",
            "type": "string",
            "readOnly": true
          },
          "equipment_type": {
            "description": "Text for the specific type of system equipment from the BaseboardEquipmentType enumeration.",
            "default": "ElectricBaseboard",
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseboardEquipmentType"
              }
            ]
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "EvaporativeCoolerEquipmentType": {
        "title": "EvaporativeCoolerEquipmentType",
        "description": "An enumeration.",
        "enum": [
          "EvapCoolers_ElectricBaseboard",
          "EvapCoolers_BoilerBaseboard",
          "EvapCoolers_ASHPBaseboard",
          "EvapCoolers_DHWBaseboard",
          "EvapCoolers_Furnace",
          "EvapCoolers_UnitHeaters",
          "EvapCoolers"
        ],
        "type": "string"
      },
      "EvaporativeCooler": {
        "title": "EvaporativeCooler",
        "description": "Direct evaporative cooling systems (with optional heating).\n\nEach room/zone will receive its own air loop sized to meet the sensible load,\nwhich contains an evaporative cooler that directly adds humidity to the room\nair to cool it. The loop contains an outdoor air mixer, which is used whenever\nthe outdoor air has a lower wet bulb temperature than the return air from\nthe room. In the event that the combination of outdoor and room return air\nair is too humid, a backup single-speed direct expansion (DX) cooling coil\nwill be used. Heating loads can be met with various options, including\nseveral types of baseboards, a furnace, or gas unit heaters.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "vintage": {
            "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
            "default": "ASHRAE_2019",
            "allOf": [
              {
                "$ref": "#/components/schemas/Vintages"
              }
            ]
          },
          "type": {
            "title": "Type",
            "default": "EvaporativeCooler",
            "pattern": "^EvaporativeCooler$",
            "type": "string",
            "readOnly": true
          },
          "equipment_type": {
            "description": "Text for the specific type of system equipment from the EvaporativeCoolerEquipmentType enumeration.",
            "default": "EvapCoolers_ElectricBaseboard",
            "allOf": [
              {
                "$ref": "#/components/schemas/EvaporativeCoolerEquipmentType"
              }
            ]
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "ResidentialEquipmentType": {
        "title": "ResidentialEquipmentType",
        "description": "An enumeration.",
        "enum": [
          "ResidentialAC_ElectricBaseboard",
          "ResidentialAC_BoilerBaseboard",
          "ResidentialAC_ASHPBaseboard",
          "ResidentialAC_DHWBaseboard",
          "ResidentialAC_ResidentialFurnace",
          "ResidentialAC",
          "ResidentialHP",
          "ResidentialHPNoCool",
          "ResidentialFurnace"
        ],
        "type": "string"
      },
      "Residential": {
        "title": "Residential",
        "description": "Residential Air Conditioning, Heat Pump or Furnace system.\n\nResidential HVAC systems are intended primarily for single-family homes and\ninclude a wide variety of options. In all cases, each room/zone will receive\nits own air loop WITHOUT an outdoor air inlet (air is simply being recirculated\nthrough the loop). Residential air conditioning (AC) systems are modeled\nusing a unitary system with a single-speed direct expansion (DX) cooling\ncoil in the loop. Residential heat pump (HP) systems use a single-speed DX\nheating coil in the unitary system and the residential furnace option uses\na gas coil in the unitary system. In all cases, the properties of these coils\nare set to reflect a typical residential system.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "vintage": {
            "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
            "default": "ASHRAE_2019",
            "allOf": [
              {
                "$ref": "#/components/schemas/Vintages"
              }
            ]
          },
          "type": {
            "title": "Type",
            "default": "Residential",
            "pattern": "^Residential$",
            "type": "string",
            "readOnly": true
          },
          "equipment_type": {
            "description": "Text for the specific type of system equipment from the ResidentialEquipmentType enumeration.",
            "default": "ResidentialAC_ElectricBaseboard",
            "allOf": [
              {
                "$ref": "#/components/schemas/ResidentialEquipmentType"
              }
            ]
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "WindowACEquipmentType": {
        "title": "WindowACEquipmentType",
        "description": "An enumeration.",
        "enum": [
          "WindowAC_ElectricBaseboard",
          "WindowAC_BoilerBaseboard",
          "WindowAC_ASHPBaseboard",
          "WindowAC_DHWBaseboard",
          "WindowAC_Furnace",
          "WindowAC_GasHeaters",
          "WindowAC"
        ],
        "type": "string"
      },
      "WindowAC": {
        "title": "WindowAC",
        "description": "Window Air Conditioning cooling system (with optional heating).\n\nEach room/zone will receive its own Packaged Terminal Air Conditioner (PTAC)\nwith properties set to reflect a typical window air conditioning (AC) unit.\nNo ventilation air is supplied by the unit and the cooling coil within the\nunit is a single-speed direct expansion (DX) cooling coil. Heating loads\ncan be met with various options, including several types of baseboards,\na furnace, or gas unit heaters.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "vintage": {
            "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
            "default": "ASHRAE_2019",
            "allOf": [
              {
                "$ref": "#/components/schemas/Vintages"
              }
            ]
          },
          "type": {
            "title": "Type",
            "default": "WindowAC",
            "pattern": "^WindowAC$",
            "type": "string",
            "readOnly": true
          },
          "equipment_type": {
            "description": "Text for the specific type of system equipment from the WindowACEquipmentType enumeration.",
            "default": "WindowAC_ElectricBaseboard",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowACEquipmentType"
              }
            ]
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "GasUnitHeaterEquipmentType": {
        "title": "GasUnitHeaterEquipmentType",
        "description": "An enumeration.",
        "enum": [
          "GasHeaters"
        ],
        "type": "string"
      },
      "GasUnitHeater": {
        "title": "GasUnitHeater",
        "description": "Gas unit heating system.\n\nGas unit systems are intended for spaces only requiring heating and no\nventilation or cooling. Each room/zone will get its own gaa heating unit\nthat satisfies the heating load.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "vintage": {
            "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
            "default": "ASHRAE_2019",
            "allOf": [
              {
                "$ref": "#/components/schemas/Vintages"
              }
            ]
          },
          "type": {
            "title": "Type",
            "default": "GasUnitHeater",
            "pattern": "^GasUnitHeater$",
            "type": "string",
            "readOnly": true
          },
          "equipment_type": {
            "description": "Text for the specific type of system equipment from the GasUnitHeaterEquipmentType enumeration.",
            "default": "GasHeaters",
            "allOf": [
              {
                "$ref": "#/components/schemas/GasUnitHeaterEquipmentType"
              }
            ]
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "RadiantEquipmentType": {
        "title": "RadiantEquipmentType",
        "description": "An enumeration.",
        "enum": [
          "Radiant_Chiller_Boiler",
          "Radiant_Chiller_ASHP",
          "Radiant_Chiller_DHW",
          "Radiant_ACChiller_Boiler",
          "Radiant_ACChiller_ASHP",
          "Radiant_ACChiller_DHW",
          "Radiant_DCW_Boiler",
          "Radiant_DCW_ASHP",
          "Radiant_DCW_DHW"
        ],
        "type": "string"
      },
      "Radiant": {
        "title": "Radiant",
        "description": "Low temperature radiant HVAC system.\n\nThis HVAC template will change the floor and/or ceiling constructions\nof the Rooms that it is applied to, replacing them with a construction that\naligns with the radiant_type property (eg. CeilingMetalPanel).\n\nThe heating and cooling needs of the space are met with the radiant constructions,\nwhich use chilled water at 12.8C (55F) and a hot water temperature somewhere\nbetween 32.2C (90F) and 49C (120F) (warmer temperatures are used in colder\nclimate zones).\n\nNote that radiant systems are particularly limited in cooling capacity and\nusing them may result in many unmet hours. To reduce unmet hours, one can\nremove carpets, reduce internal loads, reduce solar and envelope gains during\npeak times, add thermal mass, and use an expanded comfort range.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "vintage": {
            "description": "Text for the vintage of the template system. This will be used to set efficiencies for various pieces of equipment within the system. Further information about these defaults can be found in the version of ASHRAE 90.1 corresponding to the selected vintage. Read-only versions of the standard can be found at: https://www.ashrae.org/technical-resources/standards-and-guidelines/read-only-versions-of-ashrae-standards",
            "default": "ASHRAE_2019",
            "allOf": [
              {
                "$ref": "#/components/schemas/Vintages"
              }
            ]
          },
          "type": {
            "title": "Type",
            "default": "Radiant",
            "pattern": "^Radiant$",
            "type": "string",
            "readOnly": true
          },
          "equipment_type": {
            "description": "Text for the specific type of system equipment from the RadiantEquipmentType enumeration.",
            "default": "Radiant_Chiller_Boiler",
            "allOf": [
              {
                "$ref": "#/components/schemas/RadiantEquipmentType"
              }
            ]
          },
          "radiant_face_type": {
            "description": "Text to indicate which faces are thermally active by default. Note that this property has no effect when the rooms to which the HVAC system is assigned have constructions with internal source materials. In this case, those constructions will dictate the thermally active surfaces.",
            "default": "Floor",
            "allOf": [
              {
                "$ref": "#/components/schemas/RadiantFaceTypes"
              }
            ]
          },
          "minimum_operation_time": {
            "title": "Minimum Operation Time",
            "description": "A number for the minimum number of hours of operation for the radiant system before it shuts off.",
            "default": 1.0,
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          },
          "switch_over_time": {
            "title": "Switch Over Time",
            "description": "A number for the minimum number of hours for when the system can switch between heating and cooling.",
            "default": 24.0,
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "DetailedHVAC": {
        "title": "DetailedHVAC",
        "description": "Detailed HVAC system object defined using IronBug or OpenStudio .NET bindings.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "specification": {
            "title": "Specification",
            "description": "A JSON-serializable dictionary representing the full specification of the detailed system. This can be obtained by calling the ToJson() method on any IronBug HVAC system and then serializing the resulting JSON string into a Python dictionary using the native Python json package. Note that the Rooms that the HVAC is assigned to must be specified as ThermalZones under this specification in order for the resulting Model this HVAC is a part of to be valid.",
            "type": "object"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "DetailedHVAC",
            "pattern": "^DetailedHVAC$",
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "identifier",
          "specification"
        ],
        "additionalProperties": false
      },
      "SHWEquipmentType": {
        "title": "SHWEquipmentType",
        "description": "An enumeration.",
        "enum": [
          "Gas_WaterHeater",
          "Electric_WaterHeater",
          "HeatPump_WaterHeater",
          "Gas_TanklessHeater",
          "Electric_TanklessHeater"
        ],
        "type": "string"
      },
      "SHWSystem": {
        "title": "SHWSystem",
        "description": "Provides a model for a Service Hot Water system.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "SHWSystem",
            "pattern": "^SHWSystem$",
            "type": "string",
            "readOnly": true
          },
          "equipment_type": {
            "description": "Text to indicate the type of air-side economizer used on the ideal air system. Economizers will mix in a greater amount of outdoor air to cool the zone (rather than running the cooling system) when the zone needs cooling and the outdoor air is cooler than the zone.",
            "default": "Gas_WaterHeater",
            "allOf": [
              {
                "$ref": "#/components/schemas/SHWEquipmentType"
              }
            ]
          },
          "heater_efficiency": {
            "title": "Heater Efficiency",
            "description": "A number for the efficiency of the heater within the system. For Gas systems, this is the efficiency of the burner. For HeatPump systems, this is the rated COP of the system. For electric systems, this should usually be set to 1. If set to Autocalculate, this value will automatically be set based on the equipment_type. Gas_WaterHeater - 0.8, Electric_WaterHeater - 1.0, HeatPump_WaterHeater - 3.5, Gas_TanklessHeater - 0.8, Electric_TanklessHeater - 1.0.",
            "default": {
              "type": "Autocalculate"
            },
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0
              },
              {
                "$ref": "#/components/schemas/Autocalculate"
              }
            ]
          },
          "ambient_condition": {
            "title": "Ambient Condition",
            "description": "A number for the ambient temperature in which the hot water tank is located [C]. This can also be the identifier of a Room in which the tank is located.",
            "default": 22,
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ]
          },
          "ambient_loss_coefficient": {
            "title": "Ambient Loss Coefficient",
            "description": "A number for the loss of heat from the water heater tank to the surrounding ambient conditions [W/K].",
            "default": 6,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "ProgramTypeAbridged": {
        "title": "ProgramTypeAbridged",
        "description": "Base class for all objects requiring an EnergyPlus identifier and user_data.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "ProgramTypeAbridged",
            "pattern": "^ProgramTypeAbridged$",
            "type": "string",
            "readOnly": true
          },
          "people": {
            "title": "People",
            "description": "People to describe the occupancy of the program. If None, no occupancy will be assumed for the program.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PeopleAbridged"
              }
            ]
          },
          "lighting": {
            "title": "Lighting",
            "description": "Lighting to describe the lighting usage of the program. If None, no lighting will be assumed for the program.",
            "allOf": [
              {
                "$ref": "#/components/schemas/LightingAbridged"
              }
            ]
          },
          "electric_equipment": {
            "title": "Electric Equipment",
            "description": "ElectricEquipment to describe the usage of electric equipment within the program. If None, no electric equipment will be assumed.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ElectricEquipmentAbridged"
              }
            ]
          },
          "gas_equipment": {
            "title": "Gas Equipment",
            "description": "GasEquipment to describe the usage of gas equipment within the program. If None, no gas equipment will be assumed.",
            "allOf": [
              {
                "$ref": "#/components/schemas/GasEquipmentAbridged"
              }
            ]
          },
          "service_hot_water": {
            "title": "Service Hot Water",
            "description": "ServiceHotWater object to describe the usage of hot water within the program. If None, no hot water will be assumed.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceHotWaterAbridged"
              }
            ]
          },
          "infiltration": {
            "title": "Infiltration",
            "description": "Infiltration to describe the outdoor air leakage of the program. If None, no infiltration will be assumed for the program.",
            "allOf": [
              {
                "$ref": "#/components/schemas/InfiltrationAbridged"
              }
            ]
          },
          "ventilation": {
            "title": "Ventilation",
            "description": "Ventilation to describe the minimum outdoor air requirement of the program. If None, no ventilation requirement will be assumed.",
            "allOf": [
              {
                "$ref": "#/components/schemas/VentilationAbridged"
              }
            ]
          },
          "setpoint": {
            "title": "Setpoint",
            "description": "Setpoint object to describe the temperature and humidity setpoints of the program.  If None, the ProgramType cannot be assigned to a Room that is conditioned.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SetpointAbridged"
              }
            ]
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "People": {
        "title": "People",
        "description": "Base class for all objects requiring an EnergyPlus identifier and user_data.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "people_per_area": {
            "title": "People Per Area",
            "description": "People per floor area expressed as [people/m2]",
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "occupancy_schedule": {
            "title": "Occupancy Schedule",
            "description": "A schedule for the occupancy over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the people_per_area to yield a complete occupancy profile.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ScheduleRuleset"
              },
              {
                "$ref": "#/components/schemas/ScheduleFixedInterval"
              }
            ]
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "People",
            "pattern": "^People$",
            "type": "string",
            "readOnly": true
          },
          "activity_schedule": {
            "title": "Activity Schedule",
            "description": "A schedule for the activity of the occupants over the course of the year. The type of this schedule should be ActivityLevel and the values of the schedule equal to the number of Watts given off by an individual person in the room. If None, a default constant schedule with 120 Watts per person will be used, which is typical of awake, adult humans who are seated.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ScheduleRuleset"
              },
              {
                "$ref": "#/components/schemas/ScheduleFixedInterval"
              }
            ]
          },
          "radiant_fraction": {
            "title": "Radiant Fraction",
            "description": "The radiant fraction of sensible heat released by people. (Default: 0.3).",
            "default": 0.3,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "latent_fraction": {
            "title": "Latent Fraction",
            "description": "Number for the latent fraction of heat gain due to people or an Autocalculate object.",
            "default": {
              "type": "Autocalculate"
            },
            "anyOf": [
              {
                "$ref": "#/components/schemas/Autocalculate"
              },
              {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              }
            ]
          }
        },
        "required": [
          "identifier",
          "people_per_area",
          "occupancy_schedule"
        ],
        "additionalProperties": false
      },
      "Lighting": {
        "title": "Lighting",
        "description": "Base class for all objects requiring an EnergyPlus identifier and user_data.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "watts_per_area": {
            "title": "Watts Per Area",
            "description": "Lighting per floor area as [W/m2].",
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "schedule": {
            "title": "Schedule",
            "description": "The schedule for the use of lights over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the watts_per_area to yield a complete lighting profile.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ScheduleRuleset"
              },
              {
                "$ref": "#/components/schemas/ScheduleFixedInterval"
              }
            ]
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "Lighting",
            "pattern": "^Lighting$",
            "type": "string",
            "readOnly": true
          },
          "visible_fraction": {
            "title": "Visible Fraction",
            "description": "The fraction of heat from lights that goes into the zone as visible (short-wave) radiation. (Default: 0.25).",
            "default": 0.25,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "radiant_fraction": {
            "title": "Radiant Fraction",
            "description": "The fraction of heat from lights that is long-wave radiation. (Default: 0.32).",
            "default": 0.32,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "return_air_fraction": {
            "title": "Return Air Fraction",
            "description": "The fraction of the heat from lights that goes into the zone return air. (Default: 0).",
            "default": 0.0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "baseline_watts_per_area": {
            "title": "Baseline Watts Per Area",
            "description": "The baseline lighting power density in [W/m2] of floor area. This baseline is useful to track how much better the installed lights are in comparison to a standard like ASHRAE 90.1. If set to None, it will default to 11.84029 W/m2, which is that ASHRAE 90.1-2004 baseline for an office.",
            "default": 11.84029,
            "minimum": 0,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier",
          "watts_per_area",
          "schedule"
        ],
        "additionalProperties": false
      },
      "ElectricEquipment": {
        "title": "ElectricEquipment",
        "description": "Base class for all objects requiring an EnergyPlus identifier and user_data.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "watts_per_area": {
            "title": "Watts Per Area",
            "description": "Equipment level per floor area as [W/m2].",
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "schedule": {
            "title": "Schedule",
            "description": "The schedule for the use of equipment over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the watts_per_area to yield a complete equipment profile.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ScheduleRuleset"
              },
              {
                "$ref": "#/components/schemas/ScheduleFixedInterval"
              }
            ]
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "radiant_fraction": {
            "title": "Radiant Fraction",
            "description": "Number for the amount of long-wave radiation heat given off by equipment. Default value is 0.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "latent_fraction": {
            "title": "Latent Fraction",
            "description": "Number for the amount of latent heat given off by equipment. Default value is 0.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "lost_fraction": {
            "title": "Lost Fraction",
            "description": "Number for the amount of \u201clost\u201d heat being given off by equipment. The default value is 0.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "type": {
            "title": "Type",
            "default": "ElectricEquipment",
            "pattern": "^ElectricEquipment$",
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "identifier",
          "watts_per_area",
          "schedule"
        ],
        "additionalProperties": false
      },
      "GasEquipment": {
        "title": "GasEquipment",
        "description": "Base class for all objects requiring an EnergyPlus identifier and user_data.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "watts_per_area": {
            "title": "Watts Per Area",
            "description": "Equipment level per floor area as [W/m2].",
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "schedule": {
            "title": "Schedule",
            "description": "The schedule for the use of equipment over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the watts_per_area to yield a complete equipment profile.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ScheduleRuleset"
              },
              {
                "$ref": "#/components/schemas/ScheduleFixedInterval"
              }
            ]
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "radiant_fraction": {
            "title": "Radiant Fraction",
            "description": "Number for the amount of long-wave radiation heat given off by equipment. Default value is 0.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "latent_fraction": {
            "title": "Latent Fraction",
            "description": "Number for the amount of latent heat given off by equipment. Default value is 0.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "lost_fraction": {
            "title": "Lost Fraction",
            "description": "Number for the amount of \u201clost\u201d heat being given off by equipment. The default value is 0.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "type": {
            "title": "Type",
            "default": "GasEquipment",
            "pattern": "^GasEquipment$",
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "identifier",
          "watts_per_area",
          "schedule"
        ],
        "additionalProperties": false
      },
      "ServiceHotWater": {
        "title": "ServiceHotWater",
        "description": "Base class for all objects requiring an EnergyPlus identifier and user_data.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "flow_per_area": {
            "title": "Flow Per Area",
            "description": "Number for the total volume flow rate of water per unit area of floor [L/h-m2].",
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "schedule": {
            "title": "Schedule",
            "description": "The schedule for the use of hot water over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the flow_per_area to yield a complete water usage profile.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ScheduleRuleset"
              },
              {
                "$ref": "#/components/schemas/ScheduleFixedInterval"
              }
            ]
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "ServiceHotWater",
            "pattern": "^ServiceHotWater$",
            "type": "string",
            "readOnly": true
          },
          "target_temperature": {
            "title": "Target Temperature",
            "description": "Number for the target temperature of water out of the tap (C). This the temperature after hot water has been mixed with cold water from the water mains. The default is 60C, which essentially assumes that the flow_per_area on this object is only for water straight out of the water heater.",
            "default": 60,
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          },
          "sensible_fraction": {
            "title": "Sensible Fraction",
            "description": "A number between 0 and 1 for the fraction of the total hot water load given off as sensible heat in the zone.",
            "default": 0.2,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "latent_fraction": {
            "title": "Latent Fraction",
            "description": "A number between 0 and 1 for the fraction of the total hot water load that is latent.",
            "default": 0.05,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier",
          "flow_per_area",
          "schedule"
        ],
        "additionalProperties": false
      },
      "Infiltration": {
        "title": "Infiltration",
        "description": "Base class for all objects requiring an EnergyPlus identifier and user_data.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "flow_per_exterior_area": {
            "title": "Flow Per Exterior Area",
            "description": "Number for the infiltration per exterior surface area in m3/s-m2.",
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "schedule": {
            "title": "Schedule",
            "description": "The schedule for the infiltration over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the flow_per_exterior_area to yield a complete infiltration profile.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ScheduleRuleset"
              },
              {
                "$ref": "#/components/schemas/ScheduleFixedInterval"
              }
            ]
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "Infiltration",
            "pattern": "^Infiltration$",
            "type": "string",
            "readOnly": true
          },
          "constant_coefficient": {
            "title": "Constant Coefficient",
            "default": 1,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "temperature_coefficient": {
            "title": "Temperature Coefficient",
            "default": 0,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "velocity_coefficient": {
            "title": "Velocity Coefficient",
            "default": 0,
            "minimum": 0,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier",
          "flow_per_exterior_area",
          "schedule"
        ],
        "additionalProperties": false
      },
      "Ventilation": {
        "title": "Ventilation",
        "description": "Base class for all objects requiring an EnergyPlus identifier and user_data.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "Ventilation",
            "pattern": "^Ventilation$",
            "type": "string",
            "readOnly": true
          },
          "flow_per_person": {
            "title": "Flow Per Person",
            "description": "Intensity of ventilation in[] m3/s per person]. Note that setting this value does not mean that ventilation is varied based on real-time occupancy but rather that the design level of ventilation is determined using this value and the People object of the Room.",
            "default": 0,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "flow_per_area": {
            "title": "Flow Per Area",
            "description": "Intensity of ventilation in [m3/s per m2 of floor area].",
            "default": 0,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "air_changes_per_hour": {
            "title": "Air Changes Per Hour",
            "description": "Intensity of ventilation in air changes per hour (ACH) for the entire Room.",
            "default": 0,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "flow_per_zone": {
            "title": "Flow Per Zone",
            "description": "Intensity of ventilation in m3/s for the entire Room.",
            "default": 0,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "schedule": {
            "title": "Schedule",
            "description": "Schedule for the ventilation over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the total design flow rate (determined from the sum of the other 4 fields) to yield a complete ventilation profile.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ScheduleRuleset"
              },
              {
                "$ref": "#/components/schemas/ScheduleFixedInterval"
              }
            ]
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "Setpoint": {
        "title": "Setpoint",
        "description": "Used to specify information about the setpoint schedule.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "cooling_schedule": {
            "title": "Cooling Schedule",
            "description": "Schedule for the cooling setpoint. The values in this schedule should be temperature in [C].",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ScheduleRuleset"
              },
              {
                "$ref": "#/components/schemas/ScheduleFixedInterval"
              }
            ]
          },
          "heating_schedule": {
            "title": "Heating Schedule",
            "description": "Schedule for the heating setpoint. The values in this schedule should be temperature in [C].",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ScheduleRuleset"
              },
              {
                "$ref": "#/components/schemas/ScheduleFixedInterval"
              }
            ]
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "Setpoint",
            "pattern": "^Setpoint$",
            "type": "string",
            "readOnly": true
          },
          "humidifying_schedule": {
            "title": "Humidifying Schedule",
            "description": "Schedule for the humidification setpoint. The values in this schedule should be in [%].",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ScheduleRuleset"
              },
              {
                "$ref": "#/components/schemas/ScheduleFixedInterval"
              }
            ]
          },
          "dehumidifying_schedule": {
            "title": "Dehumidifying Schedule",
            "description": "Schedule for the dehumidification setpoint. The values in this schedule should be in [%].",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ScheduleRuleset"
              },
              {
                "$ref": "#/components/schemas/ScheduleFixedInterval"
              }
            ]
          },
          "setpoint_cutout_difference": {
            "title": "Setpoint Cutout Difference",
            "description": "An optional positive number for the temperature difference between the cutout temperature and the setpoint temperature. Specifying a non-zero number here is useful for modeling the throttling range associated with a given setup of setpoint controls and HVAC equipment. Throttling ranges describe the range where a zone is slightly over-cooled or over-heated beyond the thermostat setpoint. They are used to avoid situations where HVAC systems turn on only to turn off a few minutes later, thereby wearing out the parts of mechanical systems faster. They can have a minor impact on energy consumption and can often have significant impacts on occupant thermal comfort, though using the default value of zero will often yield results that are close enough when trying to estimate the annual heating/cooling energy use. Specifying a value of zero effectively assumes that the system will turn on whenever conditions are outside the setpoint range and will cut out as soon as the setpoint is reached.",
            "default": 0,
            "minimum": 0,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier",
          "cooling_schedule",
          "heating_schedule"
        ],
        "additionalProperties": false
      },
      "ProgramType": {
        "title": "ProgramType",
        "description": "Base class for all objects requiring an EnergyPlus identifier and user_data.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "ProgramType",
            "pattern": "^ProgramType$",
            "type": "string",
            "readOnly": true
          },
          "people": {
            "title": "People",
            "description": "People to describe the occupancy of the program. If None, no occupancy will be assumed for the program.",
            "allOf": [
              {
                "$ref": "#/components/schemas/People"
              }
            ]
          },
          "lighting": {
            "title": "Lighting",
            "description": "Lighting to describe the lighting usage of the program. If None, no lighting will be assumed for the program.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Lighting"
              }
            ]
          },
          "electric_equipment": {
            "title": "Electric Equipment",
            "description": "ElectricEquipment to describe the usage of electric equipment within the program. If None, no electric equipment will be assumed.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ElectricEquipment"
              }
            ]
          },
          "gas_equipment": {
            "title": "Gas Equipment",
            "description": "GasEquipment to describe the usage of gas equipment within the program. If None, no gas equipment will be assumed.",
            "allOf": [
              {
                "$ref": "#/components/schemas/GasEquipment"
              }
            ]
          },
          "service_hot_water": {
            "title": "Service Hot Water",
            "description": "ServiceHotWater object to describe the usage of hot water within the program. If None, no hot water will be assumed.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceHotWater"
              }
            ]
          },
          "infiltration": {
            "title": "Infiltration",
            "description": "Infiltration to describe the outdoor air leakage of the program. If None, no infiltration will be assumed for the program.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Infiltration"
              }
            ]
          },
          "ventilation": {
            "title": "Ventilation",
            "description": "Ventilation to describe the minimum outdoor air requirement of the program. If None, no ventilation requirement will be assumed.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Ventilation"
              }
            ]
          },
          "setpoint": {
            "title": "Setpoint",
            "description": "Setpoint object to describe the temperature and humidity setpoints of the program.  If None, the ProgramType cannot be assigned to a Room that is conditioned.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Setpoint"
              }
            ]
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "ScheduleRulesetAbridged": {
        "title": "ScheduleRulesetAbridged",
        "description": "Used to define a schedule for a default day, further described by ScheduleRule.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "day_schedules": {
            "title": "Day Schedules",
            "description": "A list of ScheduleDays that are referenced in the other keys of this ScheduleRulesetAbridged.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleDay"
            }
          },
          "default_day_schedule": {
            "title": "Default Day Schedule",
            "description": "An identifier for the ScheduleDay that will be used for all days when no ScheduleRule is applied. This ScheduleDay must be in the day_schedules.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "ScheduleRulesetAbridged",
            "pattern": "^ScheduleRulesetAbridged$",
            "type": "string",
            "readOnly": true
          },
          "schedule_rules": {
            "title": "Schedule Rules",
            "description": "A list of ScheduleRuleAbridged that note exceptions to the default_day_schedule. These rules should be ordered from highest to lowest priority.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleRuleAbridged"
            }
          },
          "holiday_schedule": {
            "title": "Holiday Schedule",
            "description": "An identifier for the ScheduleDay that will be used for holidays. This ScheduleDay must be in the day_schedules.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "summer_designday_schedule": {
            "title": "Summer Designday Schedule",
            "description": "An identifier for the ScheduleDay that will be used for the summer design day. This ScheduleDay must be in the day_schedules.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "winter_designday_schedule": {
            "title": "Winter Designday Schedule",
            "description": "An identifier for the ScheduleDay that will be used for the winter design day. This ScheduleDay must be in the day_schedules.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "schedule_type_limit": {
            "title": "Schedule Type Limit",
            "description": "Identifier of a ScheduleTypeLimit that will be used to validate schedule values against upper/lower limits and assign units to the schedule values. If None, no validation will occur.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "identifier",
          "day_schedules",
          "default_day_schedule"
        ],
        "additionalProperties": false
      },
      "ScheduleFixedIntervalAbridged": {
        "title": "ScheduleFixedIntervalAbridged",
        "description": "Used to specify a start date and a list of values for a period of analysis.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, osm). This identifier is also used to reference the object across a Model. It must be < 100 characters, use only ASCII characters and exclude (, ; ! \\n \\t).",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "values": {
            "title": "Values",
            "description": "A list of timeseries values occurring at each timestep over the course of the simulation.",
            "minItems": 24,
            "maxItems": 527040,
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "ScheduleFixedIntervalAbridged",
            "pattern": "^ScheduleFixedIntervalAbridged$",
            "type": "string",
            "readOnly": true
          },
          "schedule_type_limit": {
            "title": "Schedule Type Limit",
            "description": "Identifier of a ScheduleTypeLimit that will be used to validate schedule values against upper/lower limits and assign units to the schedule values. If None, no validation will occur.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "timestep": {
            "title": "Timestep",
            "description": "An integer for the number of steps per hour that the input values correspond to.  For example, if each value represents 30 minutes, the timestep is 2. For 15 minutes, it is 4.",
            "default": 1,
            "type": "integer",
            "format": "int32"
          },
          "start_date": {
            "title": "Start Date",
            "description": "A list of two integers for [month, day], representing the start date when the schedule values begin to take effect.A third integer may be added to denote whether the date should be re-serialized for a leap year (it should be a 1 in this case).",
            "default": [
              1,
              1
            ],
            "minItems": 2,
            "maxItems": 3,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "placeholder_value": {
            "title": "Placeholder Value",
            "description": " A value that will be used for all times not covered by the input values. Typically, your simulation should not need to use this value if the input values completely cover the simulation period.",
            "default": 0,
            "type": "number",
            "format": "double"
          },
          "interpolate": {
            "title": "Interpolate",
            "description": "Boolean to note whether values in between intervals should be linearly interpolated or whether successive values should take effect immediately upon the beginning time corresponding to them.",
            "default": false,
            "type": "boolean"
          }
        },
        "required": [
          "identifier",
          "values"
        ],
        "additionalProperties": false
      },
      "VentilationControlType": {
        "title": "VentilationControlType",
        "description": "An enumeration.",
        "enum": [
          "SingleZone",
          "MultiZoneWithDistribution",
          "MultiZoneWithoutDistribution"
        ],
        "type": "string"
      },
      "BuildingType": {
        "title": "BuildingType",
        "description": "An enumeration.",
        "enum": [
          "LowRise",
          "HighRise"
        ],
        "type": "string"
      },
      "VentilationSimulationControl": {
        "title": "VentilationSimulationControl",
        "description": "The global parameters used in the ventilation simulation.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "VentilationSimulationControl",
            "pattern": "^VentilationSimulationControl$",
            "type": "string",
            "readOnly": true
          },
          "vent_control_type": {
            "description": "Text indicating type of ventilation control. Choices are: SingleZone, MultiZoneWithDistribution, MultiZoneWithoutDistribution. The MultiZone options will model air flow with the AirflowNetwork model, which is generally more accurate then the SingleZone option, but will take considerably longer to simulate, and requires defining more ventilation parameters to explicitly account for weather and building-induced pressure differences, and the leakage geometry corresponding to specific windows, doors, and surface cracks.",
            "default": "SingleZone",
            "allOf": [
              {
                "$ref": "#/components/schemas/VentilationControlType"
              }
            ]
          },
          "reference_temperature": {
            "title": "Reference Temperature",
            "description": "Reference temperature measurement in Celsius under which the surface crack data were obtained.",
            "default": 20,
            "minimum": -273.15,
            "type": "number",
            "format": "double"
          },
          "reference_pressure": {
            "title": "Reference Pressure",
            "description": "Reference barometric pressure measurement in Pascals under which the surface crack data were obtained.",
            "default": 101325,
            "minimum": 31000,
            "maximum": 120000,
            "type": "number",
            "format": "double"
          },
          "reference_humidity_ratio": {
            "title": "Reference Humidity Ratio",
            "description": "Reference humidity ratio measurement in kgWater/kgDryAir under which the surface crack data were obtained.",
            "default": 0,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "building_type": {
            "description": "Text indicating relationship between building footprint and height used to calculate the wind pressure coefficients for exterior surfaces.Choices are: LowRise and HighRise. LowRise corresponds to rectangular building whose height is less then three times the width and length of the footprint. HighRise corresponds to a rectangular building whose height is more than three times the width and length of the footprint. This parameter is required to automatically calculate wind pressure coefficients for the AirflowNetwork simulation. If used for complex building geometries that cannot be described as a highrise or lowrise rectangular mass, the resulting air flow and pressure simulated on the building surfaces may be inaccurate.",
            "default": "LowRise",
            "allOf": [
              {
                "$ref": "#/components/schemas/BuildingType"
              }
            ]
          },
          "long_axis_angle": {
            "title": "Long Axis Angle",
            "description": "The clockwise rotation in degrees from true North of the long axis of the building. This parameter is required to automatically calculate wind pressure coefficients for the AirflowNetwork simulation. If used for complex building geometries that cannot be described as a highrise or lowrise rectangular mass, the resulting air flow and pressure simulated on the building surfaces may be inaccurate.",
            "default": 0,
            "minimum": 0,
            "maximum": 180,
            "type": "number",
            "format": "double"
          },
          "aspect_ratio": {
            "title": "Aspect Ratio",
            "description": "Aspect ratio of a rectangular footprint, defined as the ratio of length of the short axis divided by the length of the long axis. This parameter is required to automatically calculate wind pressure coefficients for the AirflowNetwork simulation. If used for complex building geometries that cannot be described as a highrise or lowrise rectangular mass, the resulting air flow and pressure simulated on the building surfaces may be inaccurate.",
            "default": 1,
            "exclusiveMinimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ElectricLoadCenter": {
        "title": "ElectricLoadCenter",
        "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "ElectricLoadCenter",
            "pattern": "^ElectricLoadCenter$",
            "type": "string",
            "readOnly": true
          },
          "inverter_efficiency": {
            "title": "Inverter Efficiency",
            "description": "A number between 0 and 1 for the load center inverter nominal rated DC-to-AC conversion efficiency. An inverter converts DC power, such as that output by photovoltaic panels, to AC power, such as that distributed by the electrical grid and is available from standard electrical outlets. Inverter efficiency is defined as the inverter rated AC power output divided by its rated DC power output.",
            "default": 0.96,
            "exclusiveMinimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "inverter_dc_to_ac_size_ratio": {
            "title": "Inverter Dc To Ac Size Ratio",
            "description": "A positive number (typically greater than 1) for the ratio of the inverter DC rated size to its AC rated size. Typically, inverters are not sized to convert the full DC output under standard test conditions (STC) as such conditions rarely occur in reality and therefore unnecessarily add to the size/cost of the inverter. For a system with a high DC to AC size ratio, during times when the DC power output exceeds the inverter rated DC input size, the inverter limits the power output by increasing the DC operating voltage, which moves the arrays operating point down its current-voltage (I-V) curve. In EnergyPlus, this is accomplished by simply limiting the system output to the AC size as dictated by the ratio. The default value of 1.1 is reasonable for most systems. A typical range is 1.1 to 1.25, although some large-scale systems have ratios of as high as 1.5. The optimal value depends on the system location, array orientation, and module cost.",
            "default": 1.1,
            "exclusiveMinimum": 0,
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ModelEnergyProperties": {
        "title": "ModelEnergyProperties",
        "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "ModelEnergyProperties",
            "pattern": "^ModelEnergyProperties$",
            "type": "string",
            "readOnly": true
          },
          "global_construction_set": {
            "title": "Global Construction Set",
            "description": "Global Energy construction set.",
            "default": {
              "type": "GlobalConstructionSet",
              "materials": [
                {
                  "identifier": "Generic Roof Membrane",
                  "display_name": null,
                  "user_data": null,
                  "type": "EnergyMaterial",
                  "roughness": "MediumRough",
                  "thickness": 0.01,
                  "conductivity": 0.16,
                  "density": 1120.0,
                  "specific_heat": 1460.0,
                  "thermal_absorptance": 0.9,
                  "solar_absorptance": 0.65,
                  "visible_absorptance": 0.65
                },
                {
                  "identifier": "Generic Acoustic Tile",
                  "display_name": null,
                  "user_data": null,
                  "type": "EnergyMaterial",
                  "roughness": "MediumSmooth",
                  "thickness": 0.02,
                  "conductivity": 0.06,
                  "density": 368.0,
                  "specific_heat": 590.0,
                  "thermal_absorptance": 0.9,
                  "solar_absorptance": 0.2,
                  "visible_absorptance": 0.2
                },
                {
                  "identifier": "Generic 25mm Wood",
                  "display_name": null,
                  "user_data": null,
                  "type": "EnergyMaterial",
                  "roughness": "MediumSmooth",
                  "thickness": 0.0254,
                  "conductivity": 0.15,
                  "density": 608.0,
                  "specific_heat": 1630.0,
                  "thermal_absorptance": 0.9,
                  "solar_absorptance": 0.5,
                  "visible_absorptance": 0.5
                },
                {
                  "identifier": "Generic HW Concrete",
                  "display_name": null,
                  "user_data": null,
                  "type": "EnergyMaterial",
                  "roughness": "MediumRough",
                  "thickness": 0.2,
                  "conductivity": 1.95,
                  "density": 2240.0,
                  "specific_heat": 900.0,
                  "thermal_absorptance": 0.9,
                  "solar_absorptance": 0.8,
                  "visible_absorptance": 0.8
                },
                {
                  "identifier": "Generic Window Air Gap",
                  "display_name": null,
                  "user_data": null,
                  "type": "EnergyWindowMaterialGas",
                  "thickness": 0.0127,
                  "gas_type": "Air"
                },
                {
                  "identifier": "Generic Gypsum Board",
                  "display_name": null,
                  "user_data": null,
                  "type": "EnergyMaterial",
                  "roughness": "MediumSmooth",
                  "thickness": 0.0127,
                  "conductivity": 0.16,
                  "density": 800.0,
                  "specific_heat": 1090.0,
                  "thermal_absorptance": 0.9,
                  "solar_absorptance": 0.5,
                  "visible_absorptance": 0.5
                },
                {
                  "identifier": "Generic Wall Air Gap",
                  "display_name": null,
                  "user_data": null,
                  "type": "EnergyMaterial",
                  "roughness": "Smooth",
                  "thickness": 0.1,
                  "conductivity": 0.667,
                  "density": 1.28,
                  "specific_heat": 1000.0,
                  "thermal_absorptance": 0.9,
                  "solar_absorptance": 0.7,
                  "visible_absorptance": 0.7
                },
                {
                  "identifier": "Generic Ceiling Air Gap",
                  "display_name": null,
                  "user_data": null,
                  "type": "EnergyMaterial",
                  "roughness": "Smooth",
                  "thickness": 0.1,
                  "conductivity": 0.556,
                  "density": 1.28,
                  "specific_heat": 1000.0,
                  "thermal_absorptance": 0.9,
                  "solar_absorptance": 0.7,
                  "visible_absorptance": 0.7
                },
                {
                  "identifier": "Generic Brick",
                  "display_name": null,
                  "user_data": null,
                  "type": "EnergyMaterial",
                  "roughness": "MediumRough",
                  "thickness": 0.1,
                  "conductivity": 0.9,
                  "density": 1920.0,
                  "specific_heat": 790.0,
                  "thermal_absorptance": 0.9,
                  "solar_absorptance": 0.65,
                  "visible_absorptance": 0.65
                },
                {
                  "identifier": "Generic 50mm Insulation",
                  "display_name": null,
                  "user_data": null,
                  "type": "EnergyMaterial",
                  "roughness": "MediumRough",
                  "thickness": 0.05,
                  "conductivity": 0.03,
                  "density": 43.0,
                  "specific_heat": 1210.0,
                  "thermal_absorptance": 0.9,
                  "solar_absorptance": 0.7,
                  "visible_absorptance": 0.7
                },
                {
                  "identifier": "Generic Low-e Glass",
                  "display_name": null,
                  "user_data": null,
                  "type": "EnergyWindowMaterialGlazing",
                  "thickness": 0.006,
                  "solar_transmittance": 0.45,
                  "solar_reflectance": 0.36,
                  "solar_reflectance_back": 0.36,
                  "visible_transmittance": 0.71,
                  "visible_reflectance": 0.21,
                  "visible_reflectance_back": 0.21,
                  "infrared_transmittance": 0.0,
                  "emissivity": 0.84,
                  "emissivity_back": 0.047,
                  "conductivity": 1.0,
                  "dirt_correction": 1.0,
                  "solar_diffusing": false
                },
                {
                  "identifier": "Generic Painted Metal",
                  "display_name": null,
                  "user_data": null,
                  "type": "EnergyMaterial",
                  "roughness": "Smooth",
                  "thickness": 0.0015,
                  "conductivity": 45.0,
                  "density": 7690.0,
                  "specific_heat": 410.0,
                  "thermal_absorptance": 0.9,
                  "solar_absorptance": 0.5,
                  "visible_absorptance": 0.5
                },
                {
                  "identifier": "Generic LW Concrete",
                  "display_name": null,
                  "user_data": null,
                  "type": "EnergyMaterial",
                  "roughness": "MediumRough",
                  "thickness": 0.1,
                  "conductivity": 0.53,
                  "density": 1280.0,
                  "specific_heat": 840.0,
                  "thermal_absorptance": 0.9,
                  "solar_absorptance": 0.8,
                  "visible_absorptance": 0.8
                },
                {
                  "identifier": "Generic 25mm Insulation",
                  "display_name": null,
                  "user_data": null,
                  "type": "EnergyMaterial",
                  "roughness": "MediumRough",
                  "thickness": 0.025,
                  "conductivity": 0.03,
                  "density": 43.0,
                  "specific_heat": 1210.0,
                  "thermal_absorptance": 0.9,
                  "solar_absorptance": 0.7,
                  "visible_absorptance": 0.7
                },
                {
                  "identifier": "Generic Clear Glass",
                  "display_name": null,
                  "user_data": null,
                  "type": "EnergyWindowMaterialGlazing",
                  "thickness": 0.006,
                  "solar_transmittance": 0.77,
                  "solar_reflectance": 0.07,
                  "solar_reflectance_back": 0.07,
                  "visible_transmittance": 0.88,
                  "visible_reflectance": 0.08,
                  "visible_reflectance_back": 0.08,
                  "infrared_transmittance": 0.0,
                  "emissivity": 0.84,
                  "emissivity_back": 0.84,
                  "conductivity": 1.0,
                  "dirt_correction": 1.0,
                  "solar_diffusing": false
                }
              ],
              "constructions": [
                {
                  "identifier": "Generic Interior Door",
                  "display_name": null,
                  "user_data": null,
                  "type": "OpaqueConstructionAbridged",
                  "materials": [
                    "Generic 25mm Wood"
                  ]
                },
                {
                  "identifier": "Generic Single Pane",
                  "display_name": null,
                  "user_data": null,
                  "type": "WindowConstructionAbridged",
                  "materials": [
                    "Generic Clear Glass"
                  ],
                  "frame": null
                },
                {
                  "identifier": "Generic Shade",
                  "display_name": null,
                  "user_data": null,
                  "type": "ShadeConstruction",
                  "solar_reflectance": 0.35,
                  "visible_reflectance": 0.35,
                  "is_specular": false
                },
                {
                  "identifier": "Generic Context",
                  "display_name": null,
                  "user_data": null,
                  "type": "ShadeConstruction",
                  "solar_reflectance": 0.2,
                  "visible_reflectance": 0.2,
                  "is_specular": false
                },
                {
                  "identifier": "Generic Interior Ceiling",
                  "display_name": null,
                  "user_data": null,
                  "type": "OpaqueConstructionAbridged",
                  "materials": [
                    "Generic LW Concrete",
                    "Generic Ceiling Air Gap",
                    "Generic Acoustic Tile"
                  ]
                },
                {
                  "identifier": "Generic Interior Wall",
                  "display_name": null,
                  "user_data": null,
                  "type": "OpaqueConstructionAbridged",
                  "materials": [
                    "Generic Gypsum Board",
                    "Generic Wall Air Gap",
                    "Generic Gypsum Board"
                  ]
                },
                {
                  "identifier": "Generic Exposed Floor",
                  "display_name": null,
                  "user_data": null,
                  "type": "OpaqueConstructionAbridged",
                  "materials": [
                    "Generic Painted Metal",
                    "Generic Ceiling Air Gap",
                    "Generic 50mm Insulation",
                    "Generic LW Concrete"
                  ]
                },
                {
                  "identifier": "Generic Interior Floor",
                  "display_name": null,
                  "user_data": null,
                  "type": "OpaqueConstructionAbridged",
                  "materials": [
                    "Generic Acoustic Tile",
                    "Generic Ceiling Air Gap",
                    "Generic LW Concrete"
                  ]
                },
                {
                  "identifier": "Generic Ground Slab",
                  "display_name": null,
                  "user_data": null,
                  "type": "OpaqueConstructionAbridged",
                  "materials": [
                    "Generic 50mm Insulation",
                    "Generic HW Concrete"
                  ]
                },
                {
                  "identifier": "Generic Roof",
                  "display_name": null,
                  "user_data": null,
                  "type": "OpaqueConstructionAbridged",
                  "materials": [
                    "Generic Roof Membrane",
                    "Generic 50mm Insulation",
                    "Generic LW Concrete",
                    "Generic Ceiling Air Gap",
                    "Generic Acoustic Tile"
                  ]
                },
                {
                  "identifier": "Generic Exterior Wall",
                  "display_name": null,
                  "user_data": null,
                  "type": "OpaqueConstructionAbridged",
                  "materials": [
                    "Generic Brick",
                    "Generic LW Concrete",
                    "Generic 50mm Insulation",
                    "Generic Wall Air Gap",
                    "Generic Gypsum Board"
                  ]
                },
                {
                  "identifier": "Generic Underground Wall",
                  "display_name": null,
                  "user_data": null,
                  "type": "OpaqueConstructionAbridged",
                  "materials": [
                    "Generic 50mm Insulation",
                    "Generic HW Concrete",
                    "Generic Wall Air Gap",
                    "Generic Gypsum Board"
                  ]
                },
                {
                  "identifier": "Generic Air Boundary",
                  "display_name": null,
                  "user_data": null,
                  "type": "AirBoundaryConstructionAbridged",
                  "air_mixing_per_area": 0.1,
                  "air_mixing_schedule": "Always On"
                },
                {
                  "identifier": "Generic Underground Roof",
                  "display_name": null,
                  "user_data": null,
                  "type": "OpaqueConstructionAbridged",
                  "materials": [
                    "Generic 50mm Insulation",
                    "Generic HW Concrete",
                    "Generic Ceiling Air Gap",
                    "Generic Acoustic Tile"
                  ]
                },
                {
                  "identifier": "Generic Double Pane",
                  "display_name": null,
                  "user_data": null,
                  "type": "WindowConstructionAbridged",
                  "materials": [
                    "Generic Low-e Glass",
                    "Generic Window Air Gap",
                    "Generic Clear Glass"
                  ],
                  "frame": null
                },
                {
                  "identifier": "Generic Exterior Door",
                  "display_name": null,
                  "user_data": null,
                  "type": "OpaqueConstructionAbridged",
                  "materials": [
                    "Generic Painted Metal",
                    "Generic 25mm Insulation",
                    "Generic Painted Metal"
                  ]
                }
              ],
              "wall_set": {
                "interior_construction": "Generic Interior Wall",
                "exterior_construction": "Generic Exterior Wall",
                "ground_construction": "Generic Underground Wall",
                "type": "WallConstructionSetAbridged"
              },
              "floor_set": {
                "interior_construction": "Generic Interior Floor",
                "exterior_construction": "Generic Exposed Floor",
                "ground_construction": "Generic Ground Slab",
                "type": "FloorConstructionSetAbridged"
              },
              "roof_ceiling_set": {
                "interior_construction": "Generic Interior Ceiling",
                "exterior_construction": "Generic Roof",
                "ground_construction": "Generic Underground Roof",
                "type": "RoofCeilingConstructionSetAbridged"
              },
              "aperture_set": {
                "type": "ApertureConstructionSetAbridged",
                "interior_construction": "Generic Single Pane",
                "window_construction": "Generic Double Pane",
                "skylight_construction": "Generic Double Pane",
                "operable_construction": "Generic Double Pane"
              },
              "door_set": {
                "type": "DoorConstructionSetAbridged",
                "interior_construction": "Generic Interior Door",
                "exterior_construction": "Generic Exterior Door",
                "overhead_construction": "Generic Exterior Door",
                "exterior_glass_construction": "Generic Double Pane",
                "interior_glass_construction": "Generic Single Pane"
              },
              "shade_construction": "Generic Shade",
              "context_construction": "Generic Context",
              "air_boundary_construction": "Generic Air Boundary"
            },
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/GlobalConstructionSet"
              }
            ]
          },
          "construction_sets": {
            "title": "Construction Sets",
            "description": "List of all unique ConstructionSets in the Model.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ConstructionSetAbridged"
                },
                {
                  "$ref": "#/components/schemas/ConstructionSet"
                }
              ]
            }
          },
          "constructions": {
            "title": "Constructions",
            "description": "A list of all unique constructions in the model. This includes constructions across all Faces, Apertures, Doors, Shades, Room ConstructionSets, and the global_construction_set.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/OpaqueConstructionAbridged"
                },
                {
                  "$ref": "#/components/schemas/WindowConstructionAbridged"
                },
                {
                  "$ref": "#/components/schemas/WindowConstructionShadeAbridged"
                },
                {
                  "$ref": "#/components/schemas/AirBoundaryConstructionAbridged"
                },
                {
                  "$ref": "#/components/schemas/OpaqueConstruction"
                },
                {
                  "$ref": "#/components/schemas/WindowConstruction"
                },
                {
                  "$ref": "#/components/schemas/WindowConstructionShade"
                },
                {
                  "$ref": "#/components/schemas/WindowConstructionDynamicAbridged"
                },
                {
                  "$ref": "#/components/schemas/WindowConstructionDynamic"
                },
                {
                  "$ref": "#/components/schemas/AirBoundaryConstruction"
                },
                {
                  "$ref": "#/components/schemas/ShadeConstruction"
                }
              ]
            }
          },
          "materials": {
            "title": "Materials",
            "description": "A list of all unique materials in the model. This includes materials needed to make the Model constructions.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/EnergyMaterial"
                },
                {
                  "$ref": "#/components/schemas/EnergyMaterialNoMass"
                },
                {
                  "$ref": "#/components/schemas/EnergyMaterialVegetation"
                },
                {
                  "$ref": "#/components/schemas/EnergyWindowMaterialGlazing"
                },
                {
                  "$ref": "#/components/schemas/EnergyWindowMaterialSimpleGlazSys"
                },
                {
                  "$ref": "#/components/schemas/EnergyWindowMaterialGas"
                },
                {
                  "$ref": "#/components/schemas/EnergyWindowMaterialGasMixture"
                },
                {
                  "$ref": "#/components/schemas/EnergyWindowMaterialGasCustom"
                },
                {
                  "$ref": "#/components/schemas/EnergyWindowFrame"
                },
                {
                  "$ref": "#/components/schemas/EnergyWindowMaterialBlind"
                },
                {
                  "$ref": "#/components/schemas/EnergyWindowMaterialShade"
                }
              ]
            }
          },
          "hvacs": {
            "title": "Hvacs",
            "description": "List of all unique HVAC systems in the Model.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/IdealAirSystemAbridged"
                },
                {
                  "$ref": "#/components/schemas/VAV"
                },
                {
                  "$ref": "#/components/schemas/PVAV"
                },
                {
                  "$ref": "#/components/schemas/PSZ"
                },
                {
                  "$ref": "#/components/schemas/PTAC"
                },
                {
                  "$ref": "#/components/schemas/ForcedAirFurnace"
                },
                {
                  "$ref": "#/components/schemas/FCUwithDOASAbridged"
                },
                {
                  "$ref": "#/components/schemas/WSHPwithDOASAbridged"
                },
                {
                  "$ref": "#/components/schemas/VRFwithDOASAbridged"
                },
                {
                  "$ref": "#/components/schemas/RadiantwithDOASAbridged"
                },
                {
                  "$ref": "#/components/schemas/FCU"
                },
                {
                  "$ref": "#/components/schemas/WSHP"
                },
                {
                  "$ref": "#/components/schemas/VRF"
                },
                {
                  "$ref": "#/components/schemas/Baseboard"
                },
                {
                  "$ref": "#/components/schemas/EvaporativeCooler"
                },
                {
                  "$ref": "#/components/schemas/Residential"
                },
                {
                  "$ref": "#/components/schemas/WindowAC"
                },
                {
                  "$ref": "#/components/schemas/GasUnitHeater"
                },
                {
                  "$ref": "#/components/schemas/Radiant"
                },
                {
                  "$ref": "#/components/schemas/DetailedHVAC"
                }
              ]
            }
          },
          "shws": {
            "title": "Shws",
            "description": "List of all unique Service Hot Water (SHW) systems in the Model.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SHWSystem"
            }
          },
          "program_types": {
            "title": "Program Types",
            "description": "List of all unique ProgramTypes in the Model.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ProgramTypeAbridged"
                },
                {
                  "$ref": "#/components/schemas/ProgramType"
                }
              ]
            }
          },
          "schedules": {
            "title": "Schedules",
            "description": "A list of all unique schedules in the model. This includes schedules across all HVAC systems, ProgramTypes, Rooms, and Shades.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ScheduleRulesetAbridged"
                },
                {
                  "$ref": "#/components/schemas/ScheduleFixedIntervalAbridged"
                },
                {
                  "$ref": "#/components/schemas/ScheduleRuleset"
                },
                {
                  "$ref": "#/components/schemas/ScheduleFixedInterval"
                }
              ]
            }
          },
          "schedule_type_limits": {
            "title": "Schedule Type Limits",
            "description": "A list of all unique ScheduleTypeLimits in the model. This all ScheduleTypeLimits needed to make the Model schedules.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleTypeLimit"
            }
          },
          "ventilation_simulation_control": {
            "title": "Ventilation Simulation Control",
            "description": "An optional parameter to define the global parameters for a ventilation cooling.",
            "allOf": [
              {
                "$ref": "#/components/schemas/VentilationSimulationControl"
              }
            ]
          },
          "electric_load_center": {
            "title": "Electric Load Center",
            "description": "An optional parameter object that defines the properties of the model electric loads center that manages on site electricity generation and conversion.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ElectricLoadCenter"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "Void": {
        "title": "Void",
        "description": "Void modifier",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "Void",
            "pattern": "^Void$",
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Mirror": {
        "title": "Mirror",
        "description": "Radiance mirror material.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique Radiance object. Must not contain spaces or special characters. This will be used to identify the object across a model and in the exported Radiance files.",
            "minLength": 1,
            "pattern": "^[.A-Za-z0-9_-]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "Mirror",
            "pattern": "^Mirror$",
            "type": "string",
            "readOnly": true
          },
          "modifier": {
            "title": "Modifier",
            "description": "Material modifier.",
            "default": {
              "type": "Void"
            },
            "anyOf": [
              {
                "$ref": "#/components/schemas/Plastic"
              },
              {
                "$ref": "#/components/schemas/Glass"
              },
              {
                "$ref": "#/components/schemas/BSDF"
              },
              {
                "$ref": "#/components/schemas/Glow"
              },
              {
                "$ref": "#/components/schemas/Light"
              },
              {
                "$ref": "#/components/schemas/Trans"
              },
              {
                "$ref": "#/components/schemas/Metal"
              },
              {
                "$ref": "#/components/schemas/Void"
              },
              {
                "$ref": "#/components/schemas/Mirror"
              }
            ]
          },
          "dependencies": {
            "title": "Dependencies",
            "description": "List of modifiers that this modifier depends on. This argument is only useful for defining advanced modifiers where the modifier is defined based on other modifiers.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Plastic"
                },
                {
                  "$ref": "#/components/schemas/Glass"
                },
                {
                  "$ref": "#/components/schemas/BSDF"
                },
                {
                  "$ref": "#/components/schemas/Glow"
                },
                {
                  "$ref": "#/components/schemas/Light"
                },
                {
                  "$ref": "#/components/schemas/Trans"
                },
                {
                  "$ref": "#/components/schemas/Metal"
                },
                {
                  "$ref": "#/components/schemas/Void"
                },
                {
                  "$ref": "#/components/schemas/Mirror"
                }
              ]
            }
          },
          "r_reflectance": {
            "title": "R Reflectance",
            "description": "A value between 0 and 1 for the red channel reflectance.",
            "default": 1,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "g_reflectance": {
            "title": "G Reflectance",
            "description": "A value between 0 and 1 for the green channel reflectance.",
            "default": 1,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "b_reflectance": {
            "title": "B Reflectance",
            "description": "A value between 0 and 1 for the blue channel reflectance.",
            "default": 1,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "alternate_material": {
            "title": "Alternate Material",
            "description": "An optional material (like the illum type) that may be used to specify a different material to be used for shading non-source rays. If None, this will keep the alternat_material as mirror. If this alternate material is given as Void, then the mirror surface will be invisible. Using Void is only appropriate if the surface hides other (more detailed) geometry with the same overall reflectance.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/Plastic"
              },
              {
                "$ref": "#/components/schemas/Glass"
              },
              {
                "$ref": "#/components/schemas/BSDF"
              },
              {
                "$ref": "#/components/schemas/Glow"
              },
              {
                "$ref": "#/components/schemas/Light"
              },
              {
                "$ref": "#/components/schemas/Trans"
              },
              {
                "$ref": "#/components/schemas/Metal"
              },
              {
                "$ref": "#/components/schemas/Void"
              },
              {
                "$ref": "#/components/schemas/Mirror"
              }
            ]
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "Metal": {
        "title": "Metal",
        "description": "Radiance metal material.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique Radiance object. Must not contain spaces or special characters. This will be used to identify the object across a model and in the exported Radiance files.",
            "minLength": 1,
            "pattern": "^[.A-Za-z0-9_-]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "Metal",
            "pattern": "^Metal$",
            "type": "string",
            "readOnly": true
          },
          "modifier": {
            "title": "Modifier",
            "description": "Material modifier.",
            "default": {
              "type": "Void"
            },
            "anyOf": [
              {
                "$ref": "#/components/schemas/Plastic"
              },
              {
                "$ref": "#/components/schemas/Glass"
              },
              {
                "$ref": "#/components/schemas/BSDF"
              },
              {
                "$ref": "#/components/schemas/Glow"
              },
              {
                "$ref": "#/components/schemas/Light"
              },
              {
                "$ref": "#/components/schemas/Trans"
              },
              {
                "$ref": "#/components/schemas/Metal"
              },
              {
                "$ref": "#/components/schemas/Void"
              },
              {
                "$ref": "#/components/schemas/Mirror"
              }
            ]
          },
          "dependencies": {
            "title": "Dependencies",
            "description": "List of modifiers that this modifier depends on. This argument is only useful for defining advanced modifiers where the modifier is defined based on other modifiers.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Plastic"
                },
                {
                  "$ref": "#/components/schemas/Glass"
                },
                {
                  "$ref": "#/components/schemas/BSDF"
                },
                {
                  "$ref": "#/components/schemas/Glow"
                },
                {
                  "$ref": "#/components/schemas/Light"
                },
                {
                  "$ref": "#/components/schemas/Trans"
                },
                {
                  "$ref": "#/components/schemas/Metal"
                },
                {
                  "$ref": "#/components/schemas/Void"
                },
                {
                  "$ref": "#/components/schemas/Mirror"
                }
              ]
            }
          },
          "r_reflectance": {
            "title": "R Reflectance",
            "description": "A value between 0 and 1 for the red channel reflectance.",
            "default": 0.0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "g_reflectance": {
            "title": "G Reflectance",
            "description": "A value between 0 and 1 for the green channel reflectance.",
            "default": 0.0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "b_reflectance": {
            "title": "B Reflectance",
            "description": "A value between 0 and 1 for the blue channel reflectance.",
            "default": 0.0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "specularity": {
            "title": "Specularity",
            "description": "A value between 0 and 1 for the fraction of specularity. Specularity fractions lower than 0.9 are not realistic for metallic materials.",
            "default": 0.9,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "roughness": {
            "title": "Roughness",
            "description": "A value between 0 and 1 for the roughness, specified as the RMS slope of surface facets. Roughness greater than 0.2 are not realistic.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "Trans": {
        "title": "Trans",
        "description": "Radiance Translucent material.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique Radiance object. Must not contain spaces or special characters. This will be used to identify the object across a model and in the exported Radiance files.",
            "minLength": 1,
            "pattern": "^[.A-Za-z0-9_-]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "Trans",
            "pattern": "^Trans$",
            "type": "string",
            "readOnly": true
          },
          "modifier": {
            "title": "Modifier",
            "description": "Material modifier.",
            "default": {
              "type": "Void"
            },
            "anyOf": [
              {
                "$ref": "#/components/schemas/Plastic"
              },
              {
                "$ref": "#/components/schemas/Glass"
              },
              {
                "$ref": "#/components/schemas/BSDF"
              },
              {
                "$ref": "#/components/schemas/Glow"
              },
              {
                "$ref": "#/components/schemas/Light"
              },
              {
                "$ref": "#/components/schemas/Trans"
              },
              {
                "$ref": "#/components/schemas/Metal"
              },
              {
                "$ref": "#/components/schemas/Void"
              },
              {
                "$ref": "#/components/schemas/Mirror"
              }
            ]
          },
          "dependencies": {
            "title": "Dependencies",
            "description": "List of modifiers that this modifier depends on. This argument is only useful for defining advanced modifiers where the modifier is defined based on other modifiers.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Plastic"
                },
                {
                  "$ref": "#/components/schemas/Glass"
                },
                {
                  "$ref": "#/components/schemas/BSDF"
                },
                {
                  "$ref": "#/components/schemas/Glow"
                },
                {
                  "$ref": "#/components/schemas/Light"
                },
                {
                  "$ref": "#/components/schemas/Trans"
                },
                {
                  "$ref": "#/components/schemas/Metal"
                },
                {
                  "$ref": "#/components/schemas/Void"
                },
                {
                  "$ref": "#/components/schemas/Mirror"
                }
              ]
            }
          },
          "r_reflectance": {
            "title": "R Reflectance",
            "description": "A value between 0 and 1 for the red channel reflectance.",
            "default": 0.0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "g_reflectance": {
            "title": "G Reflectance",
            "description": "A value between 0 and 1 for the green channel reflectance.",
            "default": 0.0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "b_reflectance": {
            "title": "B Reflectance",
            "description": "A value between 0 and 1 for the blue channel reflectance.",
            "default": 0.0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "specularity": {
            "title": "Specularity",
            "description": "A value between 0 and 1 for the fraction of specularity. Specularity fractions greater than 0.1 are not realistic for non-metallic materials.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "roughness": {
            "title": "Roughness",
            "description": "A value between 0 and 1 for the roughness, specified as the RMS slope of surface facets. Roughness greater than 0.2 are not realistic.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "transmitted_diff": {
            "title": "Transmitted Diff",
            "description": "The fraction of transmitted light that is transmitted diffusely in a scattering fashion.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "transmitted_spec": {
            "title": "Transmitted Spec",
            "description": "The fraction of transmitted light that is not diffusely scattered.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "Light": {
        "title": "Light",
        "description": "Radiance Light material.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique Radiance object. Must not contain spaces or special characters. This will be used to identify the object across a model and in the exported Radiance files.",
            "minLength": 1,
            "pattern": "^[.A-Za-z0-9_-]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "Light",
            "pattern": "^Light$",
            "type": "string",
            "readOnly": true
          },
          "modifier": {
            "title": "Modifier",
            "description": "Material modifier.",
            "default": {
              "type": "Void"
            },
            "anyOf": [
              {
                "$ref": "#/components/schemas/Plastic"
              },
              {
                "$ref": "#/components/schemas/Glass"
              },
              {
                "$ref": "#/components/schemas/BSDF"
              },
              {
                "$ref": "#/components/schemas/Glow"
              },
              {
                "$ref": "#/components/schemas/Light"
              },
              {
                "$ref": "#/components/schemas/Trans"
              },
              {
                "$ref": "#/components/schemas/Metal"
              },
              {
                "$ref": "#/components/schemas/Void"
              },
              {
                "$ref": "#/components/schemas/Mirror"
              }
            ]
          },
          "dependencies": {
            "title": "Dependencies",
            "description": "List of modifiers that this modifier depends on. This argument is only useful for defining advanced modifiers where the modifier is defined based on other modifiers.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Plastic"
                },
                {
                  "$ref": "#/components/schemas/Glass"
                },
                {
                  "$ref": "#/components/schemas/BSDF"
                },
                {
                  "$ref": "#/components/schemas/Glow"
                },
                {
                  "$ref": "#/components/schemas/Light"
                },
                {
                  "$ref": "#/components/schemas/Trans"
                },
                {
                  "$ref": "#/components/schemas/Metal"
                },
                {
                  "$ref": "#/components/schemas/Void"
                },
                {
                  "$ref": "#/components/schemas/Mirror"
                }
              ]
            }
          },
          "r_emittance": {
            "title": "R Emittance",
            "description": "A value between 0 and 1 for the red channel of the modifier.",
            "default": 0.0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "g_emittance": {
            "title": "G Emittance",
            "description": "A value between 0 and 1 for the green channel of the modifier.",
            "default": 0.0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "b_emittance": {
            "title": "B Emittance",
            "description": "A value between 0 and 1 for the blue channel of the modifier.",
            "default": 0.0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "Glow": {
        "title": "Glow",
        "description": "Radiance Glow material.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique Radiance object. Must not contain spaces or special characters. This will be used to identify the object across a model and in the exported Radiance files.",
            "minLength": 1,
            "pattern": "^[.A-Za-z0-9_-]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "Glow",
            "pattern": "^Glow$",
            "type": "string",
            "readOnly": true
          },
          "modifier": {
            "title": "Modifier",
            "description": "Material modifier.",
            "default": {
              "type": "Void"
            },
            "anyOf": [
              {
                "$ref": "#/components/schemas/Plastic"
              },
              {
                "$ref": "#/components/schemas/Glass"
              },
              {
                "$ref": "#/components/schemas/BSDF"
              },
              {
                "$ref": "#/components/schemas/Glow"
              },
              {
                "$ref": "#/components/schemas/Light"
              },
              {
                "$ref": "#/components/schemas/Trans"
              },
              {
                "$ref": "#/components/schemas/Metal"
              },
              {
                "$ref": "#/components/schemas/Void"
              },
              {
                "$ref": "#/components/schemas/Mirror"
              }
            ]
          },
          "dependencies": {
            "title": "Dependencies",
            "description": "List of modifiers that this modifier depends on. This argument is only useful for defining advanced modifiers where the modifier is defined based on other modifiers.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Plastic"
                },
                {
                  "$ref": "#/components/schemas/Glass"
                },
                {
                  "$ref": "#/components/schemas/BSDF"
                },
                {
                  "$ref": "#/components/schemas/Glow"
                },
                {
                  "$ref": "#/components/schemas/Light"
                },
                {
                  "$ref": "#/components/schemas/Trans"
                },
                {
                  "$ref": "#/components/schemas/Metal"
                },
                {
                  "$ref": "#/components/schemas/Void"
                },
                {
                  "$ref": "#/components/schemas/Mirror"
                }
              ]
            }
          },
          "r_emittance": {
            "title": "R Emittance",
            "description": "A value between 0 and 1 for the red channel of the modifier.",
            "default": 0.0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "g_emittance": {
            "title": "G Emittance",
            "description": "A value between 0 and 1 for the green channel of the modifier.",
            "default": 0.0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "b_emittance": {
            "title": "B Emittance",
            "description": "A value between 0 and 1 for the blue channel of the modifier.",
            "default": 0.0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "max_radius": {
            "title": "Max Radius",
            "description": "Maximum radius for shadow testing. Objects with zero radius are permissable and may participate in interreflection calculation (though they are not representative of real light sources). Negative values will never contribute to scene illumination.",
            "default": 0,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "BSDF": {
        "title": "BSDF",
        "description": "Radiance BSDF (Bidirectional Scattering Distribution Function) material.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique Radiance object. Must not contain spaces or special characters. This will be used to identify the object across a model and in the exported Radiance files.",
            "minLength": 1,
            "pattern": "^[.A-Za-z0-9_-]+$",
            "type": "string"
          },
          "bsdf_data": {
            "title": "Bsdf Data",
            "description": "A string with the contents of the BSDF XML file.",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "BSDF",
            "pattern": "^BSDF$",
            "type": "string",
            "readOnly": true
          },
          "modifier": {
            "title": "Modifier",
            "description": "Material modifier.",
            "default": {
              "type": "Void"
            },
            "anyOf": [
              {
                "$ref": "#/components/schemas/Plastic"
              },
              {
                "$ref": "#/components/schemas/Glass"
              },
              {
                "$ref": "#/components/schemas/BSDF"
              },
              {
                "$ref": "#/components/schemas/Glow"
              },
              {
                "$ref": "#/components/schemas/Light"
              },
              {
                "$ref": "#/components/schemas/Trans"
              },
              {
                "$ref": "#/components/schemas/Metal"
              },
              {
                "$ref": "#/components/schemas/Void"
              },
              {
                "$ref": "#/components/schemas/Mirror"
              }
            ]
          },
          "dependencies": {
            "title": "Dependencies",
            "description": "List of modifiers that this modifier depends on. This argument is only useful for defining advanced modifiers where the modifier is defined based on other modifiers.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Plastic"
                },
                {
                  "$ref": "#/components/schemas/Glass"
                },
                {
                  "$ref": "#/components/schemas/BSDF"
                },
                {
                  "$ref": "#/components/schemas/Glow"
                },
                {
                  "$ref": "#/components/schemas/Light"
                },
                {
                  "$ref": "#/components/schemas/Trans"
                },
                {
                  "$ref": "#/components/schemas/Metal"
                },
                {
                  "$ref": "#/components/schemas/Void"
                },
                {
                  "$ref": "#/components/schemas/Mirror"
                }
              ]
            }
          },
          "up_orientation": {
            "title": "Up Orientation",
            "description": "Vector as sequence that sets the hemisphere that the BSDF material faces.",
            "default": [
              0.01,
              0.01,
              1.0
            ],
            "minItems": 3,
            "maxItems": 3,
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "thickness": {
            "title": "Thickness",
            "description": "Optional number to set the thickness of the BSDF material Sign of thickness indicates whether proxied geometry is behind the BSDF surface (when thickness is positive) or in front (when thickness is negative).",
            "default": 0,
            "type": "number",
            "format": "double"
          },
          "function_file": {
            "title": "Function File",
            "description": "Optional input for function file. Using \".\" will ensure that BSDF data is written to the root of wherever a given study is run.",
            "default": ".",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "transform": {
            "title": "Transform",
            "description": "Optional transform input to scale the thickness and reorient the up vector.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "front_diffuse_reflectance": {
            "title": "Front Diffuse Reflectance",
            "description": "Optional additional front diffuse reflectance as sequence of three RGB numbers.",
            "minItems": 3,
            "maxItems": 3,
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "back_diffuse_reflectance": {
            "title": "Back Diffuse Reflectance",
            "description": "Optional additional back diffuse reflectance as sequence of three RGB numbers.",
            "minItems": 3,
            "maxItems": 3,
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "diffuse_transmittance": {
            "title": "Diffuse Transmittance",
            "description": "Optional additional diffuse transmittance as sequence of three RGB numbers.",
            "minItems": 3,
            "maxItems": 3,
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          }
        },
        "required": [
          "identifier",
          "bsdf_data"
        ],
        "additionalProperties": false
      },
      "Glass": {
        "title": "Glass",
        "description": "Radiance glass material.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique Radiance object. Must not contain spaces or special characters. This will be used to identify the object across a model and in the exported Radiance files.",
            "minLength": 1,
            "pattern": "^[.A-Za-z0-9_-]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "Glass",
            "pattern": "^Glass$",
            "type": "string",
            "readOnly": true
          },
          "modifier": {
            "title": "Modifier",
            "description": "Material modifier.",
            "default": {
              "type": "Void"
            },
            "anyOf": [
              {
                "$ref": "#/components/schemas/Plastic"
              },
              {
                "$ref": "#/components/schemas/Glass"
              },
              {
                "$ref": "#/components/schemas/BSDF"
              },
              {
                "$ref": "#/components/schemas/Glow"
              },
              {
                "$ref": "#/components/schemas/Light"
              },
              {
                "$ref": "#/components/schemas/Trans"
              },
              {
                "$ref": "#/components/schemas/Metal"
              },
              {
                "$ref": "#/components/schemas/Void"
              },
              {
                "$ref": "#/components/schemas/Mirror"
              }
            ]
          },
          "dependencies": {
            "title": "Dependencies",
            "description": "List of modifiers that this modifier depends on. This argument is only useful for defining advanced modifiers where the modifier is defined based on other modifiers.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Plastic"
                },
                {
                  "$ref": "#/components/schemas/Glass"
                },
                {
                  "$ref": "#/components/schemas/BSDF"
                },
                {
                  "$ref": "#/components/schemas/Glow"
                },
                {
                  "$ref": "#/components/schemas/Light"
                },
                {
                  "$ref": "#/components/schemas/Trans"
                },
                {
                  "$ref": "#/components/schemas/Metal"
                },
                {
                  "$ref": "#/components/schemas/Void"
                },
                {
                  "$ref": "#/components/schemas/Mirror"
                }
              ]
            }
          },
          "r_transmissivity": {
            "title": "R Transmissivity",
            "description": "A value between 0 and 1 for the red channel transmissivity.",
            "default": 0.0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "g_transmissivity": {
            "title": "G Transmissivity",
            "description": "A value between 0 and 1 for the green channel transmissivity.",
            "default": 0.0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "b_transmissivity": {
            "title": "B Transmissivity",
            "description": "A value between 0 and 1 for the blue channel transmissivity.",
            "default": 0.0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "refraction_index": {
            "title": "Refraction Index",
            "description": "A value greater than 1 for the index of refraction. Typical values are 1.52 for float glass and 1.4 for ETFE.",
            "default": 1.52,
            "exclusiveMinimum": 1,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "Plastic": {
        "title": "Plastic",
        "description": "Radiance plastic material.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique Radiance object. Must not contain spaces or special characters. This will be used to identify the object across a model and in the exported Radiance files.",
            "minLength": 1,
            "pattern": "^[.A-Za-z0-9_-]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "Plastic",
            "pattern": "^Plastic$",
            "type": "string",
            "readOnly": true
          },
          "modifier": {
            "title": "Modifier",
            "description": "Material modifier.",
            "default": {
              "type": "Void"
            },
            "anyOf": [
              {
                "$ref": "#/components/schemas/Plastic"
              },
              {
                "$ref": "#/components/schemas/Glass"
              },
              {
                "$ref": "#/components/schemas/BSDF"
              },
              {
                "$ref": "#/components/schemas/Glow"
              },
              {
                "$ref": "#/components/schemas/Light"
              },
              {
                "$ref": "#/components/schemas/Trans"
              },
              {
                "$ref": "#/components/schemas/Metal"
              },
              {
                "$ref": "#/components/schemas/Void"
              },
              {
                "$ref": "#/components/schemas/Mirror"
              }
            ]
          },
          "dependencies": {
            "title": "Dependencies",
            "description": "List of modifiers that this modifier depends on. This argument is only useful for defining advanced modifiers where the modifier is defined based on other modifiers.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Plastic"
                },
                {
                  "$ref": "#/components/schemas/Glass"
                },
                {
                  "$ref": "#/components/schemas/BSDF"
                },
                {
                  "$ref": "#/components/schemas/Glow"
                },
                {
                  "$ref": "#/components/schemas/Light"
                },
                {
                  "$ref": "#/components/schemas/Trans"
                },
                {
                  "$ref": "#/components/schemas/Metal"
                },
                {
                  "$ref": "#/components/schemas/Void"
                },
                {
                  "$ref": "#/components/schemas/Mirror"
                }
              ]
            }
          },
          "r_reflectance": {
            "title": "R Reflectance",
            "description": "A value between 0 and 1 for the red channel reflectance.",
            "default": 0.0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "g_reflectance": {
            "title": "G Reflectance",
            "description": "A value between 0 and 1 for the green channel reflectance.",
            "default": 0.0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "b_reflectance": {
            "title": "B Reflectance",
            "description": "A value between 0 and 1 for the blue channel reflectance.",
            "default": 0.0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "specularity": {
            "title": "Specularity",
            "description": "A value between 0 and 1 for the fraction of specularity. Specularity fractions greater than 0.1 are not realistic for non-metallic materials.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          },
          "roughness": {
            "title": "Roughness",
            "description": "A value between 0 and 1 for the roughness, specified as the RMS slope of surface facets. Roughness greater than 0.2 are not realistic.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "WallModifierSetAbridged": {
        "title": "WallModifierSetAbridged",
        "description": "Abridged set containing radiance modifiers needed for a model's Walls.",
        "type": "object",
        "properties": {
          "exterior_modifier": {
            "title": "Exterior Modifier",
            "description": "Identifier for a radiance modifier object for faces with an  Outdoors boundary condition.",
            "type": "string"
          },
          "interior_modifier": {
            "title": "Interior Modifier",
            "description": "Identifier for a radiance modifier object for faces with a boundary condition other than Outdoors.",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "WallModifierSetAbridged",
            "pattern": "^WallModifierSetAbridged$",
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FloorModifierSetAbridged": {
        "title": "FloorModifierSetAbridged",
        "description": "Abridged set containing radiance modifiers needed for a model's Floors.",
        "type": "object",
        "properties": {
          "exterior_modifier": {
            "title": "Exterior Modifier",
            "description": "Identifier for a radiance modifier object for faces with an  Outdoors boundary condition.",
            "type": "string"
          },
          "interior_modifier": {
            "title": "Interior Modifier",
            "description": "Identifier for a radiance modifier object for faces with a boundary condition other than Outdoors.",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "FloorModifierSetAbridged",
            "pattern": "^FloorModifierSetAbridged$",
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "RoofCeilingModifierSetAbridged": {
        "title": "RoofCeilingModifierSetAbridged",
        "description": "Abridged set containing radiance modifiers needed for a model's Roofs.",
        "type": "object",
        "properties": {
          "exterior_modifier": {
            "title": "Exterior Modifier",
            "description": "Identifier for a radiance modifier object for faces with an  Outdoors boundary condition.",
            "type": "string"
          },
          "interior_modifier": {
            "title": "Interior Modifier",
            "description": "Identifier for a radiance modifier object for faces with a boundary condition other than Outdoors.",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "RoofCeilingModifierSetAbridged",
            "pattern": "^RoofCeilingModifierSetAbridged$",
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApertureModifierSetAbridged": {
        "title": "ApertureModifierSetAbridged",
        "description": "Abridged set containing radiance modifiers needed for a model's Apertures.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "ApertureModifierSetAbridged",
            "pattern": "^ApertureModifierSetAbridged$",
            "type": "string",
            "readOnly": true
          },
          "window_modifier": {
            "title": "Window Modifier",
            "description": "Identifier of modifier object for apertures with an Outdoors boundary condition, False is_operable property, and Wall parent Face.",
            "type": "string"
          },
          "interior_modifier": {
            "title": "Interior Modifier",
            "description": "Identifier of modifier object for apertures with a Surface boundary condition.",
            "type": "string"
          },
          "skylight_modifier": {
            "title": "Skylight Modifier",
            "description": "Identifier of modifier object for apertures with an Outdoors boundary condition, False is_operable property, and a RoofCeiling or Floor face type for their parent face.",
            "type": "string"
          },
          "operable_modifier": {
            "title": "Operable Modifier",
            "description": "Identifier of modifier object for apertures with an Outdoors boundary condition and a True is_operable property.",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "DoorModifierSetAbridged": {
        "title": "DoorModifierSetAbridged",
        "description": "Abridged set containing radiance modifiers needed for a model's Doors.",
        "type": "object",
        "properties": {
          "exterior_modifier": {
            "title": "Exterior Modifier",
            "description": "Identifier for a radiance modifier object for faces with an  Outdoors boundary condition.",
            "type": "string"
          },
          "interior_modifier": {
            "title": "Interior Modifier",
            "description": "Identifier for a radiance modifier object for faces with a boundary condition other than Outdoors.",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "DoorModifierSetAbridged",
            "pattern": "^DoorModifierSetAbridged$",
            "type": "string",
            "readOnly": true
          },
          "interior_glass_modifier": {
            "title": "Interior Glass Modifier",
            "description": "Identifier of modifier object for glass with a Surface boundary condition.",
            "type": "string"
          },
          "exterior_glass_modifier": {
            "title": "Exterior Glass Modifier",
            "description": "Identifier of modifier object for glass with an Outdoors boundary condition.",
            "type": "string"
          },
          "overhead_modifier": {
            "title": "Overhead Modifier",
            "description": "Identifier of a modifier object for doors with an Outdoors boundary condition and a RoofCeiling or Floor face type for their parent face.",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ShadeModifierSetAbridged": {
        "title": "ShadeModifierSetAbridged",
        "description": "Abridged set containing radiance modifiers needed for a model's Shade.",
        "type": "object",
        "properties": {
          "exterior_modifier": {
            "title": "Exterior Modifier",
            "description": "Identifier for a radiance modifier object for faces with an  Outdoors boundary condition.",
            "type": "string"
          },
          "interior_modifier": {
            "title": "Interior Modifier",
            "description": "Identifier for a radiance modifier object for faces with a boundary condition other than Outdoors.",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "ShadeModifierSetAbridged",
            "pattern": "^ShadeModifierSetAbridged$",
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GlobalModifierSet": {
        "title": "GlobalModifierSet",
        "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "GlobalModifierSet",
            "pattern": "^GlobalModifierSet$",
            "type": "string",
            "readOnly": true
          },
          "modifiers": {
            "title": "Modifiers",
            "description": "Global Honeybee Radiance modifiers.",
            "default": [
              {
                "identifier": "generic_floor_0.20",
                "display_name": null,
                "type": "Plastic",
                "modifier": null,
                "dependencies": [],
                "r_reflectance": 0.2,
                "g_reflectance": 0.2,
                "b_reflectance": 0.2,
                "specularity": 0.0,
                "roughness": 0.0
              },
              {
                "identifier": "generic_wall_0.50",
                "display_name": null,
                "type": "Plastic",
                "modifier": null,
                "dependencies": [],
                "r_reflectance": 0.5,
                "g_reflectance": 0.5,
                "b_reflectance": 0.5,
                "specularity": 0.0,
                "roughness": 0.0
              },
              {
                "identifier": "generic_ceiling_0.80",
                "display_name": null,
                "type": "Plastic",
                "modifier": null,
                "dependencies": [],
                "r_reflectance": 0.8,
                "g_reflectance": 0.8,
                "b_reflectance": 0.8,
                "specularity": 0.0,
                "roughness": 0.0
              },
              {
                "identifier": "generic_opaque_door_0.50",
                "display_name": null,
                "type": "Plastic",
                "modifier": null,
                "dependencies": [],
                "r_reflectance": 0.5,
                "g_reflectance": 0.5,
                "b_reflectance": 0.5,
                "specularity": 0.0,
                "roughness": 0.0
              },
              {
                "identifier": "generic_interior_shade_0.50",
                "display_name": null,
                "type": "Plastic",
                "modifier": null,
                "dependencies": [],
                "r_reflectance": 0.5,
                "g_reflectance": 0.5,
                "b_reflectance": 0.5,
                "specularity": 0.0,
                "roughness": 0.0
              },
              {
                "identifier": "generic_exterior_shade_0.35",
                "display_name": null,
                "type": "Plastic",
                "modifier": null,
                "dependencies": [],
                "r_reflectance": 0.35,
                "g_reflectance": 0.35,
                "b_reflectance": 0.35,
                "specularity": 0.0,
                "roughness": 0.0
              },
              {
                "identifier": "generic_context_0.20",
                "display_name": null,
                "type": "Plastic",
                "modifier": null,
                "dependencies": [],
                "r_reflectance": 0.2,
                "g_reflectance": 0.2,
                "b_reflectance": 0.2,
                "specularity": 0.0,
                "roughness": 0.0
              },
              {
                "identifier": "generic_interior_window_vis_0.88",
                "display_name": null,
                "type": "Glass",
                "modifier": null,
                "dependencies": [],
                "r_transmissivity": 0.9584154328610596,
                "g_transmissivity": 0.9584154328610596,
                "b_transmissivity": 0.9584154328610596,
                "refraction_index": null
              },
              {
                "identifier": "generic_exterior_window_vis_0.64",
                "display_name": null,
                "type": "Glass",
                "modifier": null,
                "dependencies": [],
                "r_transmissivity": 0.6975761815384331,
                "g_transmissivity": 0.6975761815384331,
                "b_transmissivity": 0.6975761815384331,
                "refraction_index": null
              },
              {
                "identifier": "air_boundary",
                "display_name": null,
                "type": "Trans",
                "modifier": null,
                "dependencies": [],
                "r_reflectance": 1.0,
                "g_reflectance": 1.0,
                "b_reflectance": 1.0,
                "specularity": 0.0,
                "roughness": 0.0,
                "transmitted_diff": 1.0,
                "transmitted_spec": 1.0
              }
            ],
            "readOnly": true,
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Plastic"
                },
                {
                  "$ref": "#/components/schemas/Glass"
                },
                {
                  "$ref": "#/components/schemas/Trans"
                }
              ]
            }
          },
          "wall_set": {
            "title": "Wall Set",
            "description": "Global Honeybee WallModifierSet.",
            "default": {
              "exterior_modifier": "generic_wall_0.50",
              "interior_modifier": "generic_wall_0.50",
              "type": "WallModifierSetAbridged"
            },
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/WallModifierSetAbridged"
              }
            ]
          },
          "floor_set": {
            "title": "Floor Set",
            "description": "Global Honeybee FloorModifierSet.",
            "default": {
              "exterior_modifier": "generic_floor_0.20",
              "interior_modifier": "generic_floor_0.20",
              "type": "FloorModifierSetAbridged"
            },
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/FloorModifierSetAbridged"
              }
            ]
          },
          "roof_ceiling_set": {
            "title": "Roof Ceiling Set",
            "description": "Global Honeybee RoofCeilingModifierSet.",
            "default": {
              "exterior_modifier": "generic_ceiling_0.80",
              "interior_modifier": "generic_ceiling_0.80",
              "type": "RoofCeilingModifierSetAbridged"
            },
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/RoofCeilingModifierSetAbridged"
              }
            ]
          },
          "aperture_set": {
            "title": "Aperture Set",
            "description": "Global Honeybee ApertureModifierSet.",
            "default": {
              "type": "ApertureModifierSetAbridged",
              "window_modifier": "generic_exterior_window_vis_0.64",
              "interior_modifier": "generic_interior_window_vis_0.88",
              "skylight_modifier": "generic_exterior_window_vis_0.64",
              "operable_modifier": "generic_exterior_window_vis_0.64"
            },
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ApertureModifierSetAbridged"
              }
            ]
          },
          "door_set": {
            "title": "Door Set",
            "description": "Global Honeybee DoorModifierSet.",
            "default": {
              "exterior_modifier": "generic_opaque_door_0.50",
              "interior_modifier": "generic_opaque_door_0.50",
              "type": "DoorModifierSetAbridged",
              "interior_glass_modifier": "generic_interior_window_vis_0.88",
              "exterior_glass_modifier": "generic_exterior_window_vis_0.64",
              "overhead_modifier": "generic_opaque_door_0.50"
            },
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/DoorModifierSetAbridged"
              }
            ]
          },
          "shade_set": {
            "title": "Shade Set",
            "description": "Global Honeybee ShadeModifierSet.",
            "default": {
              "exterior_modifier": "generic_exterior_shade_0.35",
              "interior_modifier": "generic_interior_shade_0.50",
              "type": "ShadeModifierSetAbridged"
            },
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ShadeModifierSetAbridged"
              }
            ]
          },
          "air_boundary_modifier": {
            "title": "Air Boundary Modifier",
            "description": "Global Honeybee Modifier for AirBoundary Faces.",
            "default": "air_boundary",
            "readOnly": true,
            "type": "string"
          },
          "context_modifier": {
            "title": "Context Modifier",
            "description": "Global Honeybee Modifier for context Shades.",
            "default": "generic_context_0.20",
            "readOnly": true,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WallModifierSet": {
        "title": "WallModifierSet",
        "description": "Set containing radiance modifiers needed for a model's Walls.",
        "type": "object",
        "properties": {
          "exterior_modifier": {
            "title": "Exterior Modifier",
            "description": "A radiance modifier object for faces with an Outdoors boundary condition.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/Plastic"
              },
              {
                "$ref": "#/components/schemas/Glass"
              },
              {
                "$ref": "#/components/schemas/BSDF"
              },
              {
                "$ref": "#/components/schemas/Glow"
              },
              {
                "$ref": "#/components/schemas/Light"
              },
              {
                "$ref": "#/components/schemas/Trans"
              },
              {
                "$ref": "#/components/schemas/Metal"
              },
              {
                "$ref": "#/components/schemas/Void"
              },
              {
                "$ref": "#/components/schemas/Mirror"
              }
            ]
          },
          "interior_modifier": {
            "title": "Interior Modifier",
            "description": "A radiance modifier object for faces with a boundary condition other than Outdoors.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/Plastic"
              },
              {
                "$ref": "#/components/schemas/Glass"
              },
              {
                "$ref": "#/components/schemas/BSDF"
              },
              {
                "$ref": "#/components/schemas/Glow"
              },
              {
                "$ref": "#/components/schemas/Light"
              },
              {
                "$ref": "#/components/schemas/Trans"
              },
              {
                "$ref": "#/components/schemas/Metal"
              },
              {
                "$ref": "#/components/schemas/Void"
              },
              {
                "$ref": "#/components/schemas/Mirror"
              }
            ]
          },
          "type": {
            "title": "Type",
            "default": "WallModifierSet",
            "pattern": "^WallModifierSet$",
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FloorModifierSet": {
        "title": "FloorModifierSet",
        "description": "Set containing radiance modifiers needed for a model's Floors.",
        "type": "object",
        "properties": {
          "exterior_modifier": {
            "title": "Exterior Modifier",
            "description": "A radiance modifier object for faces with an Outdoors boundary condition.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/Plastic"
              },
              {
                "$ref": "#/components/schemas/Glass"
              },
              {
                "$ref": "#/components/schemas/BSDF"
              },
              {
                "$ref": "#/components/schemas/Glow"
              },
              {
                "$ref": "#/components/schemas/Light"
              },
              {
                "$ref": "#/components/schemas/Trans"
              },
              {
                "$ref": "#/components/schemas/Metal"
              },
              {
                "$ref": "#/components/schemas/Void"
              },
              {
                "$ref": "#/components/schemas/Mirror"
              }
            ]
          },
          "interior_modifier": {
            "title": "Interior Modifier",
            "description": "A radiance modifier object for faces with a boundary condition other than Outdoors.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/Plastic"
              },
              {
                "$ref": "#/components/schemas/Glass"
              },
              {
                "$ref": "#/components/schemas/BSDF"
              },
              {
                "$ref": "#/components/schemas/Glow"
              },
              {
                "$ref": "#/components/schemas/Light"
              },
              {
                "$ref": "#/components/schemas/Trans"
              },
              {
                "$ref": "#/components/schemas/Metal"
              },
              {
                "$ref": "#/components/schemas/Void"
              },
              {
                "$ref": "#/components/schemas/Mirror"
              }
            ]
          },
          "type": {
            "title": "Type",
            "default": "FloorModifierSet",
            "pattern": "^FloorModifierSet$",
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "RoofCeilingModifierSet": {
        "title": "RoofCeilingModifierSet",
        "description": "Set containing radiance modifiers needed for a model's roofs.",
        "type": "object",
        "properties": {
          "exterior_modifier": {
            "title": "Exterior Modifier",
            "description": "A radiance modifier object for faces with an Outdoors boundary condition.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/Plastic"
              },
              {
                "$ref": "#/components/schemas/Glass"
              },
              {
                "$ref": "#/components/schemas/BSDF"
              },
              {
                "$ref": "#/components/schemas/Glow"
              },
              {
                "$ref": "#/components/schemas/Light"
              },
              {
                "$ref": "#/components/schemas/Trans"
              },
              {
                "$ref": "#/components/schemas/Metal"
              },
              {
                "$ref": "#/components/schemas/Void"
              },
              {
                "$ref": "#/components/schemas/Mirror"
              }
            ]
          },
          "interior_modifier": {
            "title": "Interior Modifier",
            "description": "A radiance modifier object for faces with a boundary condition other than Outdoors.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/Plastic"
              },
              {
                "$ref": "#/components/schemas/Glass"
              },
              {
                "$ref": "#/components/schemas/BSDF"
              },
              {
                "$ref": "#/components/schemas/Glow"
              },
              {
                "$ref": "#/components/schemas/Light"
              },
              {
                "$ref": "#/components/schemas/Trans"
              },
              {
                "$ref": "#/components/schemas/Metal"
              },
              {
                "$ref": "#/components/schemas/Void"
              },
              {
                "$ref": "#/components/schemas/Mirror"
              }
            ]
          },
          "type": {
            "title": "Type",
            "default": "RoofCeilingModifierSet",
            "pattern": "^RoofCeilingModifierSet$",
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApertureModifierSet": {
        "title": "ApertureModifierSet",
        "description": "Set containing radiance modifiers needed for a model's Apertures.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "ApertureModifierSet",
            "pattern": "^ApertureModifierSet$",
            "type": "string",
            "readOnly": true
          },
          "window_modifier": {
            "title": "Window Modifier",
            "description": "A modifier object for apertures with an Outdoors boundary condition, False is_operable property, and Wall parent Face.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/Plastic"
              },
              {
                "$ref": "#/components/schemas/Glass"
              },
              {
                "$ref": "#/components/schemas/BSDF"
              },
              {
                "$ref": "#/components/schemas/Glow"
              },
              {
                "$ref": "#/components/schemas/Light"
              },
              {
                "$ref": "#/components/schemas/Trans"
              },
              {
                "$ref": "#/components/schemas/Metal"
              },
              {
                "$ref": "#/components/schemas/Void"
              },
              {
                "$ref": "#/components/schemas/Mirror"
              }
            ]
          },
          "interior_modifier": {
            "title": "Interior Modifier",
            "description": "A modifier object for apertures with a Surface boundary condition.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/Plastic"
              },
              {
                "$ref": "#/components/schemas/Glass"
              },
              {
                "$ref": "#/components/schemas/BSDF"
              },
              {
                "$ref": "#/components/schemas/Glow"
              },
              {
                "$ref": "#/components/schemas/Light"
              },
              {
                "$ref": "#/components/schemas/Trans"
              },
              {
                "$ref": "#/components/schemas/Metal"
              },
              {
                "$ref": "#/components/schemas/Void"
              },
              {
                "$ref": "#/components/schemas/Mirror"
              }
            ]
          },
          "skylight_modifier": {
            "title": "Skylight Modifier",
            "description": "A modifier object for apertures with an Outdoors boundary condition, False is_operable property, and a RoofCeiling or Floor face type for their parent face.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/Plastic"
              },
              {
                "$ref": "#/components/schemas/Glass"
              },
              {
                "$ref": "#/components/schemas/BSDF"
              },
              {
                "$ref": "#/components/schemas/Glow"
              },
              {
                "$ref": "#/components/schemas/Light"
              },
              {
                "$ref": "#/components/schemas/Trans"
              },
              {
                "$ref": "#/components/schemas/Metal"
              },
              {
                "$ref": "#/components/schemas/Void"
              },
              {
                "$ref": "#/components/schemas/Mirror"
              }
            ]
          },
          "operable_modifier": {
            "title": "Operable Modifier",
            "description": "A modifier object for apertures with an Outdoors boundary condition and a True is_operable property.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/Plastic"
              },
              {
                "$ref": "#/components/schemas/Glass"
              },
              {
                "$ref": "#/components/schemas/BSDF"
              },
              {
                "$ref": "#/components/schemas/Glow"
              },
              {
                "$ref": "#/components/schemas/Light"
              },
              {
                "$ref": "#/components/schemas/Trans"
              },
              {
                "$ref": "#/components/schemas/Metal"
              },
              {
                "$ref": "#/components/schemas/Void"
              },
              {
                "$ref": "#/components/schemas/Mirror"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "DoorModifierSet": {
        "title": "DoorModifierSet",
        "description": "Set containing radiance modifiers needed for a model's Doors.",
        "type": "object",
        "properties": {
          "exterior_modifier": {
            "title": "Exterior Modifier",
            "description": "A radiance modifier object for faces with an Outdoors boundary condition.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/Plastic"
              },
              {
                "$ref": "#/components/schemas/Glass"
              },
              {
                "$ref": "#/components/schemas/BSDF"
              },
              {
                "$ref": "#/components/schemas/Glow"
              },
              {
                "$ref": "#/components/schemas/Light"
              },
              {
                "$ref": "#/components/schemas/Trans"
              },
              {
                "$ref": "#/components/schemas/Metal"
              },
              {
                "$ref": "#/components/schemas/Void"
              },
              {
                "$ref": "#/components/schemas/Mirror"
              }
            ]
          },
          "interior_modifier": {
            "title": "Interior Modifier",
            "description": "A radiance modifier object for faces with a boundary condition other than Outdoors.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/Plastic"
              },
              {
                "$ref": "#/components/schemas/Glass"
              },
              {
                "$ref": "#/components/schemas/BSDF"
              },
              {
                "$ref": "#/components/schemas/Glow"
              },
              {
                "$ref": "#/components/schemas/Light"
              },
              {
                "$ref": "#/components/schemas/Trans"
              },
              {
                "$ref": "#/components/schemas/Metal"
              },
              {
                "$ref": "#/components/schemas/Void"
              },
              {
                "$ref": "#/components/schemas/Mirror"
              }
            ]
          },
          "type": {
            "title": "Type",
            "default": "DoorModifierSet",
            "pattern": "^DoorModifierSet$",
            "type": "string",
            "readOnly": true
          },
          "interior_glass_modifier": {
            "title": "Interior Glass Modifier",
            "description": "A modifier object for glass with a Surface boundary condition.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/Plastic"
              },
              {
                "$ref": "#/components/schemas/Glass"
              },
              {
                "$ref": "#/components/schemas/BSDF"
              },
              {
                "$ref": "#/components/schemas/Glow"
              },
              {
                "$ref": "#/components/schemas/Light"
              },
              {
                "$ref": "#/components/schemas/Trans"
              },
              {
                "$ref": "#/components/schemas/Metal"
              },
              {
                "$ref": "#/components/schemas/Void"
              },
              {
                "$ref": "#/components/schemas/Mirror"
              }
            ]
          },
          "exterior_glass_modifier": {
            "title": "Exterior Glass Modifier",
            "description": "A modifier object for glass with an Outdoors boundary condition.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/Plastic"
              },
              {
                "$ref": "#/components/schemas/Glass"
              },
              {
                "$ref": "#/components/schemas/BSDF"
              },
              {
                "$ref": "#/components/schemas/Glow"
              },
              {
                "$ref": "#/components/schemas/Light"
              },
              {
                "$ref": "#/components/schemas/Trans"
              },
              {
                "$ref": "#/components/schemas/Metal"
              },
              {
                "$ref": "#/components/schemas/Void"
              },
              {
                "$ref": "#/components/schemas/Mirror"
              }
            ]
          },
          "overhead_modifier": {
            "title": "Overhead Modifier",
            "description": "A window modifier object for doors with an Outdoors boundary condition and a RoofCeiling or Floor face type for their parent face.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/Plastic"
              },
              {
                "$ref": "#/components/schemas/Glass"
              },
              {
                "$ref": "#/components/schemas/BSDF"
              },
              {
                "$ref": "#/components/schemas/Glow"
              },
              {
                "$ref": "#/components/schemas/Light"
              },
              {
                "$ref": "#/components/schemas/Trans"
              },
              {
                "$ref": "#/components/schemas/Metal"
              },
              {
                "$ref": "#/components/schemas/Void"
              },
              {
                "$ref": "#/components/schemas/Mirror"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "ShadeModifierSet": {
        "title": "ShadeModifierSet",
        "description": "Set containing radiance modifiers needed for a model's Shade.",
        "type": "object",
        "properties": {
          "exterior_modifier": {
            "title": "Exterior Modifier",
            "description": "A radiance modifier object for faces with an Outdoors boundary condition.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/Plastic"
              },
              {
                "$ref": "#/components/schemas/Glass"
              },
              {
                "$ref": "#/components/schemas/BSDF"
              },
              {
                "$ref": "#/components/schemas/Glow"
              },
              {
                "$ref": "#/components/schemas/Light"
              },
              {
                "$ref": "#/components/schemas/Trans"
              },
              {
                "$ref": "#/components/schemas/Metal"
              },
              {
                "$ref": "#/components/schemas/Void"
              },
              {
                "$ref": "#/components/schemas/Mirror"
              }
            ]
          },
          "interior_modifier": {
            "title": "Interior Modifier",
            "description": "A radiance modifier object for faces with a boundary condition other than Outdoors.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/Plastic"
              },
              {
                "$ref": "#/components/schemas/Glass"
              },
              {
                "$ref": "#/components/schemas/BSDF"
              },
              {
                "$ref": "#/components/schemas/Glow"
              },
              {
                "$ref": "#/components/schemas/Light"
              },
              {
                "$ref": "#/components/schemas/Trans"
              },
              {
                "$ref": "#/components/schemas/Metal"
              },
              {
                "$ref": "#/components/schemas/Void"
              },
              {
                "$ref": "#/components/schemas/Mirror"
              }
            ]
          },
          "type": {
            "title": "Type",
            "default": "ShadeModifierSet",
            "pattern": "^ShadeModifierSet$",
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ModifierSet": {
        "title": "ModifierSet",
        "description": "Set containing all radiance modifiers needed to create a radiance model.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique Radiance object. Must not contain spaces or special characters. This will be used to identify the object across a model and in the exported Radiance files.",
            "minLength": 1,
            "pattern": "^[.A-Za-z0-9_-]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "ModifierSet",
            "pattern": "^ModifierSet$",
            "type": "string",
            "readOnly": true
          },
          "wall_set": {
            "title": "Wall Set",
            "description": "An optional WallModifierSet object for this ModifierSet. (default: None).",
            "allOf": [
              {
                "$ref": "#/components/schemas/WallModifierSet"
              }
            ]
          },
          "floor_set": {
            "title": "Floor Set",
            "description": "An optional FloorModifierSet object for this ModifierSet. (default: None).",
            "allOf": [
              {
                "$ref": "#/components/schemas/FloorModifierSet"
              }
            ]
          },
          "roof_ceiling_set": {
            "title": "Roof Ceiling Set",
            "description": "An optional RoofCeilingModifierSet object for this ModifierSet. (default: None).",
            "allOf": [
              {
                "$ref": "#/components/schemas/RoofCeilingModifierSet"
              }
            ]
          },
          "aperture_set": {
            "title": "Aperture Set",
            "description": "An optional ApertureModifierSet object for this ModifierSet. (default: None).",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApertureModifierSet"
              }
            ]
          },
          "door_set": {
            "title": "Door Set",
            "description": "An optional DoorModifierSet object for this ModifierSet. (default: None).",
            "allOf": [
              {
                "$ref": "#/components/schemas/DoorModifierSet"
              }
            ]
          },
          "shade_set": {
            "title": "Shade Set",
            "description": "An optional ShadeModifierSet object for this ModifierSet. (default: None).",
            "allOf": [
              {
                "$ref": "#/components/schemas/ShadeModifierSet"
              }
            ]
          },
          "air_boundary_modifier": {
            "title": "Air Boundary Modifier",
            "description": "An optional Modifier to be used for all Faces with an AirBoundary face type. If None, it will be the honeybee generic air wall modifier.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/Plastic"
              },
              {
                "$ref": "#/components/schemas/Glass"
              },
              {
                "$ref": "#/components/schemas/BSDF"
              },
              {
                "$ref": "#/components/schemas/Glow"
              },
              {
                "$ref": "#/components/schemas/Light"
              },
              {
                "$ref": "#/components/schemas/Trans"
              },
              {
                "$ref": "#/components/schemas/Metal"
              },
              {
                "$ref": "#/components/schemas/Void"
              },
              {
                "$ref": "#/components/schemas/Mirror"
              }
            ]
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "ModifierSetAbridged": {
        "title": "ModifierSetAbridged",
        "description": "Abridged set containing all modifiers needed to create a radiance model.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique Radiance object. Must not contain spaces or special characters. This will be used to identify the object across a model and in the exported Radiance files.",
            "minLength": 1,
            "pattern": "^[.A-Za-z0-9_-]+$",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "ModifierSetAbridged",
            "pattern": "^ModifierSetAbridged$",
            "type": "string",
            "readOnly": true
          },
          "wall_set": {
            "title": "Wall Set",
            "description": "Optional WallModifierSet object for this ModifierSet (default: None).",
            "allOf": [
              {
                "$ref": "#/components/schemas/WallModifierSetAbridged"
              }
            ]
          },
          "floor_set": {
            "title": "Floor Set",
            "description": "Optional FloorModifierSet object for this ModifierSet (default: None).",
            "allOf": [
              {
                "$ref": "#/components/schemas/FloorModifierSetAbridged"
              }
            ]
          },
          "roof_ceiling_set": {
            "title": "Roof Ceiling Set",
            "description": "Optional RoofCeilingModifierSet object for this ModifierSet (default: None).",
            "allOf": [
              {
                "$ref": "#/components/schemas/RoofCeilingModifierSetAbridged"
              }
            ]
          },
          "aperture_set": {
            "title": "Aperture Set",
            "description": "Optional ApertureModifierSet object for this ModifierSet (default: None).",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApertureModifierSetAbridged"
              }
            ]
          },
          "door_set": {
            "title": "Door Set",
            "description": "Optional DoorModifierSet object for this ModifierSet (default: None).",
            "allOf": [
              {
                "$ref": "#/components/schemas/DoorModifierSetAbridged"
              }
            ]
          },
          "shade_set": {
            "title": "Shade Set",
            "description": "Optional ShadeModifierSet object for this ModifierSet (default: None).",
            "allOf": [
              {
                "$ref": "#/components/schemas/ShadeModifierSetAbridged"
              }
            ]
          },
          "air_boundary_modifier": {
            "title": "Air Boundary Modifier",
            "description": "Optional Modifier to be used for all Faces with an AirBoundary face type. If None, it will be the honeybee generic air wall modifier.",
            "type": "string"
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "Sensor": {
        "title": "Sensor",
        "description": "A single Radiance of sensors.",
        "type": "object",
        "properties": {
          "pos": {
            "title": "Pos",
            "description": "Position of sensor in space as an array of (x, y, z) values.",
            "minItems": 3,
            "maxItems": 3,
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "dir": {
            "title": "Dir",
            "description": "Direction of sensor as an array of (x, y, z) values.",
            "minItems": 3,
            "maxItems": 3,
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "type": {
            "title": "Type",
            "default": "Sensor",
            "pattern": "^Sensor$",
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "pos",
          "dir"
        ],
        "additionalProperties": false
      },
      "SensorGrid": {
        "title": "SensorGrid",
        "description": "A grid of sensors.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique Radiance object. Must not contain spaces or special characters. This will be used to identify the object across a model and in the exported Radiance files.",
            "minLength": 1,
            "pattern": "^[.A-Za-z0-9_-]+$",
            "type": "string"
          },
          "sensors": {
            "title": "Sensors",
            "description": "A list of sensors that belong to the grid.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sensor"
            }
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "room_identifier": {
            "title": "Room Identifier",
            "description": "Optional text string for the Room identifier to which this object belongs. This will be used to narrow down the number of aperture groups that have to be run with this sensor grid. If None, the grid will be run with all aperture groups in the model.",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[.A-Za-z0-9_-]+$",
            "type": "string"
          },
          "light_path": {
            "title": "Light Path",
            "description": "Get or set a list of lists for the light path from the object to the sky. Each sub-list contains identifiers of aperture groups through which light passes. (eg. [[\"SouthWindow1\"], [\"static_apertures\", \"NorthWindow2\"]]).Setting this property will override any auto-calculation of the light path from the model and room_identifier upon export to the simulation.",
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "type": {
            "title": "Type",
            "default": "SensorGrid",
            "pattern": "^SensorGrid$",
            "type": "string",
            "readOnly": true
          },
          "mesh": {
            "title": "Mesh",
            "description": "An optional Mesh3D that aligns with the sensors and can be used for visualization of the grid. Note that the number of sensors in the grid must match the number of faces or the number vertices within the Mesh3D.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Mesh3D"
              }
            ]
          },
          "base_geometry": {
            "title": "Base Geometry",
            "description": "An optional array of Face3D used to represent the grid. There are no restrictions on how this property relates to the sensors and it is provided only to assist with the display of the grid when the number of sensors or the mesh is too large to be practically visualized.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Face3D"
            }
          },
          "group_identifier": {
            "title": "Group Identifier",
            "description": "An optional string to note the sensor grid group '             'to which the sensor is a part of. Grids sharing the same '             'group_identifier will be written to the same subfolder in Radiance '             'folder (default: None).",
            "type": "string"
          }
        },
        "required": [
          "identifier",
          "sensors"
        ],
        "additionalProperties": false
      },
      "ViewType": {
        "title": "ViewType",
        "description": "A single character for the view type (-vt).",
        "enum": [
          "v",
          "h",
          "l",
          "c",
          "a",
          "s"
        ],
        "type": "string"
      },
      "View": {
        "title": "View",
        "description": "A single Radiance of sensors.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique Radiance object. Must not contain spaces or special characters. This will be used to identify the object across a model and in the exported Radiance files.",
            "minLength": 1,
            "pattern": "^[.A-Za-z0-9_-]+$",
            "type": "string"
          },
          "position": {
            "title": "Position",
            "description": "The view position (-vp) as an array of (x, y, z) values.This is the focal point of a perspective view or the center of a parallel projection.",
            "minItems": 3,
            "maxItems": 3,
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "direction": {
            "title": "Direction",
            "description": "The view direction (-vd) as an array of (x, y, z) values.The length of this vector indicates the focal distance as needed by the pixel depth of field (-pd) in rpict.",
            "minItems": 3,
            "maxItems": 3,
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "up_vector": {
            "title": "Up Vector",
            "description": "The view up (-vu) vector as an array of (x, y, z) values.",
            "minItems": 3,
            "maxItems": 3,
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "room_identifier": {
            "title": "Room Identifier",
            "description": "Optional text string for the Room identifier to which this object belongs. This will be used to narrow down the number of aperture groups that have to be run with this sensor grid. If None, the grid will be run with all aperture groups in the model.",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[.A-Za-z0-9_-]+$",
            "type": "string"
          },
          "light_path": {
            "title": "Light Path",
            "description": "Get or set a list of lists for the light path from the object to the sky. Each sub-list contains identifiers of aperture groups through which light passes. (eg. [[\"SouthWindow1\"], [\"static_apertures\", \"NorthWindow2\"]]).Setting this property will override any auto-calculation of the light path from the model and room_identifier upon export to the simulation.",
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "type": {
            "title": "Type",
            "default": "View",
            "pattern": "^View$",
            "type": "string",
            "readOnly": true
          },
          "view_type": {
            "default": "v",
            "allOf": [
              {
                "$ref": "#/components/schemas/ViewType"
              }
            ]
          },
          "h_size": {
            "title": "H Size",
            "description": "A number for the horizontal field of view in degrees (for all perspective projections including fisheye). For a parallel projection, this is the view width in world coordinates.",
            "default": 60,
            "type": "number",
            "format": "double"
          },
          "v_size": {
            "title": "V Size",
            "description": "A number for the vertical field of view in degrees (for all perspective projections including fisheye). For a parallel projection, this is the view width in world coordinates.",
            "default": 60,
            "type": "number",
            "format": "double"
          },
          "shift": {
            "title": "Shift",
            "description": "The view shift (-vs). This is the amount the actual image will be shifted to the right of the specified view. This option is useful for generating skewed perspectives or rendering an image a piece at a time. A value of 1 means that the rendered image starts just to the right of the normal view. A value of -1 would be to the left. Larger or fractional values are permitted as well.",
            "type": "number",
            "format": "double"
          },
          "lift": {
            "title": "Lift",
            "description": "The view lift (-vl). This is the amount the actual image will be lifted up from the specified view. This option is useful for generating skewed perspectives or rendering an image a piece at a time. A value of 1 means that the rendered image starts just to the right of the normal view. A value of -1 would be to the left. Larger or fractional values are permitted as well.",
            "type": "number",
            "format": "double"
          },
          "fore_clip": {
            "title": "Fore Clip",
            "description": "View fore clip (-vo) at a distance from the view point.The plane will be perpendicular to the view direction for perspective and parallel view types. For fisheye view types, the clipping plane is actually a clipping sphere, centered on the view point with fore_clip radius. Objects in front of this imaginary surface will not be visible.",
            "type": "number",
            "format": "double"
          },
          "aft_clip": {
            "title": "Aft Clip",
            "description": "View aft clip (-va) at a distance from the view point.Like the view fore plane, it will be perpendicular to the view direction for perspective and parallel view types. For fisheye view types, the clipping plane is actually a clipping sphere, centered on the view point with radius val.",
            "type": "number",
            "format": "double"
          },
          "group_identifier": {
            "title": "Group Identifier",
            "description": "An optional string to note the view group '             'to which the sensor is a part of. Views sharing the same '             'group_identifier will be written to the same subfolder in Radiance '             'folder (default: None).",
            "type": "string"
          }
        },
        "required": [
          "identifier",
          "position",
          "direction",
          "up_vector"
        ],
        "additionalProperties": false
      },
      "ModelRadianceProperties": {
        "title": "ModelRadianceProperties",
        "description": "Radiance Properties for Honeybee Model.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "ModelRadianceProperties",
            "pattern": "^ModelRadianceProperties$",
            "type": "string",
            "readOnly": true
          },
          "global_modifier_set": {
            "title": "Global Modifier Set",
            "description": "Global Radiance modifier set.",
            "default": {
              "type": "GlobalModifierSet",
              "modifiers": [
                {
                  "identifier": "generic_floor_0.20",
                  "display_name": null,
                  "type": "Plastic",
                  "modifier": null,
                  "dependencies": [],
                  "r_reflectance": 0.2,
                  "g_reflectance": 0.2,
                  "b_reflectance": 0.2,
                  "specularity": 0.0,
                  "roughness": 0.0
                },
                {
                  "identifier": "generic_wall_0.50",
                  "display_name": null,
                  "type": "Plastic",
                  "modifier": null,
                  "dependencies": [],
                  "r_reflectance": 0.5,
                  "g_reflectance": 0.5,
                  "b_reflectance": 0.5,
                  "specularity": 0.0,
                  "roughness": 0.0
                },
                {
                  "identifier": "generic_ceiling_0.80",
                  "display_name": null,
                  "type": "Plastic",
                  "modifier": null,
                  "dependencies": [],
                  "r_reflectance": 0.8,
                  "g_reflectance": 0.8,
                  "b_reflectance": 0.8,
                  "specularity": 0.0,
                  "roughness": 0.0
                },
                {
                  "identifier": "generic_opaque_door_0.50",
                  "display_name": null,
                  "type": "Plastic",
                  "modifier": null,
                  "dependencies": [],
                  "r_reflectance": 0.5,
                  "g_reflectance": 0.5,
                  "b_reflectance": 0.5,
                  "specularity": 0.0,
                  "roughness": 0.0
                },
                {
                  "identifier": "generic_interior_shade_0.50",
                  "display_name": null,
                  "type": "Plastic",
                  "modifier": null,
                  "dependencies": [],
                  "r_reflectance": 0.5,
                  "g_reflectance": 0.5,
                  "b_reflectance": 0.5,
                  "specularity": 0.0,
                  "roughness": 0.0
                },
                {
                  "identifier": "generic_exterior_shade_0.35",
                  "display_name": null,
                  "type": "Plastic",
                  "modifier": null,
                  "dependencies": [],
                  "r_reflectance": 0.35,
                  "g_reflectance": 0.35,
                  "b_reflectance": 0.35,
                  "specularity": 0.0,
                  "roughness": 0.0
                },
                {
                  "identifier": "generic_context_0.20",
                  "display_name": null,
                  "type": "Plastic",
                  "modifier": null,
                  "dependencies": [],
                  "r_reflectance": 0.2,
                  "g_reflectance": 0.2,
                  "b_reflectance": 0.2,
                  "specularity": 0.0,
                  "roughness": 0.0
                },
                {
                  "identifier": "generic_interior_window_vis_0.88",
                  "display_name": null,
                  "type": "Glass",
                  "modifier": null,
                  "dependencies": [],
                  "r_transmissivity": 0.9584154328610596,
                  "g_transmissivity": 0.9584154328610596,
                  "b_transmissivity": 0.9584154328610596,
                  "refraction_index": null
                },
                {
                  "identifier": "generic_exterior_window_vis_0.64",
                  "display_name": null,
                  "type": "Glass",
                  "modifier": null,
                  "dependencies": [],
                  "r_transmissivity": 0.6975761815384331,
                  "g_transmissivity": 0.6975761815384331,
                  "b_transmissivity": 0.6975761815384331,
                  "refraction_index": null
                },
                {
                  "identifier": "air_boundary",
                  "display_name": null,
                  "type": "Trans",
                  "modifier": null,
                  "dependencies": [],
                  "r_reflectance": 1.0,
                  "g_reflectance": 1.0,
                  "b_reflectance": 1.0,
                  "specularity": 0.0,
                  "roughness": 0.0,
                  "transmitted_diff": 1.0,
                  "transmitted_spec": 1.0
                }
              ],
              "wall_set": {
                "exterior_modifier": "generic_wall_0.50",
                "interior_modifier": "generic_wall_0.50",
                "type": "WallModifierSetAbridged"
              },
              "floor_set": {
                "exterior_modifier": "generic_floor_0.20",
                "interior_modifier": "generic_floor_0.20",
                "type": "FloorModifierSetAbridged"
              },
              "roof_ceiling_set": {
                "exterior_modifier": "generic_ceiling_0.80",
                "interior_modifier": "generic_ceiling_0.80",
                "type": "RoofCeilingModifierSetAbridged"
              },
              "aperture_set": {
                "type": "ApertureModifierSetAbridged",
                "window_modifier": "generic_exterior_window_vis_0.64",
                "interior_modifier": "generic_interior_window_vis_0.88",
                "skylight_modifier": "generic_exterior_window_vis_0.64",
                "operable_modifier": "generic_exterior_window_vis_0.64"
              },
              "door_set": {
                "exterior_modifier": "generic_opaque_door_0.50",
                "interior_modifier": "generic_opaque_door_0.50",
                "type": "DoorModifierSetAbridged",
                "interior_glass_modifier": "generic_interior_window_vis_0.88",
                "exterior_glass_modifier": "generic_exterior_window_vis_0.64",
                "overhead_modifier": "generic_opaque_door_0.50"
              },
              "shade_set": {
                "exterior_modifier": "generic_exterior_shade_0.35",
                "interior_modifier": "generic_interior_shade_0.50",
                "type": "ShadeModifierSetAbridged"
              },
              "air_boundary_modifier": "air_boundary",
              "context_modifier": "generic_context_0.20"
            },
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/GlobalModifierSet"
              }
            ]
          },
          "modifiers": {
            "title": "Modifiers",
            "description": "A list of all unique modifiers in the model. This includes modifiers across all Faces, Apertures, Doors, Shades, Room ModifierSets, and the global_modifier_set.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Plastic"
                },
                {
                  "$ref": "#/components/schemas/Glass"
                },
                {
                  "$ref": "#/components/schemas/BSDF"
                },
                {
                  "$ref": "#/components/schemas/Glow"
                },
                {
                  "$ref": "#/components/schemas/Light"
                },
                {
                  "$ref": "#/components/schemas/Trans"
                },
                {
                  "$ref": "#/components/schemas/Metal"
                },
                {
                  "$ref": "#/components/schemas/Void"
                },
                {
                  "$ref": "#/components/schemas/Mirror"
                }
              ]
            }
          },
          "modifier_sets": {
            "title": "Modifier Sets",
            "description": "A list of all unique Room-Assigned ModifierSets in the Model.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ModifierSet"
                },
                {
                  "$ref": "#/components/schemas/ModifierSetAbridged"
                }
              ]
            }
          },
          "sensor_grids": {
            "title": "Sensor Grids",
            "description": "An array of SensorGrids that are associated with the model.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SensorGrid"
            }
          },
          "views": {
            "title": "Views",
            "description": "An array of Views that are associated with the model.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/View"
            }
          }
        },
        "additionalProperties": false
      },
      "ModelDoe2Properties": {
        "title": "ModelDoe2Properties",
        "description": "Base class for all objects that are not extensible with additional keys.\n\nThis effectively includes all objects except for the Properties classes\nthat are assigned to geometry objects.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "ModelDoe2Properties",
            "pattern": "^ModelDoe2Properties$",
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ModelProperties": {
        "title": "ModelProperties",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "ModelProperties",
            "pattern": "^ModelProperties$",
            "type": "string",
            "readOnly": true
          },
          "energy": {
            "$ref": "#/components/schemas/ModelEnergyProperties"
          },
          "radiance": {
            "$ref": "#/components/schemas/ModelRadianceProperties"
          },
          "doe2": {
            "$ref": "#/components/schemas/ModelDoe2Properties"
          }
        }
      },
      "Model": {
        "title": "Model",
        "description": "Base class for all objects requiring a identifiers acceptable for all engines.",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "description": "Text string for a unique object ID. This identifier remains constant as the object is mutated, copied, and serialized to different formats (eg. dict, idf, rad). This identifier is also used to reference the object across a Model. It must be < 100 characters and not contain any spaces or special characters.",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[.A-Za-z0-9_-]+$",
            "type": "string"
          },
          "properties": {
            "title": "Properties",
            "description": "Extension properties for particular simulation engines (Radiance, EnergyPlus).",
            "allOf": [
              {
                "$ref": "#/components/schemas/ModelProperties"
              }
            ]
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no character restrictions.",
            "type": "string"
          },
          "user_data": {
            "title": "User Data",
            "description": "Optional dictionary of user data associated with the object.All keys and values of this dictionary should be of a standard data type to ensure correct serialization of the object (eg. str, float, int, list).",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "default": "Model",
            "pattern": "^Model$",
            "type": "string",
            "readOnly": true
          },
          "version": {
            "title": "Version",
            "description": "Text string for the current version of the schema.",
            "default": "1.59.1",
            "pattern": "([0-9]+)\\.([0-9]+)\\.([0-9]+)",
            "type": "string",
            "readOnly": true
          },
          "rooms": {
            "title": "Rooms",
            "description": "A list of Rooms in the model.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Room"
            }
          },
          "orphaned_faces": {
            "title": "Orphaned Faces",
            "description": "A list of Faces in the model that lack a parent Room. Note that orphaned Faces are not acceptable for Models that are to be exported for energy simulation.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Face"
            }
          },
          "orphaned_shades": {
            "title": "Orphaned Shades",
            "description": "A list of Shades in the model that lack a parent.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Shade"
            }
          },
          "orphaned_apertures": {
            "title": "Orphaned Apertures",
            "description": "A list of Apertures in the model that lack a parent Face. Note that orphaned Apertures are not acceptable for Models that are to be exported for energy simulation.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Aperture"
            }
          },
          "orphaned_doors": {
            "title": "Orphaned Doors",
            "description": "A list of Doors in the model that lack a parent Face. Note that orphaned Doors are not acceptable for Models that are to be exported for energy simulation.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Door"
            }
          },
          "shade_meshes": {
            "title": "Shade Meshes",
            "description": "A list of ShadeMesh in the model.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShadeMesh"
            }
          },
          "units": {
            "description": "Text indicating the units in which the model geometry exists. This is used to scale the geometry to the correct units for simulation engines like EnergyPlus, which requires all geometry be in meters.",
            "default": "Meters",
            "allOf": [
              {
                "$ref": "#/components/schemas/Units"
              }
            ]
          },
          "tolerance": {
            "title": "Tolerance",
            "description": "The maximum difference between x, y, and z values at which vertices are considered equivalent. This value should be in the Model units and it is used in a variety of checks, including checks for whether Room faces form a closed volume and subsequently correcting all face normals point outward from the Room. A value of 0 will result in bypassing all checks so it is recommended that this always be a positive number when such checks have not already been performed on a Model. The default of 0.01 is suitable for models in meters.",
            "default": 0.01,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "angle_tolerance": {
            "title": "Angle Tolerance",
            "description": "The max angle difference in degrees that vertices are allowed to differ from one another in order to consider them colinear. This value is used in a variety of checks, including checks for whether Room faces form a closed volume and subsequently correcting all face normals point outward from the Room. A value of 0 will result in bypassing all checks so it is recommended that this always be a positive number when such checks have not already been performed on a given Model.",
            "default": 1.0,
            "minimum": 0,
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "identifier",
          "properties"
        ],
        "additionalProperties": false
      }
    }
  }
}